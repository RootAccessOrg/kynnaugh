// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/ml/v1beta1/prediction_service.proto
// Original file comments:
// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Google.Cloud.Ml.V1Beta1 {
  /// <summary>
  ///  The Prediction API, which serves predictions for models managed by
  ///  ModelService.
  /// </summary>
  public static class OnlinePredictionService
  {
    static readonly string __ServiceName = "google.cloud.ml.v1beta1.OnlinePredictionService";

    static readonly Marshaller<global::Google.Cloud.Ml.V1Beta1.PredictRequest> __Marshaller_PredictRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Ml.V1Beta1.PredictRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.HttpBody> __Marshaller_HttpBody = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.HttpBody.Parser.ParseFrom);

    static readonly Method<global::Google.Cloud.Ml.V1Beta1.PredictRequest, global::Google.Api.HttpBody> __Method_Predict = new Method<global::Google.Cloud.Ml.V1Beta1.PredictRequest, global::Google.Api.HttpBody>(
        MethodType.Unary,
        __ServiceName,
        "Predict",
        __Marshaller_PredictRequest,
        __Marshaller_HttpBody);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Ml.V1Beta1.PredictionServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of OnlinePredictionService</summary>
    public abstract class OnlinePredictionServiceBase
    {
      /// <summary>
      ///  Performs prediction on the data in the request.
      ///
      ///  Responses are very similar to requests. There are two top-level fields,
      ///  each of which are JSON lists:
      ///
      ///  &lt;dl>
      ///    &lt;dt>predictions&lt;/dt>
      ///    &lt;dd>The list of predictions, one per instance in the request.&lt;/dd>
      ///    &lt;dt>error&lt;/dt>
      ///    &lt;dd>An error message returned instead of a prediction list if any
      ///        instance produced an error.&lt;/dd>
      ///  &lt;/dl>
      ///
      ///  If the call is successful, the response body will contain one prediction
      ///  entry per instance in the request body. If prediction fails for any
      ///  instance, the response body will contain no predictions and will contian
      ///  a single error entry instead.
      ///
      ///  Even though there is one prediction per instance, the format of a
      ///  prediction is not directly related to the format of an instance.
      ///  Predictions take whatever format is specified in the outputs collection
      ///  defined in the model. The collection of predictions is returned in a JSON
      ///  list. Each member of the list can be a simple value, a list, or a JSON
      ///  object of any complexity. If your model has more than one output tensor,
      ///  each prediction will be a JSON object containing a name/value pair for each
      ///  output. The names identify the output aliases in the graph.
      ///
      ///  The following examples show some possible responses:
      ///
      ///  A simple set of predictions for three input instances, where each
      ///  prediction is an integer value:
      ///  &lt;pre>
      ///  {"predictions": [5, 4, 3]}
      ///  &lt;/pre>
      ///  A more complex set of predictions, each containing two named values that
      ///  correspond to output tensors, named **label** and **scores** respectively.
      ///  The value of **label** is the predicted category ("car" or "beach") and
      ///  **scores** contains a list of probabilities for that instance across the
      ///  possible categories.
      ///  &lt;pre>
      ///  {"predictions": [{"label": "beach", "scores": [0.1, 0.9]},
      ///                   {"label": "car", "scores": [0.75, 0.25]}]}
      ///  &lt;/pre>
      ///  A response when there is an error processing an input instance:
      ///  &lt;pre>
      ///  {"error": "Divide by zero"}
      ///  &lt;/pre>
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.HttpBody> Predict(global::Google.Cloud.Ml.V1Beta1.PredictRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for OnlinePredictionService</summary>
    public class OnlinePredictionServiceClient : ClientBase<OnlinePredictionServiceClient>
    {
      /// <summary>Creates a new client for OnlinePredictionService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public OnlinePredictionServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for OnlinePredictionService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public OnlinePredictionServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected OnlinePredictionServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected OnlinePredictionServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Performs prediction on the data in the request.
      ///
      ///  Responses are very similar to requests. There are two top-level fields,
      ///  each of which are JSON lists:
      ///
      ///  &lt;dl>
      ///    &lt;dt>predictions&lt;/dt>
      ///    &lt;dd>The list of predictions, one per instance in the request.&lt;/dd>
      ///    &lt;dt>error&lt;/dt>
      ///    &lt;dd>An error message returned instead of a prediction list if any
      ///        instance produced an error.&lt;/dd>
      ///  &lt;/dl>
      ///
      ///  If the call is successful, the response body will contain one prediction
      ///  entry per instance in the request body. If prediction fails for any
      ///  instance, the response body will contain no predictions and will contian
      ///  a single error entry instead.
      ///
      ///  Even though there is one prediction per instance, the format of a
      ///  prediction is not directly related to the format of an instance.
      ///  Predictions take whatever format is specified in the outputs collection
      ///  defined in the model. The collection of predictions is returned in a JSON
      ///  list. Each member of the list can be a simple value, a list, or a JSON
      ///  object of any complexity. If your model has more than one output tensor,
      ///  each prediction will be a JSON object containing a name/value pair for each
      ///  output. The names identify the output aliases in the graph.
      ///
      ///  The following examples show some possible responses:
      ///
      ///  A simple set of predictions for three input instances, where each
      ///  prediction is an integer value:
      ///  &lt;pre>
      ///  {"predictions": [5, 4, 3]}
      ///  &lt;/pre>
      ///  A more complex set of predictions, each containing two named values that
      ///  correspond to output tensors, named **label** and **scores** respectively.
      ///  The value of **label** is the predicted category ("car" or "beach") and
      ///  **scores** contains a list of probabilities for that instance across the
      ///  possible categories.
      ///  &lt;pre>
      ///  {"predictions": [{"label": "beach", "scores": [0.1, 0.9]},
      ///                   {"label": "car", "scores": [0.75, 0.25]}]}
      ///  &lt;/pre>
      ///  A response when there is an error processing an input instance:
      ///  &lt;pre>
      ///  {"error": "Divide by zero"}
      ///  &lt;/pre>
      /// </summary>
      public virtual global::Google.Api.HttpBody Predict(global::Google.Cloud.Ml.V1Beta1.PredictRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Predict(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Performs prediction on the data in the request.
      ///
      ///  Responses are very similar to requests. There are two top-level fields,
      ///  each of which are JSON lists:
      ///
      ///  &lt;dl>
      ///    &lt;dt>predictions&lt;/dt>
      ///    &lt;dd>The list of predictions, one per instance in the request.&lt;/dd>
      ///    &lt;dt>error&lt;/dt>
      ///    &lt;dd>An error message returned instead of a prediction list if any
      ///        instance produced an error.&lt;/dd>
      ///  &lt;/dl>
      ///
      ///  If the call is successful, the response body will contain one prediction
      ///  entry per instance in the request body. If prediction fails for any
      ///  instance, the response body will contain no predictions and will contian
      ///  a single error entry instead.
      ///
      ///  Even though there is one prediction per instance, the format of a
      ///  prediction is not directly related to the format of an instance.
      ///  Predictions take whatever format is specified in the outputs collection
      ///  defined in the model. The collection of predictions is returned in a JSON
      ///  list. Each member of the list can be a simple value, a list, or a JSON
      ///  object of any complexity. If your model has more than one output tensor,
      ///  each prediction will be a JSON object containing a name/value pair for each
      ///  output. The names identify the output aliases in the graph.
      ///
      ///  The following examples show some possible responses:
      ///
      ///  A simple set of predictions for three input instances, where each
      ///  prediction is an integer value:
      ///  &lt;pre>
      ///  {"predictions": [5, 4, 3]}
      ///  &lt;/pre>
      ///  A more complex set of predictions, each containing two named values that
      ///  correspond to output tensors, named **label** and **scores** respectively.
      ///  The value of **label** is the predicted category ("car" or "beach") and
      ///  **scores** contains a list of probabilities for that instance across the
      ///  possible categories.
      ///  &lt;pre>
      ///  {"predictions": [{"label": "beach", "scores": [0.1, 0.9]},
      ///                   {"label": "car", "scores": [0.75, 0.25]}]}
      ///  &lt;/pre>
      ///  A response when there is an error processing an input instance:
      ///  &lt;pre>
      ///  {"error": "Divide by zero"}
      ///  &lt;/pre>
      /// </summary>
      public virtual global::Google.Api.HttpBody Predict(global::Google.Cloud.Ml.V1Beta1.PredictRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Predict, null, options, request);
      }
      /// <summary>
      ///  Performs prediction on the data in the request.
      ///
      ///  Responses are very similar to requests. There are two top-level fields,
      ///  each of which are JSON lists:
      ///
      ///  &lt;dl>
      ///    &lt;dt>predictions&lt;/dt>
      ///    &lt;dd>The list of predictions, one per instance in the request.&lt;/dd>
      ///    &lt;dt>error&lt;/dt>
      ///    &lt;dd>An error message returned instead of a prediction list if any
      ///        instance produced an error.&lt;/dd>
      ///  &lt;/dl>
      ///
      ///  If the call is successful, the response body will contain one prediction
      ///  entry per instance in the request body. If prediction fails for any
      ///  instance, the response body will contain no predictions and will contian
      ///  a single error entry instead.
      ///
      ///  Even though there is one prediction per instance, the format of a
      ///  prediction is not directly related to the format of an instance.
      ///  Predictions take whatever format is specified in the outputs collection
      ///  defined in the model. The collection of predictions is returned in a JSON
      ///  list. Each member of the list can be a simple value, a list, or a JSON
      ///  object of any complexity. If your model has more than one output tensor,
      ///  each prediction will be a JSON object containing a name/value pair for each
      ///  output. The names identify the output aliases in the graph.
      ///
      ///  The following examples show some possible responses:
      ///
      ///  A simple set of predictions for three input instances, where each
      ///  prediction is an integer value:
      ///  &lt;pre>
      ///  {"predictions": [5, 4, 3]}
      ///  &lt;/pre>
      ///  A more complex set of predictions, each containing two named values that
      ///  correspond to output tensors, named **label** and **scores** respectively.
      ///  The value of **label** is the predicted category ("car" or "beach") and
      ///  **scores** contains a list of probabilities for that instance across the
      ///  possible categories.
      ///  &lt;pre>
      ///  {"predictions": [{"label": "beach", "scores": [0.1, 0.9]},
      ///                   {"label": "car", "scores": [0.75, 0.25]}]}
      ///  &lt;/pre>
      ///  A response when there is an error processing an input instance:
      ///  &lt;pre>
      ///  {"error": "Divide by zero"}
      ///  &lt;/pre>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.HttpBody> PredictAsync(global::Google.Cloud.Ml.V1Beta1.PredictRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return PredictAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Performs prediction on the data in the request.
      ///
      ///  Responses are very similar to requests. There are two top-level fields,
      ///  each of which are JSON lists:
      ///
      ///  &lt;dl>
      ///    &lt;dt>predictions&lt;/dt>
      ///    &lt;dd>The list of predictions, one per instance in the request.&lt;/dd>
      ///    &lt;dt>error&lt;/dt>
      ///    &lt;dd>An error message returned instead of a prediction list if any
      ///        instance produced an error.&lt;/dd>
      ///  &lt;/dl>
      ///
      ///  If the call is successful, the response body will contain one prediction
      ///  entry per instance in the request body. If prediction fails for any
      ///  instance, the response body will contain no predictions and will contian
      ///  a single error entry instead.
      ///
      ///  Even though there is one prediction per instance, the format of a
      ///  prediction is not directly related to the format of an instance.
      ///  Predictions take whatever format is specified in the outputs collection
      ///  defined in the model. The collection of predictions is returned in a JSON
      ///  list. Each member of the list can be a simple value, a list, or a JSON
      ///  object of any complexity. If your model has more than one output tensor,
      ///  each prediction will be a JSON object containing a name/value pair for each
      ///  output. The names identify the output aliases in the graph.
      ///
      ///  The following examples show some possible responses:
      ///
      ///  A simple set of predictions for three input instances, where each
      ///  prediction is an integer value:
      ///  &lt;pre>
      ///  {"predictions": [5, 4, 3]}
      ///  &lt;/pre>
      ///  A more complex set of predictions, each containing two named values that
      ///  correspond to output tensors, named **label** and **scores** respectively.
      ///  The value of **label** is the predicted category ("car" or "beach") and
      ///  **scores** contains a list of probabilities for that instance across the
      ///  possible categories.
      ///  &lt;pre>
      ///  {"predictions": [{"label": "beach", "scores": [0.1, 0.9]},
      ///                   {"label": "car", "scores": [0.75, 0.25]}]}
      ///  &lt;/pre>
      ///  A response when there is an error processing an input instance:
      ///  &lt;pre>
      ///  {"error": "Divide by zero"}
      ///  &lt;/pre>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.HttpBody> PredictAsync(global::Google.Cloud.Ml.V1Beta1.PredictRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Predict, null, options, request);
      }
      protected override OnlinePredictionServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OnlinePredictionServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(OnlinePredictionServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Predict, serviceImpl.Predict).Build();
    }

  }
}
#endregion
