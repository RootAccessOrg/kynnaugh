// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/example/library/v1/library.proto
// Original file comments:
// Copyright (c) 2015, Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Google.Example.Library.V1 {
  /// <summary>
  ///  This API represents a simple digital library.  It lets you manage Shelf
  ///  resources and Book resources in the library. It defines the following
  ///  resource model:
  ///
  ///  - The API has a collection of [Shelf][google.example.library.v1.Shelf]
  ///    resources, named `shelves/*`
  ///
  ///  - Each Shelf has a collection of [Book][google.example.library.v1.Book]
  ///    resources, named `shelves/*/books/*`
  /// </summary>
  public static class LibraryService
  {
    static readonly string __ServiceName = "google.example.library.v1.LibraryService";

    static readonly Marshaller<global::Google.Example.Library.V1.CreateShelfRequest> __Marshaller_CreateShelfRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.CreateShelfRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.Shelf> __Marshaller_Shelf = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.Shelf.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.GetShelfRequest> __Marshaller_GetShelfRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.GetShelfRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.ListShelvesRequest> __Marshaller_ListShelvesRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.ListShelvesRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.ListShelvesResponse> __Marshaller_ListShelvesResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.ListShelvesResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.DeleteShelfRequest> __Marshaller_DeleteShelfRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.DeleteShelfRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.MergeShelvesRequest> __Marshaller_MergeShelvesRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.MergeShelvesRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.CreateBookRequest> __Marshaller_CreateBookRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.CreateBookRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.Book> __Marshaller_Book = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.Book.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.GetBookRequest> __Marshaller_GetBookRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.GetBookRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.ListBooksRequest> __Marshaller_ListBooksRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.ListBooksRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.ListBooksResponse> __Marshaller_ListBooksResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.ListBooksResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.DeleteBookRequest> __Marshaller_DeleteBookRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.DeleteBookRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.UpdateBookRequest> __Marshaller_UpdateBookRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.UpdateBookRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Example.Library.V1.MoveBookRequest> __Marshaller_MoveBookRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Example.Library.V1.MoveBookRequest.Parser.ParseFrom);

    static readonly Method<global::Google.Example.Library.V1.CreateShelfRequest, global::Google.Example.Library.V1.Shelf> __Method_CreateShelf = new Method<global::Google.Example.Library.V1.CreateShelfRequest, global::Google.Example.Library.V1.Shelf>(
        MethodType.Unary,
        __ServiceName,
        "CreateShelf",
        __Marshaller_CreateShelfRequest,
        __Marshaller_Shelf);

    static readonly Method<global::Google.Example.Library.V1.GetShelfRequest, global::Google.Example.Library.V1.Shelf> __Method_GetShelf = new Method<global::Google.Example.Library.V1.GetShelfRequest, global::Google.Example.Library.V1.Shelf>(
        MethodType.Unary,
        __ServiceName,
        "GetShelf",
        __Marshaller_GetShelfRequest,
        __Marshaller_Shelf);

    static readonly Method<global::Google.Example.Library.V1.ListShelvesRequest, global::Google.Example.Library.V1.ListShelvesResponse> __Method_ListShelves = new Method<global::Google.Example.Library.V1.ListShelvesRequest, global::Google.Example.Library.V1.ListShelvesResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListShelves",
        __Marshaller_ListShelvesRequest,
        __Marshaller_ListShelvesResponse);

    static readonly Method<global::Google.Example.Library.V1.DeleteShelfRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteShelf = new Method<global::Google.Example.Library.V1.DeleteShelfRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "DeleteShelf",
        __Marshaller_DeleteShelfRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Example.Library.V1.MergeShelvesRequest, global::Google.Example.Library.V1.Shelf> __Method_MergeShelves = new Method<global::Google.Example.Library.V1.MergeShelvesRequest, global::Google.Example.Library.V1.Shelf>(
        MethodType.Unary,
        __ServiceName,
        "MergeShelves",
        __Marshaller_MergeShelvesRequest,
        __Marshaller_Shelf);

    static readonly Method<global::Google.Example.Library.V1.CreateBookRequest, global::Google.Example.Library.V1.Book> __Method_CreateBook = new Method<global::Google.Example.Library.V1.CreateBookRequest, global::Google.Example.Library.V1.Book>(
        MethodType.Unary,
        __ServiceName,
        "CreateBook",
        __Marshaller_CreateBookRequest,
        __Marshaller_Book);

    static readonly Method<global::Google.Example.Library.V1.GetBookRequest, global::Google.Example.Library.V1.Book> __Method_GetBook = new Method<global::Google.Example.Library.V1.GetBookRequest, global::Google.Example.Library.V1.Book>(
        MethodType.Unary,
        __ServiceName,
        "GetBook",
        __Marshaller_GetBookRequest,
        __Marshaller_Book);

    static readonly Method<global::Google.Example.Library.V1.ListBooksRequest, global::Google.Example.Library.V1.ListBooksResponse> __Method_ListBooks = new Method<global::Google.Example.Library.V1.ListBooksRequest, global::Google.Example.Library.V1.ListBooksResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListBooks",
        __Marshaller_ListBooksRequest,
        __Marshaller_ListBooksResponse);

    static readonly Method<global::Google.Example.Library.V1.DeleteBookRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteBook = new Method<global::Google.Example.Library.V1.DeleteBookRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "DeleteBook",
        __Marshaller_DeleteBookRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Example.Library.V1.UpdateBookRequest, global::Google.Example.Library.V1.Book> __Method_UpdateBook = new Method<global::Google.Example.Library.V1.UpdateBookRequest, global::Google.Example.Library.V1.Book>(
        MethodType.Unary,
        __ServiceName,
        "UpdateBook",
        __Marshaller_UpdateBookRequest,
        __Marshaller_Book);

    static readonly Method<global::Google.Example.Library.V1.MoveBookRequest, global::Google.Example.Library.V1.Book> __Method_MoveBook = new Method<global::Google.Example.Library.V1.MoveBookRequest, global::Google.Example.Library.V1.Book>(
        MethodType.Unary,
        __ServiceName,
        "MoveBook",
        __Marshaller_MoveBookRequest,
        __Marshaller_Book);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Example.Library.V1.LibraryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of LibraryService</summary>
    public abstract class LibraryServiceBase
    {
      /// <summary>
      ///  Creates a shelf, and returns the new Shelf.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Shelf> CreateShelf(global::Google.Example.Library.V1.CreateShelfRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Shelf> GetShelf(global::Google.Example.Library.V1.GetShelfRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Lists shelves. The order is unspecified but deterministic. Newly created
      ///  shelves will not necessarily be added to the end of this list.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.ListShelvesResponse> ListShelves(global::Google.Example.Library.V1.ListShelvesRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Deletes a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteShelf(global::Google.Example.Library.V1.DeleteShelfRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Merges two shelves by adding all books from the shelf named
      ///  `other_shelf_name` to shelf `name`, and deletes
      ///  `other_shelf_name`. Returns the updated shelf.
      ///  The book ids of the moved books may not be the same as the original books.
      ///
      ///  Returns NOT_FOUND if either shelf does not exist.
      ///  This call is a no-op if the specified shelves are the same.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Shelf> MergeShelves(global::Google.Example.Library.V1.MergeShelvesRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Creates a book, and returns the new Book.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Book> CreateBook(global::Google.Example.Library.V1.CreateBookRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Gets a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Book> GetBook(global::Google.Example.Library.V1.GetBookRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Lists books in a shelf. The order is unspecified but deterministic. Newly
      ///  created books will not necessarily be added to the end of this list.
      ///  Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.ListBooksResponse> ListBooks(global::Google.Example.Library.V1.ListBooksRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Deletes a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBook(global::Google.Example.Library.V1.DeleteBookRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Updates a book. Returns INVALID_ARGUMENT if the name of the book
      ///  is non-empty and does equal the previous name.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Book> UpdateBook(global::Google.Example.Library.V1.UpdateBookRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Moves a book to another shelf, and returns the new book. The book
      ///  id of the new book may not be the same as the original book.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Book> MoveBook(global::Google.Example.Library.V1.MoveBookRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for LibraryService</summary>
    public class LibraryServiceClient : ClientBase<LibraryServiceClient>
    {
      /// <summary>Creates a new client for LibraryService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public LibraryServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for LibraryService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public LibraryServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected LibraryServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected LibraryServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Creates a shelf, and returns the new Shelf.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Shelf CreateShelf(global::Google.Example.Library.V1.CreateShelfRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateShelf(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a shelf, and returns the new Shelf.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Shelf CreateShelf(global::Google.Example.Library.V1.CreateShelfRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateShelf, null, options, request);
      }
      /// <summary>
      ///  Creates a shelf, and returns the new Shelf.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Shelf> CreateShelfAsync(global::Google.Example.Library.V1.CreateShelfRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateShelfAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a shelf, and returns the new Shelf.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Shelf> CreateShelfAsync(global::Google.Example.Library.V1.CreateShelfRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateShelf, null, options, request);
      }
      /// <summary>
      ///  Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Shelf GetShelf(global::Google.Example.Library.V1.GetShelfRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetShelf(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Shelf GetShelf(global::Google.Example.Library.V1.GetShelfRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetShelf, null, options, request);
      }
      /// <summary>
      ///  Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Shelf> GetShelfAsync(global::Google.Example.Library.V1.GetShelfRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetShelfAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Shelf> GetShelfAsync(global::Google.Example.Library.V1.GetShelfRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetShelf, null, options, request);
      }
      /// <summary>
      ///  Lists shelves. The order is unspecified but deterministic. Newly created
      ///  shelves will not necessarily be added to the end of this list.
      /// </summary>
      public virtual global::Google.Example.Library.V1.ListShelvesResponse ListShelves(global::Google.Example.Library.V1.ListShelvesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListShelves(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Lists shelves. The order is unspecified but deterministic. Newly created
      ///  shelves will not necessarily be added to the end of this list.
      /// </summary>
      public virtual global::Google.Example.Library.V1.ListShelvesResponse ListShelves(global::Google.Example.Library.V1.ListShelvesRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListShelves, null, options, request);
      }
      /// <summary>
      ///  Lists shelves. The order is unspecified but deterministic. Newly created
      ///  shelves will not necessarily be added to the end of this list.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.ListShelvesResponse> ListShelvesAsync(global::Google.Example.Library.V1.ListShelvesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListShelvesAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Lists shelves. The order is unspecified but deterministic. Newly created
      ///  shelves will not necessarily be added to the end of this list.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.ListShelvesResponse> ListShelvesAsync(global::Google.Example.Library.V1.ListShelvesRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListShelves, null, options, request);
      }
      /// <summary>
      ///  Deletes a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteShelf(global::Google.Example.Library.V1.DeleteShelfRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteShelf(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteShelf(global::Google.Example.Library.V1.DeleteShelfRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteShelf, null, options, request);
      }
      /// <summary>
      ///  Deletes a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteShelfAsync(global::Google.Example.Library.V1.DeleteShelfRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteShelfAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteShelfAsync(global::Google.Example.Library.V1.DeleteShelfRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteShelf, null, options, request);
      }
      /// <summary>
      ///  Merges two shelves by adding all books from the shelf named
      ///  `other_shelf_name` to shelf `name`, and deletes
      ///  `other_shelf_name`. Returns the updated shelf.
      ///  The book ids of the moved books may not be the same as the original books.
      ///
      ///  Returns NOT_FOUND if either shelf does not exist.
      ///  This call is a no-op if the specified shelves are the same.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Shelf MergeShelves(global::Google.Example.Library.V1.MergeShelvesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MergeShelves(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Merges two shelves by adding all books from the shelf named
      ///  `other_shelf_name` to shelf `name`, and deletes
      ///  `other_shelf_name`. Returns the updated shelf.
      ///  The book ids of the moved books may not be the same as the original books.
      ///
      ///  Returns NOT_FOUND if either shelf does not exist.
      ///  This call is a no-op if the specified shelves are the same.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Shelf MergeShelves(global::Google.Example.Library.V1.MergeShelvesRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MergeShelves, null, options, request);
      }
      /// <summary>
      ///  Merges two shelves by adding all books from the shelf named
      ///  `other_shelf_name` to shelf `name`, and deletes
      ///  `other_shelf_name`. Returns the updated shelf.
      ///  The book ids of the moved books may not be the same as the original books.
      ///
      ///  Returns NOT_FOUND if either shelf does not exist.
      ///  This call is a no-op if the specified shelves are the same.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Shelf> MergeShelvesAsync(global::Google.Example.Library.V1.MergeShelvesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MergeShelvesAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Merges two shelves by adding all books from the shelf named
      ///  `other_shelf_name` to shelf `name`, and deletes
      ///  `other_shelf_name`. Returns the updated shelf.
      ///  The book ids of the moved books may not be the same as the original books.
      ///
      ///  Returns NOT_FOUND if either shelf does not exist.
      ///  This call is a no-op if the specified shelves are the same.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Shelf> MergeShelvesAsync(global::Google.Example.Library.V1.MergeShelvesRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MergeShelves, null, options, request);
      }
      /// <summary>
      ///  Creates a book, and returns the new Book.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Book CreateBook(global::Google.Example.Library.V1.CreateBookRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateBook(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a book, and returns the new Book.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Book CreateBook(global::Google.Example.Library.V1.CreateBookRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBook, null, options, request);
      }
      /// <summary>
      ///  Creates a book, and returns the new Book.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Book> CreateBookAsync(global::Google.Example.Library.V1.CreateBookRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateBookAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a book, and returns the new Book.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Book> CreateBookAsync(global::Google.Example.Library.V1.CreateBookRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBook, null, options, request);
      }
      /// <summary>
      ///  Gets a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Book GetBook(global::Google.Example.Library.V1.GetBookRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetBook(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Book GetBook(global::Google.Example.Library.V1.GetBookRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBook, null, options, request);
      }
      /// <summary>
      ///  Gets a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Book> GetBookAsync(global::Google.Example.Library.V1.GetBookRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetBookAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Book> GetBookAsync(global::Google.Example.Library.V1.GetBookRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBook, null, options, request);
      }
      /// <summary>
      ///  Lists books in a shelf. The order is unspecified but deterministic. Newly
      ///  created books will not necessarily be added to the end of this list.
      ///  Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual global::Google.Example.Library.V1.ListBooksResponse ListBooks(global::Google.Example.Library.V1.ListBooksRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListBooks(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Lists books in a shelf. The order is unspecified but deterministic. Newly
      ///  created books will not necessarily be added to the end of this list.
      ///  Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual global::Google.Example.Library.V1.ListBooksResponse ListBooks(global::Google.Example.Library.V1.ListBooksRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBooks, null, options, request);
      }
      /// <summary>
      ///  Lists books in a shelf. The order is unspecified but deterministic. Newly
      ///  created books will not necessarily be added to the end of this list.
      ///  Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.ListBooksResponse> ListBooksAsync(global::Google.Example.Library.V1.ListBooksRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListBooksAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Lists books in a shelf. The order is unspecified but deterministic. Newly
      ///  created books will not necessarily be added to the end of this list.
      ///  Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.ListBooksResponse> ListBooksAsync(global::Google.Example.Library.V1.ListBooksRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBooks, null, options, request);
      }
      /// <summary>
      ///  Deletes a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBook(global::Google.Example.Library.V1.DeleteBookRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteBook(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBook(global::Google.Example.Library.V1.DeleteBookRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBook, null, options, request);
      }
      /// <summary>
      ///  Deletes a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBookAsync(global::Google.Example.Library.V1.DeleteBookRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteBookAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBookAsync(global::Google.Example.Library.V1.DeleteBookRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBook, null, options, request);
      }
      /// <summary>
      ///  Updates a book. Returns INVALID_ARGUMENT if the name of the book
      ///  is non-empty and does equal the previous name.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Book UpdateBook(global::Google.Example.Library.V1.UpdateBookRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateBook(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Updates a book. Returns INVALID_ARGUMENT if the name of the book
      ///  is non-empty and does equal the previous name.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Book UpdateBook(global::Google.Example.Library.V1.UpdateBookRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBook, null, options, request);
      }
      /// <summary>
      ///  Updates a book. Returns INVALID_ARGUMENT if the name of the book
      ///  is non-empty and does equal the previous name.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Book> UpdateBookAsync(global::Google.Example.Library.V1.UpdateBookRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateBookAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Updates a book. Returns INVALID_ARGUMENT if the name of the book
      ///  is non-empty and does equal the previous name.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Book> UpdateBookAsync(global::Google.Example.Library.V1.UpdateBookRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBook, null, options, request);
      }
      /// <summary>
      ///  Moves a book to another shelf, and returns the new book. The book
      ///  id of the new book may not be the same as the original book.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Book MoveBook(global::Google.Example.Library.V1.MoveBookRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MoveBook(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Moves a book to another shelf, and returns the new book. The book
      ///  id of the new book may not be the same as the original book.
      /// </summary>
      public virtual global::Google.Example.Library.V1.Book MoveBook(global::Google.Example.Library.V1.MoveBookRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MoveBook, null, options, request);
      }
      /// <summary>
      ///  Moves a book to another shelf, and returns the new book. The book
      ///  id of the new book may not be the same as the original book.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Book> MoveBookAsync(global::Google.Example.Library.V1.MoveBookRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MoveBookAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Moves a book to another shelf, and returns the new book. The book
      ///  id of the new book may not be the same as the original book.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Example.Library.V1.Book> MoveBookAsync(global::Google.Example.Library.V1.MoveBookRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MoveBook, null, options, request);
      }
      protected override LibraryServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new LibraryServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(LibraryServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateShelf, serviceImpl.CreateShelf)
          .AddMethod(__Method_GetShelf, serviceImpl.GetShelf)
          .AddMethod(__Method_ListShelves, serviceImpl.ListShelves)
          .AddMethod(__Method_DeleteShelf, serviceImpl.DeleteShelf)
          .AddMethod(__Method_MergeShelves, serviceImpl.MergeShelves)
          .AddMethod(__Method_CreateBook, serviceImpl.CreateBook)
          .AddMethod(__Method_GetBook, serviceImpl.GetBook)
          .AddMethod(__Method_ListBooks, serviceImpl.ListBooks)
          .AddMethod(__Method_DeleteBook, serviceImpl.DeleteBook)
          .AddMethod(__Method_UpdateBook, serviceImpl.UpdateBook)
          .AddMethod(__Method_MoveBook, serviceImpl.MoveBook).Build();
    }

  }
}
#endregion
