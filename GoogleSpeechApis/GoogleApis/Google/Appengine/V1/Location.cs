// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/location.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Appengine.V1 {

  /// <summary>Holder for reflection information generated from google/appengine/v1/location.proto</summary>
  public static partial class LocationReflection {

    #region Descriptor
    /// <summary>File descriptor for google/appengine/v1/location.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LocationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJnb29nbGUvYXBwZW5naW5lL3YxL2xvY2F0aW9uLnByb3RvEhNnb29nbGUu",
            "YXBwZW5naW5lLnYxGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGhhn",
            "b29nbGUvdHlwZS9sYXRsbmcucHJvdG8iYgoQTG9jYXRpb25NZXRhZGF0YRIm",
            "Ch5zdGFuZGFyZF9lbnZpcm9ubWVudF9hdmFpbGFibGUYAiABKAgSJgoeZmxl",
            "eGlibGVfZW52aXJvbm1lbnRfYXZhaWxhYmxlGAQgASgIQmgKF2NvbS5nb29n",
            "bGUuYXBwZW5naW5lLnYxQg1Mb2NhdGlvblByb3RvUAFaPGdvb2dsZS5nb2xh",
            "bmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYXBwZW5naW5lL3YxO2FwcGVu",
            "Z2luZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Type.LatlngReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Appengine.V1.LocationMetadata), global::Google.Appengine.V1.LocationMetadata.Parser, new[]{ "StandardEnvironmentAvailable", "FlexibleEnvironmentAvailable" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  Metadata for the given [google.cloud.location.Location][google.cloud.location.Location].
  /// </summary>
  public sealed partial class LocationMetadata : pb::IMessage<LocationMetadata> {
    private static readonly pb::MessageParser<LocationMetadata> _parser = new pb::MessageParser<LocationMetadata>(() => new LocationMetadata());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Appengine.V1.LocationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationMetadata(LocationMetadata other) : this() {
      standardEnvironmentAvailable_ = other.standardEnvironmentAvailable_;
      flexibleEnvironmentAvailable_ = other.flexibleEnvironmentAvailable_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationMetadata Clone() {
      return new LocationMetadata(this);
    }

    /// <summary>Field number for the "standard_environment_available" field.</summary>
    public const int StandardEnvironmentAvailableFieldNumber = 2;
    private bool standardEnvironmentAvailable_;
    /// <summary>
    ///  App Engine Standard Environment is available in the given location.
    ///
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StandardEnvironmentAvailable {
      get { return standardEnvironmentAvailable_; }
      set {
        standardEnvironmentAvailable_ = value;
      }
    }

    /// <summary>Field number for the "flexible_environment_available" field.</summary>
    public const int FlexibleEnvironmentAvailableFieldNumber = 4;
    private bool flexibleEnvironmentAvailable_;
    /// <summary>
    ///  App Engine Flexible Environment is available in the given location.
    ///
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FlexibleEnvironmentAvailable {
      get { return flexibleEnvironmentAvailable_; }
      set {
        flexibleEnvironmentAvailable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StandardEnvironmentAvailable != other.StandardEnvironmentAvailable) return false;
      if (FlexibleEnvironmentAvailable != other.FlexibleEnvironmentAvailable) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StandardEnvironmentAvailable != false) hash ^= StandardEnvironmentAvailable.GetHashCode();
      if (FlexibleEnvironmentAvailable != false) hash ^= FlexibleEnvironmentAvailable.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StandardEnvironmentAvailable != false) {
        output.WriteRawTag(16);
        output.WriteBool(StandardEnvironmentAvailable);
      }
      if (FlexibleEnvironmentAvailable != false) {
        output.WriteRawTag(32);
        output.WriteBool(FlexibleEnvironmentAvailable);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StandardEnvironmentAvailable != false) {
        size += 1 + 1;
      }
      if (FlexibleEnvironmentAvailable != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.StandardEnvironmentAvailable != false) {
        StandardEnvironmentAvailable = other.StandardEnvironmentAvailable;
      }
      if (other.FlexibleEnvironmentAvailable != false) {
        FlexibleEnvironmentAvailable = other.FlexibleEnvironmentAvailable;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 16: {
            StandardEnvironmentAvailable = input.ReadBool();
            break;
          }
          case 32: {
            FlexibleEnvironmentAvailable = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
