// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/storagetransfer/v1/transfer.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Storagetransfer.V1 {

  /// <summary>Holder for reflection information generated from google/storagetransfer/v1/transfer.proto</summary>
  public static partial class TransferReflection {

    #region Descriptor
    /// <summary>File descriptor for google/storagetransfer/v1/transfer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TransferReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihnb29nbGUvc3RvcmFnZXRyYW5zZmVyL3YxL3RyYW5zZmVyLnByb3RvEhln",
            "b29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxGhxnb29nbGUvYXBpL2Fubm90YXRp",
            "b25zLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8aIGdvb2ds",
            "ZS9wcm90b2J1Zi9maWVsZF9tYXNrLnByb3RvGi5nb29nbGUvc3RvcmFnZXRy",
            "YW5zZmVyL3YxL3RyYW5zZmVyX3R5cGVzLnByb3RvIjQKHkdldEdvb2dsZVNl",
            "cnZpY2VBY2NvdW50UmVxdWVzdBISCgpwcm9qZWN0X2lkGAEgASgJIlgKGENy",
            "ZWF0ZVRyYW5zZmVySm9iUmVxdWVzdBI8Cgx0cmFuc2Zlcl9qb2IYASABKAsy",
            "Ji5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLlRyYW5zZmVySm9iIsIBChhV",
            "cGRhdGVUcmFuc2ZlckpvYlJlcXVlc3QSEAoIam9iX25hbWUYASABKAkSEgoK",
            "cHJvamVjdF9pZBgCIAEoCRI8Cgx0cmFuc2Zlcl9qb2IYAyABKAsyJi5nb29n",
            "bGUuc3RvcmFnZXRyYW5zZmVyLnYxLlRyYW5zZmVySm9iEkIKHnVwZGF0ZV90",
            "cmFuc2Zlcl9qb2JfZmllbGRfbWFzaxgEIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5GaWVsZE1hc2siPQoVR2V0VHJhbnNmZXJKb2JSZXF1ZXN0EhAKCGpvYl9u",
            "YW1lGAEgASgJEhIKCnByb2plY3RfaWQYAiABKAkiUAoXTGlzdFRyYW5zZmVy",
            "Sm9ic1JlcXVlc3QSDgoGZmlsdGVyGAEgASgJEhEKCXBhZ2Vfc2l6ZRgEIAEo",
            "BRISCgpwYWdlX3Rva2VuGAUgASgJInIKGExpc3RUcmFuc2ZlckpvYnNSZXNw",
            "b25zZRI9Cg10cmFuc2Zlcl9qb2JzGAEgAygLMiYuZ29vZ2xlLnN0b3JhZ2V0",
            "cmFuc2Zlci52MS5UcmFuc2ZlckpvYhIXCg9uZXh0X3BhZ2VfdG9rZW4YAiAB",
            "KAkiLQodUGF1c2VUcmFuc2Zlck9wZXJhdGlvblJlcXVlc3QSDAoEbmFtZRgB",
            "IAEoCSIuCh5SZXN1bWVUcmFuc2Zlck9wZXJhdGlvblJlcXVlc3QSDAoEbmFt",
            "ZRgBIAEoCTL5CAoWU3RvcmFnZVRyYW5zZmVyU2VydmljZRK1AQoXR2V0R29v",
            "Z2xlU2VydmljZUFjY291bnQSOS5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYx",
            "LkdldEdvb2dsZVNlcnZpY2VBY2NvdW50UmVxdWVzdBovLmdvb2dsZS5zdG9y",
            "YWdldHJhbnNmZXIudjEuR29vZ2xlU2VydmljZUFjY291bnQiLoLT5JMCKBIm",
            "L3YxL2dvb2dsZVNlcnZpY2VBY2NvdW50cy97cHJvamVjdF9pZH0SmAEKEUNy",
            "ZWF0ZVRyYW5zZmVySm9iEjMuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5D",
            "cmVhdGVUcmFuc2ZlckpvYlJlcXVlc3QaJi5nb29nbGUuc3RvcmFnZXRyYW5z",
            "ZmVyLnYxLlRyYW5zZmVySm9iIiaC0+STAiAiEC92MS90cmFuc2ZlckpvYnM6",
            "DHRyYW5zZmVyX2pvYhKbAQoRVXBkYXRlVHJhbnNmZXJKb2ISMy5nb29nbGUu",
            "c3RvcmFnZXRyYW5zZmVyLnYxLlVwZGF0ZVRyYW5zZmVySm9iUmVxdWVzdBom",
            "Lmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuVHJhbnNmZXJKb2IiKYLT5JMC",
            "IzIeL3YxL3tqb2JfbmFtZT10cmFuc2ZlckpvYnMvKip9OgEqEpIBCg5HZXRU",
            "cmFuc2ZlckpvYhIwLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuR2V0VHJh",
            "bnNmZXJKb2JSZXF1ZXN0GiYuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5U",
            "cmFuc2ZlckpvYiImgtPkkwIgEh4vdjEve2pvYl9uYW1lPXRyYW5zZmVySm9i",
            "cy8qKn0SlQEKEExpc3RUcmFuc2ZlckpvYnMSMi5nb29nbGUuc3RvcmFnZXRy",
            "YW5zZmVyLnYxLkxpc3RUcmFuc2ZlckpvYnNSZXF1ZXN0GjMuZ29vZ2xlLnN0",
            "b3JhZ2V0cmFuc2Zlci52MS5MaXN0VHJhbnNmZXJKb2JzUmVzcG9uc2UiGILT",
            "5JMCEhIQL3YxL3RyYW5zZmVySm9icxKdAQoWUGF1c2VUcmFuc2Zlck9wZXJh",
            "dGlvbhI4Lmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuUGF1c2VUcmFuc2Zl",
            "ck9wZXJhdGlvblJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiMYLT",
            "5JMCKyImL3YxL3tuYW1lPXRyYW5zZmVyT3BlcmF0aW9ucy8qKn06cGF1c2U6",
            "ASoSoAEKF1Jlc3VtZVRyYW5zZmVyT3BlcmF0aW9uEjkuZ29vZ2xlLnN0b3Jh",
            "Z2V0cmFuc2Zlci52MS5SZXN1bWVUcmFuc2Zlck9wZXJhdGlvblJlcXVlc3Qa",
            "Fi5nb29nbGUucHJvdG9idWYuRW1wdHkiMoLT5JMCLCInL3YxL3tuYW1lPXRy",
            "YW5zZmVyT3BlcmF0aW9ucy8qKn06cmVzdW1lOgEqQoEBCiNjb20uZ29vZ2xl",
            "LnN0b3JhZ2V0cmFuc2Zlci52MS5wcm90b0INVHJhbnNmZXJQcm90b1pIZ29v",
            "Z2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9zdG9yYWdldHJh",
            "bnNmZXIvdjE7c3RvcmFnZXRyYW5zZmVy+AEBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Storagetransfer.V1.TransferTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Storagetransfer.V1.GetGoogleServiceAccountRequest), global::Google.Storagetransfer.V1.GetGoogleServiceAccountRequest.Parser, new[]{ "ProjectId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Storagetransfer.V1.CreateTransferJobRequest), global::Google.Storagetransfer.V1.CreateTransferJobRequest.Parser, new[]{ "TransferJob" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Storagetransfer.V1.UpdateTransferJobRequest), global::Google.Storagetransfer.V1.UpdateTransferJobRequest.Parser, new[]{ "JobName", "ProjectId", "TransferJob", "UpdateTransferJobFieldMask" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Storagetransfer.V1.GetTransferJobRequest), global::Google.Storagetransfer.V1.GetTransferJobRequest.Parser, new[]{ "JobName", "ProjectId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Storagetransfer.V1.ListTransferJobsRequest), global::Google.Storagetransfer.V1.ListTransferJobsRequest.Parser, new[]{ "Filter", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Storagetransfer.V1.ListTransferJobsResponse), global::Google.Storagetransfer.V1.ListTransferJobsResponse.Parser, new[]{ "TransferJobs", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Storagetransfer.V1.PauseTransferOperationRequest), global::Google.Storagetransfer.V1.PauseTransferOperationRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Storagetransfer.V1.ResumeTransferOperationRequest), global::Google.Storagetransfer.V1.ResumeTransferOperationRequest.Parser, new[]{ "Name" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  Request passed to GetGoogleServiceAccount.
  /// </summary>
  public sealed partial class GetGoogleServiceAccountRequest : pb::IMessage<GetGoogleServiceAccountRequest> {
    private static readonly pb::MessageParser<GetGoogleServiceAccountRequest> _parser = new pb::MessageParser<GetGoogleServiceAccountRequest>(() => new GetGoogleServiceAccountRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGoogleServiceAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Storagetransfer.V1.TransferReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGoogleServiceAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGoogleServiceAccountRequest(GetGoogleServiceAccountRequest other) : this() {
      projectId_ = other.projectId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGoogleServiceAccountRequest Clone() {
      return new GetGoogleServiceAccountRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    ///  The ID of the Google Cloud Platform Console project that the Google service
    ///  account is associated with.
    ///  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGoogleServiceAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGoogleServiceAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGoogleServiceAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request passed to CreateTransferJob.
  /// </summary>
  public sealed partial class CreateTransferJobRequest : pb::IMessage<CreateTransferJobRequest> {
    private static readonly pb::MessageParser<CreateTransferJobRequest> _parser = new pb::MessageParser<CreateTransferJobRequest>(() => new CreateTransferJobRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTransferJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Storagetransfer.V1.TransferReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTransferJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTransferJobRequest(CreateTransferJobRequest other) : this() {
      TransferJob = other.transferJob_ != null ? other.TransferJob.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTransferJobRequest Clone() {
      return new CreateTransferJobRequest(this);
    }

    /// <summary>Field number for the "transfer_job" field.</summary>
    public const int TransferJobFieldNumber = 1;
    private global::Google.Storagetransfer.V1.TransferJob transferJob_;
    /// <summary>
    ///  The job to create.
    ///  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Storagetransfer.V1.TransferJob TransferJob {
      get { return transferJob_; }
      set {
        transferJob_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTransferJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTransferJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TransferJob, other.TransferJob)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transferJob_ != null) hash ^= TransferJob.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transferJob_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TransferJob);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transferJob_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransferJob);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTransferJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.transferJob_ != null) {
        if (transferJob_ == null) {
          transferJob_ = new global::Google.Storagetransfer.V1.TransferJob();
        }
        TransferJob.MergeFrom(other.TransferJob);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (transferJob_ == null) {
              transferJob_ = new global::Google.Storagetransfer.V1.TransferJob();
            }
            input.ReadMessage(transferJob_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request passed to UpdateTransferJob.
  /// </summary>
  public sealed partial class UpdateTransferJobRequest : pb::IMessage<UpdateTransferJobRequest> {
    private static readonly pb::MessageParser<UpdateTransferJobRequest> _parser = new pb::MessageParser<UpdateTransferJobRequest>(() => new UpdateTransferJobRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTransferJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Storagetransfer.V1.TransferReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTransferJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTransferJobRequest(UpdateTransferJobRequest other) : this() {
      jobName_ = other.jobName_;
      projectId_ = other.projectId_;
      TransferJob = other.transferJob_ != null ? other.TransferJob.Clone() : null;
      UpdateTransferJobFieldMask = other.updateTransferJobFieldMask_ != null ? other.UpdateTransferJobFieldMask.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTransferJobRequest Clone() {
      return new UpdateTransferJobRequest(this);
    }

    /// <summary>Field number for the "job_name" field.</summary>
    public const int JobNameFieldNumber = 1;
    private string jobName_ = "";
    /// <summary>
    ///  The name of job to update.
    ///  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobName {
      get { return jobName_; }
      set {
        jobName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 2;
    private string projectId_ = "";
    /// <summary>
    ///  The ID of the Google Cloud Platform Console project that owns the job.
    ///  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transfer_job" field.</summary>
    public const int TransferJobFieldNumber = 3;
    private global::Google.Storagetransfer.V1.TransferJob transferJob_;
    /// <summary>
    ///  The job to update.
    ///  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Storagetransfer.V1.TransferJob TransferJob {
      get { return transferJob_; }
      set {
        transferJob_ = value;
      }
    }

    /// <summary>Field number for the "update_transfer_job_field_mask" field.</summary>
    public const int UpdateTransferJobFieldMaskFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateTransferJobFieldMask_;
    /// <summary>
    ///  The field mask of the fields in `transferJob` that are to be updated in
    ///  this request.  Fields in `transferJob` that can be updated are:
    ///  `description`, `transferSpec`, and `status`.  To update the `transferSpec`
    ///  of the job, a complete transfer specification has to be provided. An
    ///  incomplete specification which misses any required fields will be rejected
    ///  with the error `INVALID_ARGUMENT`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateTransferJobFieldMask {
      get { return updateTransferJobFieldMask_; }
      set {
        updateTransferJobFieldMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTransferJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTransferJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobName != other.JobName) return false;
      if (ProjectId != other.ProjectId) return false;
      if (!object.Equals(TransferJob, other.TransferJob)) return false;
      if (!object.Equals(UpdateTransferJobFieldMask, other.UpdateTransferJobFieldMask)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobName.Length != 0) hash ^= JobName.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (transferJob_ != null) hash ^= TransferJob.GetHashCode();
      if (updateTransferJobFieldMask_ != null) hash ^= UpdateTransferJobFieldMask.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JobName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JobName);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      if (transferJob_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TransferJob);
      }
      if (updateTransferJobFieldMask_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateTransferJobFieldMask);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobName);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (transferJob_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransferJob);
      }
      if (updateTransferJobFieldMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTransferJobFieldMask);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTransferJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.JobName.Length != 0) {
        JobName = other.JobName;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.transferJob_ != null) {
        if (transferJob_ == null) {
          transferJob_ = new global::Google.Storagetransfer.V1.TransferJob();
        }
        TransferJob.MergeFrom(other.TransferJob);
      }
      if (other.updateTransferJobFieldMask_ != null) {
        if (updateTransferJobFieldMask_ == null) {
          updateTransferJobFieldMask_ = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateTransferJobFieldMask.MergeFrom(other.UpdateTransferJobFieldMask);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            JobName = input.ReadString();
            break;
          }
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 26: {
            if (transferJob_ == null) {
              transferJob_ = new global::Google.Storagetransfer.V1.TransferJob();
            }
            input.ReadMessage(transferJob_);
            break;
          }
          case 34: {
            if (updateTransferJobFieldMask_ == null) {
              updateTransferJobFieldMask_ = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(updateTransferJobFieldMask_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request passed to GetTransferJob.
  /// </summary>
  public sealed partial class GetTransferJobRequest : pb::IMessage<GetTransferJobRequest> {
    private static readonly pb::MessageParser<GetTransferJobRequest> _parser = new pb::MessageParser<GetTransferJobRequest>(() => new GetTransferJobRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransferJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Storagetransfer.V1.TransferReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransferJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransferJobRequest(GetTransferJobRequest other) : this() {
      jobName_ = other.jobName_;
      projectId_ = other.projectId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransferJobRequest Clone() {
      return new GetTransferJobRequest(this);
    }

    /// <summary>Field number for the "job_name" field.</summary>
    public const int JobNameFieldNumber = 1;
    private string jobName_ = "";
    /// <summary>
    ///  The job to get.
    ///  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobName {
      get { return jobName_; }
      set {
        jobName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 2;
    private string projectId_ = "";
    /// <summary>
    ///  The ID of the Google Cloud Platform Console project that owns the job.
    ///  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransferJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransferJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobName != other.JobName) return false;
      if (ProjectId != other.ProjectId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobName.Length != 0) hash ^= JobName.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JobName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JobName);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobName);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransferJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.JobName.Length != 0) {
        JobName = other.JobName;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            JobName = input.ReadString();
            break;
          }
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  `project_id`, `job_names`, and `job_statuses` are query parameters that can
  ///  be specified when listing transfer jobs.
  /// </summary>
  public sealed partial class ListTransferJobsRequest : pb::IMessage<ListTransferJobsRequest> {
    private static readonly pb::MessageParser<ListTransferJobsRequest> _parser = new pb::MessageParser<ListTransferJobsRequest>(() => new ListTransferJobsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListTransferJobsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Storagetransfer.V1.TransferReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTransferJobsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTransferJobsRequest(ListTransferJobsRequest other) : this() {
      filter_ = other.filter_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTransferJobsRequest Clone() {
      return new ListTransferJobsRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    /// <summary>
    ///  A list of query parameters specified as JSON text in the form of
    ///  {"project_id":"my_project_id",
    ///  "job_names":["jobid1","jobid2",...],
    ///  "job_statuses":["status1","status2",...]}.
    ///  Since `job_names` and `job_statuses` support multiple values, their values
    ///  must be specified with array notation. `project_id` is required. `job_names`
    ///  and `job_statuses` are optional.  The valid values for `job_statuses` are
    ///  case-insensitive: `ENABLED`, `DISABLED`, and `DELETED`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 4;
    private int pageSize_;
    /// <summary>
    ///  The list page size. The max allowed value is 256.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 5;
    private string pageToken_ = "";
    /// <summary>
    ///  The list page token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListTransferJobsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListTransferJobsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (PageSize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListTransferJobsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
          case 32: {
            PageSize = input.ReadInt32();
            break;
          }
          case 42: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Response from ListTransferJobs.
  /// </summary>
  public sealed partial class ListTransferJobsResponse : pb::IMessage<ListTransferJobsResponse> {
    private static readonly pb::MessageParser<ListTransferJobsResponse> _parser = new pb::MessageParser<ListTransferJobsResponse>(() => new ListTransferJobsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListTransferJobsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Storagetransfer.V1.TransferReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTransferJobsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTransferJobsResponse(ListTransferJobsResponse other) : this() {
      transferJobs_ = other.transferJobs_.Clone();
      nextPageToken_ = other.nextPageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTransferJobsResponse Clone() {
      return new ListTransferJobsResponse(this);
    }

    /// <summary>Field number for the "transfer_jobs" field.</summary>
    public const int TransferJobsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Storagetransfer.V1.TransferJob> _repeated_transferJobs_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Storagetransfer.V1.TransferJob.Parser);
    private readonly pbc::RepeatedField<global::Google.Storagetransfer.V1.TransferJob> transferJobs_ = new pbc::RepeatedField<global::Google.Storagetransfer.V1.TransferJob>();
    /// <summary>
    ///  A list of transfer jobs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Storagetransfer.V1.TransferJob> TransferJobs {
      get { return transferJobs_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    ///  The list next page token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListTransferJobsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListTransferJobsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transferJobs_.Equals(other.transferJobs_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transferJobs_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transferJobs_.WriteTo(output, _repeated_transferJobs_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transferJobs_.CalculateSize(_repeated_transferJobs_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListTransferJobsResponse other) {
      if (other == null) {
        return;
      }
      transferJobs_.Add(other.transferJobs_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            transferJobs_.AddEntriesFrom(input, _repeated_transferJobs_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request passed to PauseTransferOperation.
  /// </summary>
  public sealed partial class PauseTransferOperationRequest : pb::IMessage<PauseTransferOperationRequest> {
    private static readonly pb::MessageParser<PauseTransferOperationRequest> _parser = new pb::MessageParser<PauseTransferOperationRequest>(() => new PauseTransferOperationRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PauseTransferOperationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Storagetransfer.V1.TransferReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PauseTransferOperationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PauseTransferOperationRequest(PauseTransferOperationRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PauseTransferOperationRequest Clone() {
      return new PauseTransferOperationRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  The name of the transfer operation.
    ///  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PauseTransferOperationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PauseTransferOperationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PauseTransferOperationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request passed to ResumeTransferOperation.
  /// </summary>
  public sealed partial class ResumeTransferOperationRequest : pb::IMessage<ResumeTransferOperationRequest> {
    private static readonly pb::MessageParser<ResumeTransferOperationRequest> _parser = new pb::MessageParser<ResumeTransferOperationRequest>(() => new ResumeTransferOperationRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResumeTransferOperationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Storagetransfer.V1.TransferReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResumeTransferOperationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResumeTransferOperationRequest(ResumeTransferOperationRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResumeTransferOperationRequest Clone() {
      return new ResumeTransferOperationRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  The name of the transfer operation.
    ///  Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResumeTransferOperationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResumeTransferOperationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResumeTransferOperationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
