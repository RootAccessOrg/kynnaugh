// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/cloudbuild/v1/cloudbuild.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Devtools.Cloudbuild.V1 {

  /// <summary>Holder for reflection information generated from google/devtools/cloudbuild/v1/cloudbuild.proto</summary>
  public static partial class CloudbuildReflection {

    #region Descriptor
    /// <summary>File descriptor for google/devtools/cloudbuild/v1/cloudbuild.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CloudbuildReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5nb29nbGUvZGV2dG9vbHMvY2xvdWRidWlsZC92MS9jbG91ZGJ1aWxkLnBy",
            "b3RvEh1nb29nbGUuZGV2dG9vbHMuY2xvdWRidWlsZC52MRocZ29vZ2xlL2Fw",
            "aS9hbm5vdGF0aW9ucy5wcm90bxojZ29vZ2xlL2xvbmdydW5uaW5nL29wZXJh",
            "dGlvbnMucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi9kdXJhdGlvbi5wcm90bxob",
            "Z29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvGh9nb29nbGUvcHJvdG9idWYv",
            "dGltZXN0YW1wLnByb3RvIkMKDVN0b3JhZ2VTb3VyY2USDgoGYnVja2V0GAEg",
            "ASgJEg4KBm9iamVjdBgCIAEoCRISCgpnZW5lcmF0aW9uGAMgASgDIoABCgpS",
            "ZXBvU291cmNlEhIKCnByb2plY3RfaWQYASABKAkSEQoJcmVwb19uYW1lGAIg",
            "ASgJEhUKC2JyYW5jaF9uYW1lGAMgASgJSAASEgoIdGFnX25hbWUYBCABKAlI",
            "ABIUCgpjb21taXRfc2hhGAUgASgJSABCCgoIcmV2aXNpb24inAEKBlNvdXJj",
            "ZRJGCg5zdG9yYWdlX3NvdXJjZRgCIAEoCzIsLmdvb2dsZS5kZXZ0b29scy5j",
            "bG91ZGJ1aWxkLnYxLlN0b3JhZ2VTb3VyY2VIABJACgtyZXBvX3NvdXJjZRgD",
            "IAEoCzIpLmdvb2dsZS5kZXZ0b29scy5jbG91ZGJ1aWxkLnYxLlJlcG9Tb3Vy",
            "Y2VIAEIICgZzb3VyY2UiKgoKQnVpbHRJbWFnZRIMCgRuYW1lGAEgASgJEg4K",
            "BmRpZ2VzdBgDIAEoCSJfCglCdWlsZFN0ZXASDAoEbmFtZRgBIAEoCRILCgNl",
            "bnYYAiADKAkSDAoEYXJncxgDIAMoCRILCgNkaXIYBCABKAkSCgoCaWQYBSAB",
            "KAkSEAoId2FpdF9mb3IYBiADKAkiXwoHUmVzdWx0cxI5CgZpbWFnZXMYAiAD",
            "KAsyKS5nb29nbGUuZGV2dG9vbHMuY2xvdWRidWlsZC52MS5CdWlsdEltYWdl",
            "EhkKEWJ1aWxkX3N0ZXBfaW1hZ2VzGAMgAygJIr0GCgVCdWlsZBIKCgJpZBgB",
            "IAEoCRISCgpwcm9qZWN0X2lkGBAgASgJEjsKBnN0YXR1cxgCIAEoDjIrLmdv",
            "b2dsZS5kZXZ0b29scy5jbG91ZGJ1aWxkLnYxLkJ1aWxkLlN0YXR1cxIVCg1z",
            "dGF0dXNfZGV0YWlsGBggASgJEjUKBnNvdXJjZRgDIAEoCzIlLmdvb2dsZS5k",
            "ZXZ0b29scy5jbG91ZGJ1aWxkLnYxLlNvdXJjZRI3CgVzdGVwcxgLIAMoCzIo",
            "Lmdvb2dsZS5kZXZ0b29scy5jbG91ZGJ1aWxkLnYxLkJ1aWxkU3RlcBI3Cgdy",
            "ZXN1bHRzGAogASgLMiYuZ29vZ2xlLmRldnRvb2xzLmNsb3VkYnVpbGQudjEu",
            "UmVzdWx0cxIvCgtjcmVhdGVfdGltZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASLgoKc3RhcnRfdGltZRgHIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXASLwoLZmluaXNoX3RpbWUYCCABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wEioKB3RpbWVvdXQYDCABKAsyGS5nb29nbGUu",
            "cHJvdG9idWYuRHVyYXRpb24SDgoGaW1hZ2VzGA0gAygJEhMKC2xvZ3NfYnVj",
            "a2V0GBMgASgJEkoKEXNvdXJjZV9wcm92ZW5hbmNlGBUgASgLMi8uZ29vZ2xl",
            "LmRldnRvb2xzLmNsb3VkYnVpbGQudjEuU291cmNlUHJvdmVuYW5jZRIYChBi",
            "dWlsZF90cmlnZ2VyX2lkGBYgASgJEjwKB29wdGlvbnMYFyABKAsyKy5nb29n",
            "bGUuZGV2dG9vbHMuY2xvdWRidWlsZC52MS5CdWlsZE9wdGlvbnMSDwoHbG9n",
            "X3VybBgZIAEoCSJ/CgZTdGF0dXMSEgoOU1RBVFVTX1VOS05PV04QABIKCgZR",
            "VUVVRUQQARILCgdXT1JLSU5HEAISCwoHU1VDQ0VTUxADEgsKB0ZBSUxVUkUQ",
            "BBISCg5JTlRFUk5BTF9FUlJPUhAFEgsKB1RJTUVPVVQQBhINCglDQU5DRUxM",
            "RUQQByJNChZCdWlsZE9wZXJhdGlvbk1ldGFkYXRhEjMKBWJ1aWxkGAEgASgL",
            "MiQuZ29vZ2xlLmRldnRvb2xzLmNsb3VkYnVpbGQudjEuQnVpbGQi3gIKEFNv",
            "dXJjZVByb3ZlbmFuY2USTQoXcmVzb2x2ZWRfc3RvcmFnZV9zb3VyY2UYAyAB",
            "KAsyLC5nb29nbGUuZGV2dG9vbHMuY2xvdWRidWlsZC52MS5TdG9yYWdlU291",
            "cmNlEkcKFHJlc29sdmVkX3JlcG9fc291cmNlGAYgASgLMikuZ29vZ2xlLmRl",
            "dnRvb2xzLmNsb3VkYnVpbGQudjEuUmVwb1NvdXJjZRJUCgtmaWxlX2hhc2hl",
            "cxgEIAMoCzI/Lmdvb2dsZS5kZXZ0b29scy5jbG91ZGJ1aWxkLnYxLlNvdXJj",
            "ZVByb3ZlbmFuY2UuRmlsZUhhc2hlc0VudHJ5GlwKD0ZpbGVIYXNoZXNFbnRy",
            "eRILCgNrZXkYASABKAkSOAoFdmFsdWUYAiABKAsyKS5nb29nbGUuZGV2dG9v",
            "bHMuY2xvdWRidWlsZC52MS5GaWxlSGFzaGVzOgI4ASJECgpGaWxlSGFzaGVz",
            "EjYKCWZpbGVfaGFzaBgBIAMoCzIjLmdvb2dsZS5kZXZ0b29scy5jbG91ZGJ1",
            "aWxkLnYxLkhhc2gicwoESGFzaBI6CgR0eXBlGAEgASgOMiwuZ29vZ2xlLmRl",
            "dnRvb2xzLmNsb3VkYnVpbGQudjEuSGFzaC5IYXNoVHlwZRINCgV2YWx1ZRgC",
            "IAEoDCIgCghIYXNoVHlwZRIICgROT05FEAASCgoGU0hBMjU2EAEiXQoSQ3Jl",
            "YXRlQnVpbGRSZXF1ZXN0EhIKCnByb2plY3RfaWQYASABKAkSMwoFYnVpbGQY",
            "AiABKAsyJC5nb29nbGUuZGV2dG9vbHMuY2xvdWRidWlsZC52MS5CdWlsZCIx",
            "Cg9HZXRCdWlsZFJlcXVlc3QSEgoKcHJvamVjdF9pZBgBIAEoCRIKCgJpZBgC",
            "IAEoCSJeChFMaXN0QnVpbGRzUmVxdWVzdBISCgpwcm9qZWN0X2lkGAEgASgJ",
            "EhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJEg4KBmZp",
            "bHRlchgIIAEoCSJjChJMaXN0QnVpbGRzUmVzcG9uc2USNAoGYnVpbGRzGAEg",
            "AygLMiQuZ29vZ2xlLmRldnRvb2xzLmNsb3VkYnVpbGQudjEuQnVpbGQSFwoP",
            "bmV4dF9wYWdlX3Rva2VuGAIgASgJIjQKEkNhbmNlbEJ1aWxkUmVxdWVzdBIS",
            "Cgpwcm9qZWN0X2lkGAEgASgJEgoKAmlkGAIgASgJIpQCCgxCdWlsZFRyaWdn",
            "ZXISCgoCaWQYASABKAkSEwoLZGVzY3JpcHRpb24YCiABKAkSQwoQdHJpZ2dl",
            "cl90ZW1wbGF0ZRgHIAEoCzIpLmdvb2dsZS5kZXZ0b29scy5jbG91ZGJ1aWxk",
            "LnYxLlJlcG9Tb3VyY2USNQoFYnVpbGQYBCABKAsyJC5nb29nbGUuZGV2dG9v",
            "bHMuY2xvdWRidWlsZC52MS5CdWlsZEgAEhIKCGZpbGVuYW1lGAggASgJSAAS",
            "LwoLY3JlYXRlX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEhAKCGRpc2FibGVkGAkgASgIQhAKDmJ1aWxkX3RlbXBsYXRlIm0KGUNy",
            "ZWF0ZUJ1aWxkVHJpZ2dlclJlcXVlc3QSEgoKcHJvamVjdF9pZBgBIAEoCRI8",
            "Cgd0cmlnZ2VyGAIgASgLMisuZ29vZ2xlLmRldnRvb2xzLmNsb3VkYnVpbGQu",
            "djEuQnVpbGRUcmlnZ2VyIkAKFkdldEJ1aWxkVHJpZ2dlclJlcXVlc3QSEgoK",
            "cHJvamVjdF9pZBgBIAEoCRISCgp0cmlnZ2VyX2lkGAIgASgJIi4KGExpc3RC",
            "dWlsZFRyaWdnZXJzUmVxdWVzdBISCgpwcm9qZWN0X2lkGAEgASgJIloKGUxp",
            "c3RCdWlsZFRyaWdnZXJzUmVzcG9uc2USPQoIdHJpZ2dlcnMYASADKAsyKy5n",
            "b29nbGUuZGV2dG9vbHMuY2xvdWRidWlsZC52MS5CdWlsZFRyaWdnZXIiQwoZ",
            "RGVsZXRlQnVpbGRUcmlnZ2VyUmVxdWVzdBISCgpwcm9qZWN0X2lkGAEgASgJ",
            "EhIKCnRyaWdnZXJfaWQYAiABKAkigQEKGVVwZGF0ZUJ1aWxkVHJpZ2dlclJl",
            "cXVlc3QSEgoKcHJvamVjdF9pZBgBIAEoCRISCgp0cmlnZ2VyX2lkGAIgASgJ",
            "EjwKB3RyaWdnZXIYAyABKAsyKy5nb29nbGUuZGV2dG9vbHMuY2xvdWRidWls",
            "ZC52MS5CdWlsZFRyaWdnZXIi5wEKDEJ1aWxkT3B0aW9ucxJMChZzb3VyY2Vf",
            "cHJvdmVuYW5jZV9oYXNoGAEgAygOMiwuZ29vZ2xlLmRldnRvb2xzLmNsb3Vk",
            "YnVpbGQudjEuSGFzaC5IYXNoVHlwZRJZChdyZXF1ZXN0ZWRfdmVyaWZ5X29w",
            "dGlvbhgCIAEoDjI4Lmdvb2dsZS5kZXZ0b29scy5jbG91ZGJ1aWxkLnYxLkJ1",
            "aWxkT3B0aW9ucy5WZXJpZnlPcHRpb24iLgoMVmVyaWZ5T3B0aW9uEhAKDE5P",
            "VF9WRVJJRklFRBAAEgwKCFZFUklGSUVEEAEy7AsKCkNsb3VkQnVpbGQSkAEK",
            "C0NyZWF0ZUJ1aWxkEjEuZ29vZ2xlLmRldnRvb2xzLmNsb3VkYnVpbGQudjEu",
            "Q3JlYXRlQnVpbGRSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJh",
            "dGlvbiIvgtPkkwIpIiAvdjEvcHJvamVjdHMve3Byb2plY3RfaWR9L2J1aWxk",
            "czoFYnVpbGQSjwEKCEdldEJ1aWxkEi4uZ29vZ2xlLmRldnRvb2xzLmNsb3Vk",
            "YnVpbGQudjEuR2V0QnVpbGRSZXF1ZXN0GiQuZ29vZ2xlLmRldnRvb2xzLmNs",
            "b3VkYnVpbGQudjEuQnVpbGQiLYLT5JMCJxIlL3YxL3Byb2plY3RzL3twcm9q",
            "ZWN0X2lkfS9idWlsZHMve2lkfRKbAQoKTGlzdEJ1aWxkcxIwLmdvb2dsZS5k",
            "ZXZ0b29scy5jbG91ZGJ1aWxkLnYxLkxpc3RCdWlsZHNSZXF1ZXN0GjEuZ29v",
            "Z2xlLmRldnRvb2xzLmNsb3VkYnVpbGQudjEuTGlzdEJ1aWxkc1Jlc3BvbnNl",
            "IiiC0+STAiISIC92MS9wcm9qZWN0cy97cHJvamVjdF9pZH0vYnVpbGRzEp8B",
            "CgtDYW5jZWxCdWlsZBIxLmdvb2dsZS5kZXZ0b29scy5jbG91ZGJ1aWxkLnYx",
            "LkNhbmNlbEJ1aWxkUmVxdWVzdBokLmdvb2dsZS5kZXZ0b29scy5jbG91ZGJ1",
            "aWxkLnYxLkJ1aWxkIjeC0+STAjEiLC92MS9wcm9qZWN0cy97cHJvamVjdF9p",
            "ZH0vYnVpbGRzL3tpZH06Y2FuY2VsOgEqErABChJDcmVhdGVCdWlsZFRyaWdn",
            "ZXISOC5nb29nbGUuZGV2dG9vbHMuY2xvdWRidWlsZC52MS5DcmVhdGVCdWls",
            "ZFRyaWdnZXJSZXF1ZXN0GisuZ29vZ2xlLmRldnRvb2xzLmNsb3VkYnVpbGQu",
            "djEuQnVpbGRUcmlnZ2VyIjOC0+STAi0iIi92MS9wcm9qZWN0cy97cHJvamVj",
            "dF9pZH0vdHJpZ2dlcnM6B3RyaWdnZXISrgEKD0dldEJ1aWxkVHJpZ2dlchI1",
            "Lmdvb2dsZS5kZXZ0b29scy5jbG91ZGJ1aWxkLnYxLkdldEJ1aWxkVHJpZ2dl",
            "clJlcXVlc3QaKy5nb29nbGUuZGV2dG9vbHMuY2xvdWRidWlsZC52MS5CdWls",
            "ZFRyaWdnZXIiN4LT5JMCMRIvL3YxL3Byb2plY3RzL3twcm9qZWN0X2lkfS90",
            "cmlnZ2Vycy97dHJpZ2dlcl9pZH0SsgEKEUxpc3RCdWlsZFRyaWdnZXJzEjcu",
            "Z29vZ2xlLmRldnRvb2xzLmNsb3VkYnVpbGQudjEuTGlzdEJ1aWxkVHJpZ2dl",
            "cnNSZXF1ZXN0GjguZ29vZ2xlLmRldnRvb2xzLmNsb3VkYnVpbGQudjEuTGlz",
            "dEJ1aWxkVHJpZ2dlcnNSZXNwb25zZSIqgtPkkwIkEiIvdjEvcHJvamVjdHMv",
            "e3Byb2plY3RfaWR9L3RyaWdnZXJzEp8BChJEZWxldGVCdWlsZFRyaWdnZXIS",
            "OC5nb29nbGUuZGV2dG9vbHMuY2xvdWRidWlsZC52MS5EZWxldGVCdWlsZFRy",
            "aWdnZXJSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IjeC0+STAjEq",
            "Ly92MS9wcm9qZWN0cy97cHJvamVjdF9pZH0vdHJpZ2dlcnMve3RyaWdnZXJf",
            "aWR9Er0BChJVcGRhdGVCdWlsZFRyaWdnZXISOC5nb29nbGUuZGV2dG9vbHMu",
            "Y2xvdWRidWlsZC52MS5VcGRhdGVCdWlsZFRyaWdnZXJSZXF1ZXN0GisuZ29v",
            "Z2xlLmRldnRvb2xzLmNsb3VkYnVpbGQudjEuQnVpbGRUcmlnZ2VyIkCC0+ST",
            "AjoyLy92MS9wcm9qZWN0cy97cHJvamVjdF9pZH0vdHJpZ2dlcnMve3RyaWdn",
            "ZXJfaWR9Ogd0cmlnZ2VyQmsKGGNvbS5nb29nbGUuY2xvdWRidWlsZC52MVAB",
            "Wkdnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2RldnRv",
            "b2xzL2Nsb3VkYnVpbGQvdjE7Y2xvdWRidWlsZKICA0dDQmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.StorageSource), global::Google.Devtools.Cloudbuild.V1.StorageSource.Parser, new[]{ "Bucket", "Object", "Generation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.RepoSource), global::Google.Devtools.Cloudbuild.V1.RepoSource.Parser, new[]{ "ProjectId", "RepoName", "BranchName", "TagName", "CommitSha" }, new[]{ "Revision" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.Source), global::Google.Devtools.Cloudbuild.V1.Source.Parser, new[]{ "StorageSource", "RepoSource" }, new[]{ "Source" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.BuiltImage), global::Google.Devtools.Cloudbuild.V1.BuiltImage.Parser, new[]{ "Name", "Digest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.BuildStep), global::Google.Devtools.Cloudbuild.V1.BuildStep.Parser, new[]{ "Name", "Env", "Args", "Dir", "Id", "WaitFor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.Results), global::Google.Devtools.Cloudbuild.V1.Results.Parser, new[]{ "Images", "BuildStepImages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.Build), global::Google.Devtools.Cloudbuild.V1.Build.Parser, new[]{ "Id", "ProjectId", "Status", "StatusDetail", "Source", "Steps", "Results", "CreateTime", "StartTime", "FinishTime", "Timeout", "Images", "LogsBucket", "SourceProvenance", "BuildTriggerId", "Options", "LogUrl" }, null, new[]{ typeof(global::Google.Devtools.Cloudbuild.V1.Build.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.BuildOperationMetadata), global::Google.Devtools.Cloudbuild.V1.BuildOperationMetadata.Parser, new[]{ "Build" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.SourceProvenance), global::Google.Devtools.Cloudbuild.V1.SourceProvenance.Parser, new[]{ "ResolvedStorageSource", "ResolvedRepoSource", "FileHashes" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.FileHashes), global::Google.Devtools.Cloudbuild.V1.FileHashes.Parser, new[]{ "FileHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.Hash), global::Google.Devtools.Cloudbuild.V1.Hash.Parser, new[]{ "Type", "Value" }, null, new[]{ typeof(global::Google.Devtools.Cloudbuild.V1.Hash.Types.HashType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.CreateBuildRequest), global::Google.Devtools.Cloudbuild.V1.CreateBuildRequest.Parser, new[]{ "ProjectId", "Build" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.GetBuildRequest), global::Google.Devtools.Cloudbuild.V1.GetBuildRequest.Parser, new[]{ "ProjectId", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.ListBuildsRequest), global::Google.Devtools.Cloudbuild.V1.ListBuildsRequest.Parser, new[]{ "ProjectId", "PageSize", "PageToken", "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.ListBuildsResponse), global::Google.Devtools.Cloudbuild.V1.ListBuildsResponse.Parser, new[]{ "Builds", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.CancelBuildRequest), global::Google.Devtools.Cloudbuild.V1.CancelBuildRequest.Parser, new[]{ "ProjectId", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.BuildTrigger), global::Google.Devtools.Cloudbuild.V1.BuildTrigger.Parser, new[]{ "Id", "Description", "TriggerTemplate", "Build", "Filename", "CreateTime", "Disabled" }, new[]{ "BuildTemplate" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.CreateBuildTriggerRequest), global::Google.Devtools.Cloudbuild.V1.CreateBuildTriggerRequest.Parser, new[]{ "ProjectId", "Trigger" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.GetBuildTriggerRequest), global::Google.Devtools.Cloudbuild.V1.GetBuildTriggerRequest.Parser, new[]{ "ProjectId", "TriggerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.ListBuildTriggersRequest), global::Google.Devtools.Cloudbuild.V1.ListBuildTriggersRequest.Parser, new[]{ "ProjectId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.ListBuildTriggersResponse), global::Google.Devtools.Cloudbuild.V1.ListBuildTriggersResponse.Parser, new[]{ "Triggers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.DeleteBuildTriggerRequest), global::Google.Devtools.Cloudbuild.V1.DeleteBuildTriggerRequest.Parser, new[]{ "ProjectId", "TriggerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.UpdateBuildTriggerRequest), global::Google.Devtools.Cloudbuild.V1.UpdateBuildTriggerRequest.Parser, new[]{ "ProjectId", "TriggerId", "Trigger" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Cloudbuild.V1.BuildOptions), global::Google.Devtools.Cloudbuild.V1.BuildOptions.Parser, new[]{ "SourceProvenanceHash", "RequestedVerifyOption" }, null, new[]{ typeof(global::Google.Devtools.Cloudbuild.V1.BuildOptions.Types.VerifyOption) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  StorageSource describes the location of the source in an archive file in
  ///  Google Cloud Storage.
  /// </summary>
  public sealed partial class StorageSource : pb::IMessage<StorageSource> {
    private static readonly pb::MessageParser<StorageSource> _parser = new pb::MessageParser<StorageSource>(() => new StorageSource());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageSource(StorageSource other) : this() {
      bucket_ = other.bucket_;
      object_ = other.object_;
      generation_ = other.generation_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageSource Clone() {
      return new StorageSource(this);
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 1;
    private string bucket_ = "";
    /// <summary>
    ///  Google Cloud Storage bucket containing source (see
    ///  [Bucket Name
    ///  Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bucket {
      get { return bucket_; }
      set {
        bucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "object" field.</summary>
    public const int ObjectFieldNumber = 2;
    private string object_ = "";
    /// <summary>
    ///  Google Cloud Storage object containing source.
    ///
    ///  This object must be a gzipped archive file (.tar.gz) containing source to
    ///  build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Object {
      get { return object_; }
      set {
        object_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "generation" field.</summary>
    public const int GenerationFieldNumber = 3;
    private long generation_;
    /// <summary>
    ///  Google Cloud Storage generation for the object. If the generation is
    ///  omitted, the latest generation will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Generation {
      get { return generation_; }
      set {
        generation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bucket != other.Bucket) return false;
      if (Object != other.Object) return false;
      if (Generation != other.Generation) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bucket.Length != 0) hash ^= Bucket.GetHashCode();
      if (Object.Length != 0) hash ^= Object.GetHashCode();
      if (Generation != 0L) hash ^= Generation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bucket.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Bucket);
      }
      if (Object.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Object);
      }
      if (Generation != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Generation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bucket);
      }
      if (Object.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Object);
      }
      if (Generation != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Generation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageSource other) {
      if (other == null) {
        return;
      }
      if (other.Bucket.Length != 0) {
        Bucket = other.Bucket;
      }
      if (other.Object.Length != 0) {
        Object = other.Object;
      }
      if (other.Generation != 0L) {
        Generation = other.Generation;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Bucket = input.ReadString();
            break;
          }
          case 18: {
            Object = input.ReadString();
            break;
          }
          case 24: {
            Generation = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  RepoSource describes the location of the source in a Google Cloud Source
  ///  Repository.
  /// </summary>
  public sealed partial class RepoSource : pb::IMessage<RepoSource> {
    private static readonly pb::MessageParser<RepoSource> _parser = new pb::MessageParser<RepoSource>(() => new RepoSource());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepoSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepoSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepoSource(RepoSource other) : this() {
      projectId_ = other.projectId_;
      repoName_ = other.repoName_;
      switch (other.RevisionCase) {
        case RevisionOneofCase.BranchName:
          BranchName = other.BranchName;
          break;
        case RevisionOneofCase.TagName:
          TagName = other.TagName;
          break;
        case RevisionOneofCase.CommitSha:
          CommitSha = other.CommitSha;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepoSource Clone() {
      return new RepoSource(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    ///  ID of the project that owns the repo. If omitted, the project ID requesting
    ///  the build is assumed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "repo_name" field.</summary>
    public const int RepoNameFieldNumber = 2;
    private string repoName_ = "";
    /// <summary>
    ///  Name of the repo. If omitted, the name "default" is assumed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RepoName {
      get { return repoName_; }
      set {
        repoName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "branch_name" field.</summary>
    public const int BranchNameFieldNumber = 3;
    /// <summary>
    ///  Name of the branch to build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BranchName {
      get { return revisionCase_ == RevisionOneofCase.BranchName ? (string) revision_ : ""; }
      set {
        revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        revisionCase_ = RevisionOneofCase.BranchName;
      }
    }

    /// <summary>Field number for the "tag_name" field.</summary>
    public const int TagNameFieldNumber = 4;
    /// <summary>
    ///  Name of the tag to build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagName {
      get { return revisionCase_ == RevisionOneofCase.TagName ? (string) revision_ : ""; }
      set {
        revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        revisionCase_ = RevisionOneofCase.TagName;
      }
    }

    /// <summary>Field number for the "commit_sha" field.</summary>
    public const int CommitShaFieldNumber = 5;
    /// <summary>
    ///  Explicit commit SHA to build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommitSha {
      get { return revisionCase_ == RevisionOneofCase.CommitSha ? (string) revision_ : ""; }
      set {
        revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        revisionCase_ = RevisionOneofCase.CommitSha;
      }
    }

    private object revision_;
    /// <summary>Enum of possible cases for the "revision" oneof.</summary>
    public enum RevisionOneofCase {
      None = 0,
      BranchName = 3,
      TagName = 4,
      CommitSha = 5,
    }
    private RevisionOneofCase revisionCase_ = RevisionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevisionOneofCase RevisionCase {
      get { return revisionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRevision() {
      revisionCase_ = RevisionOneofCase.None;
      revision_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepoSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepoSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (RepoName != other.RepoName) return false;
      if (BranchName != other.BranchName) return false;
      if (TagName != other.TagName) return false;
      if (CommitSha != other.CommitSha) return false;
      if (RevisionCase != other.RevisionCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (RepoName.Length != 0) hash ^= RepoName.GetHashCode();
      if (revisionCase_ == RevisionOneofCase.BranchName) hash ^= BranchName.GetHashCode();
      if (revisionCase_ == RevisionOneofCase.TagName) hash ^= TagName.GetHashCode();
      if (revisionCase_ == RevisionOneofCase.CommitSha) hash ^= CommitSha.GetHashCode();
      hash ^= (int) revisionCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (RepoName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RepoName);
      }
      if (revisionCase_ == RevisionOneofCase.BranchName) {
        output.WriteRawTag(26);
        output.WriteString(BranchName);
      }
      if (revisionCase_ == RevisionOneofCase.TagName) {
        output.WriteRawTag(34);
        output.WriteString(TagName);
      }
      if (revisionCase_ == RevisionOneofCase.CommitSha) {
        output.WriteRawTag(42);
        output.WriteString(CommitSha);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (RepoName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RepoName);
      }
      if (revisionCase_ == RevisionOneofCase.BranchName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BranchName);
      }
      if (revisionCase_ == RevisionOneofCase.TagName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TagName);
      }
      if (revisionCase_ == RevisionOneofCase.CommitSha) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommitSha);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepoSource other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.RepoName.Length != 0) {
        RepoName = other.RepoName;
      }
      switch (other.RevisionCase) {
        case RevisionOneofCase.BranchName:
          BranchName = other.BranchName;
          break;
        case RevisionOneofCase.TagName:
          TagName = other.TagName;
          break;
        case RevisionOneofCase.CommitSha:
          CommitSha = other.CommitSha;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            RepoName = input.ReadString();
            break;
          }
          case 26: {
            BranchName = input.ReadString();
            break;
          }
          case 34: {
            TagName = input.ReadString();
            break;
          }
          case 42: {
            CommitSha = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Source describes the location of the source in a supported storage
  ///  service.
  /// </summary>
  public sealed partial class Source : pb::IMessage<Source> {
    private static readonly pb::MessageParser<Source> _parser = new pb::MessageParser<Source>(() => new Source());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Source> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Source() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Source(Source other) : this() {
      switch (other.SourceCase) {
        case SourceOneofCase.StorageSource:
          StorageSource = other.StorageSource.Clone();
          break;
        case SourceOneofCase.RepoSource:
          RepoSource = other.RepoSource.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Source Clone() {
      return new Source(this);
    }

    /// <summary>Field number for the "storage_source" field.</summary>
    public const int StorageSourceFieldNumber = 2;
    /// <summary>
    ///  If provided, get the source from this location in in Google Cloud
    ///  Storage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.StorageSource StorageSource {
      get { return sourceCase_ == SourceOneofCase.StorageSource ? (global::Google.Devtools.Cloudbuild.V1.StorageSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.StorageSource;
      }
    }

    /// <summary>Field number for the "repo_source" field.</summary>
    public const int RepoSourceFieldNumber = 3;
    /// <summary>
    ///  If provided, get source from this location in a Cloud Repo.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.RepoSource RepoSource {
      get { return sourceCase_ == SourceOneofCase.RepoSource ? (global::Google.Devtools.Cloudbuild.V1.RepoSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.RepoSource;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      StorageSource = 2,
      RepoSource = 3,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Source);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Source other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StorageSource, other.StorageSource)) return false;
      if (!object.Equals(RepoSource, other.RepoSource)) return false;
      if (SourceCase != other.SourceCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.StorageSource) hash ^= StorageSource.GetHashCode();
      if (sourceCase_ == SourceOneofCase.RepoSource) hash ^= RepoSource.GetHashCode();
      hash ^= (int) sourceCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sourceCase_ == SourceOneofCase.StorageSource) {
        output.WriteRawTag(18);
        output.WriteMessage(StorageSource);
      }
      if (sourceCase_ == SourceOneofCase.RepoSource) {
        output.WriteRawTag(26);
        output.WriteMessage(RepoSource);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.StorageSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StorageSource);
      }
      if (sourceCase_ == SourceOneofCase.RepoSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RepoSource);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Source other) {
      if (other == null) {
        return;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.StorageSource:
          StorageSource = other.StorageSource;
          break;
        case SourceOneofCase.RepoSource:
          RepoSource = other.RepoSource;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            global::Google.Devtools.Cloudbuild.V1.StorageSource subBuilder = new global::Google.Devtools.Cloudbuild.V1.StorageSource();
            if (sourceCase_ == SourceOneofCase.StorageSource) {
              subBuilder.MergeFrom(StorageSource);
            }
            input.ReadMessage(subBuilder);
            StorageSource = subBuilder;
            break;
          }
          case 26: {
            global::Google.Devtools.Cloudbuild.V1.RepoSource subBuilder = new global::Google.Devtools.Cloudbuild.V1.RepoSource();
            if (sourceCase_ == SourceOneofCase.RepoSource) {
              subBuilder.MergeFrom(RepoSource);
            }
            input.ReadMessage(subBuilder);
            RepoSource = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  BuiltImage describes an image built by the pipeline.
  /// </summary>
  public sealed partial class BuiltImage : pb::IMessage<BuiltImage> {
    private static readonly pb::MessageParser<BuiltImage> _parser = new pb::MessageParser<BuiltImage>(() => new BuiltImage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuiltImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuiltImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuiltImage(BuiltImage other) : this() {
      name_ = other.name_;
      digest_ = other.digest_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuiltImage Clone() {
      return new BuiltImage(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  Name used to push the container image to Google Container Registry, as
    ///  presented to `docker push`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "digest" field.</summary>
    public const int DigestFieldNumber = 3;
    private string digest_ = "";
    /// <summary>
    ///  Docker Registry 2.0 digest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Digest {
      get { return digest_; }
      set {
        digest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuiltImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuiltImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Digest != other.Digest) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Digest.Length != 0) hash ^= Digest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Digest.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Digest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Digest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Digest);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuiltImage other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Digest.Length != 0) {
        Digest = other.Digest;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Digest = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  BuildStep describes a step to perform in the build pipeline.
  /// </summary>
  public sealed partial class BuildStep : pb::IMessage<BuildStep> {
    private static readonly pb::MessageParser<BuildStep> _parser = new pb::MessageParser<BuildStep>(() => new BuildStep());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildStep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildStep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildStep(BuildStep other) : this() {
      name_ = other.name_;
      env_ = other.env_.Clone();
      args_ = other.args_.Clone();
      dir_ = other.dir_;
      id_ = other.id_;
      waitFor_ = other.waitFor_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildStep Clone() {
      return new BuildStep(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  The name of the container image that will run this particular build step.
    ///
    ///  If the image is already available in the host's Docker daemon's cache, it
    ///  will be run directly. If not, the host will attempt to pull the image
    ///  first, using the builder service account's credentials if necessary.
    ///
    ///  The Docker daemon's cache will already have the latest versions of all of
    ///  the officially supported build steps
    ///  (https://github.com/GoogleCloudPlatform/cloud-builders). The Docker daemon
    ///  will also have cached many of the layers for some popular images, like
    ///  "ubuntu", "debian", but they will be refreshed at the time you attempt to
    ///  use them.
    ///
    ///  If you built an image in a previous build step, it will be stored in the
    ///  host's Docker daemon's cache and is available to use as the name for a
    ///  later build step.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "env" field.</summary>
    public const int EnvFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_env_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> env_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  A list of environment variable definitions to be used when running a step.
    ///
    ///  The elements are of the form "KEY=VALUE" for the environment variable "KEY"
    ///  being given the value "VALUE".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Env {
      get { return env_; }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_args_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> args_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  A list of arguments that will be presented to the step when it is started.
    ///
    ///  If the image used to run the step's container has an entrypoint, these args
    ///  will be used as arguments to that entrypoint. If the image does not define
    ///  an entrypoint, the first element in args will be used as the entrypoint,
    ///  and the remainder will be used as arguments.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Args {
      get { return args_; }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 4;
    private string dir_ = "";
    /// <summary>
    ///  Working directory (relative to project source root) to use when running
    ///  this operation's container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dir {
      get { return dir_; }
      set {
        dir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private string id_ = "";
    /// <summary>
    ///  Optional unique identifier for this build step, used in wait_for to
    ///  reference this build step as a dependency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "wait_for" field.</summary>
    public const int WaitForFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_waitFor_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> waitFor_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  The ID(s) of the step(s) that this build step depends on.
    ///  This build step will not start until all the build steps in wait_for
    ///  have completed successfully. If wait_for is empty, this build step will
    ///  start when all previous build steps in the Build.Steps list have completed
    ///  successfully.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> WaitFor {
      get { return waitFor_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildStep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildStep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!env_.Equals(other.env_)) return false;
      if(!args_.Equals(other.args_)) return false;
      if (Dir != other.Dir) return false;
      if (Id != other.Id) return false;
      if(!waitFor_.Equals(other.waitFor_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= env_.GetHashCode();
      hash ^= args_.GetHashCode();
      if (Dir.Length != 0) hash ^= Dir.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= waitFor_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      env_.WriteTo(output, _repeated_env_codec);
      args_.WriteTo(output, _repeated_args_codec);
      if (Dir.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Dir);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Id);
      }
      waitFor_.WriteTo(output, _repeated_waitFor_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += env_.CalculateSize(_repeated_env_codec);
      size += args_.CalculateSize(_repeated_args_codec);
      if (Dir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dir);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += waitFor_.CalculateSize(_repeated_waitFor_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildStep other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      env_.Add(other.env_);
      args_.Add(other.args_);
      if (other.Dir.Length != 0) {
        Dir = other.Dir;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      waitFor_.Add(other.waitFor_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            env_.AddEntriesFrom(input, _repeated_env_codec);
            break;
          }
          case 26: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
          case 34: {
            Dir = input.ReadString();
            break;
          }
          case 42: {
            Id = input.ReadString();
            break;
          }
          case 50: {
            waitFor_.AddEntriesFrom(input, _repeated_waitFor_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Results describes the artifacts created by the build pipeline.
  /// </summary>
  public sealed partial class Results : pb::IMessage<Results> {
    private static readonly pb::MessageParser<Results> _parser = new pb::MessageParser<Results>(() => new Results());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Results> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Results() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Results(Results other) : this() {
      images_ = other.images_.Clone();
      buildStepImages_ = other.buildStepImages_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Results Clone() {
      return new Results(this);
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Devtools.Cloudbuild.V1.BuiltImage> _repeated_images_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Devtools.Cloudbuild.V1.BuiltImage.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.BuiltImage> images_ = new pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.BuiltImage>();
    /// <summary>
    ///  Images that were built as a part of the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.BuiltImage> Images {
      get { return images_; }
    }

    /// <summary>Field number for the "build_step_images" field.</summary>
    public const int BuildStepImagesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_buildStepImages_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> buildStepImages_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  List of build step digests, in order corresponding to build step indices.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BuildStepImages {
      get { return buildStepImages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Results);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Results other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!images_.Equals(other.images_)) return false;
      if(!buildStepImages_.Equals(other.buildStepImages_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= images_.GetHashCode();
      hash ^= buildStepImages_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      images_.WriteTo(output, _repeated_images_codec);
      buildStepImages_.WriteTo(output, _repeated_buildStepImages_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += images_.CalculateSize(_repeated_images_codec);
      size += buildStepImages_.CalculateSize(_repeated_buildStepImages_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Results other) {
      if (other == null) {
        return;
      }
      images_.Add(other.images_);
      buildStepImages_.Add(other.buildStepImages_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
          case 26: {
            buildStepImages_.AddEntriesFrom(input, _repeated_buildStepImages_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  A build resource in the Container Builder API.
  ///
  ///  At a high level, a Build describes where to find source code, how to build
  ///  it (for example, the builder image to run on the source), and what tag to
  ///  apply to the built image when it is pushed to Google Container Registry.
  ///
  ///  Fields can include the following variables which will be expanded when the
  ///  build is created:
  ///
  ///  - $PROJECT_ID: the project ID of the build.
  ///  - $BUILD_ID: the autogenerated ID of the build.
  ///  - $REPO_NAME: the source repository name specified by RepoSource.
  ///  - $BRANCH_NAME: the branch name specified by RepoSource.
  ///  - $TAG_NAME: the tag name specified by RepoSource.
  ///  - $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or
  ///    resolved from the specified branch or tag.
  /// </summary>
  public sealed partial class Build : pb::IMessage<Build> {
    private static readonly pb::MessageParser<Build> _parser = new pb::MessageParser<Build>(() => new Build());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Build> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Build() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Build(Build other) : this() {
      id_ = other.id_;
      projectId_ = other.projectId_;
      status_ = other.status_;
      statusDetail_ = other.statusDetail_;
      Source = other.source_ != null ? other.Source.Clone() : null;
      steps_ = other.steps_.Clone();
      Results = other.results_ != null ? other.Results.Clone() : null;
      CreateTime = other.createTime_ != null ? other.CreateTime.Clone() : null;
      StartTime = other.startTime_ != null ? other.StartTime.Clone() : null;
      FinishTime = other.finishTime_ != null ? other.FinishTime.Clone() : null;
      Timeout = other.timeout_ != null ? other.Timeout.Clone() : null;
      images_ = other.images_.Clone();
      logsBucket_ = other.logsBucket_;
      SourceProvenance = other.sourceProvenance_ != null ? other.SourceProvenance.Clone() : null;
      buildTriggerId_ = other.buildTriggerId_;
      Options = other.options_ != null ? other.Options.Clone() : null;
      logUrl_ = other.logUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Build Clone() {
      return new Build(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///  Unique identifier of the build.
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 16;
    private string projectId_ = "";
    /// <summary>
    ///  ID of the project.
    ///  @OutputOnly.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Google.Devtools.Cloudbuild.V1.Build.Types.Status status_ = 0;
    /// <summary>
    ///  Status of the build.
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.Build.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "status_detail" field.</summary>
    public const int StatusDetailFieldNumber = 24;
    private string statusDetail_ = "";
    /// <summary>
    ///  Customer-readable message about the current status.
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusDetail {
      get { return statusDetail_; }
      set {
        statusDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 3;
    private global::Google.Devtools.Cloudbuild.V1.Source source_;
    /// <summary>
    ///  Describes where to find the source files to build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.Source Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "steps" field.</summary>
    public const int StepsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Google.Devtools.Cloudbuild.V1.BuildStep> _repeated_steps_codec
        = pb::FieldCodec.ForMessage(90, global::Google.Devtools.Cloudbuild.V1.BuildStep.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.BuildStep> steps_ = new pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.BuildStep>();
    /// <summary>
    ///  Describes the operations to be performed on the workspace.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.BuildStep> Steps {
      get { return steps_; }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 10;
    private global::Google.Devtools.Cloudbuild.V1.Results results_;
    /// <summary>
    ///  Results of the build.
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.Results Results {
      get { return results_; }
      set {
        results_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    ///  Time at which the request to create the build was received.
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    ///  Time at which execution of the build was started.
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "finish_time" field.</summary>
    public const int FinishTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp finishTime_;
    /// <summary>
    ///  Time at which execution of the build was finished.
    ///
    ///  The difference between finish_time and start_time is the duration of the
    ///  build's execution.
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FinishTime {
      get { return finishTime_; }
      set {
        finishTime_ = value;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Duration timeout_;
    /// <summary>
    ///  Amount of time that this build should be allowed to run, to second
    ///  granularity. If this amount of time elapses, work on the build will cease
    ///  and the build status will be TIMEOUT.
    ///
    ///  Default time is ten minutes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_images_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> images_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  A list of images to be pushed upon the successful completion of all build
    ///  steps.
    ///
    ///  The images will be pushed using the builder service account's credentials.
    ///
    ///  The digests of the pushed images will be stored in the Build resource's
    ///  results field.
    ///
    ///  If any of the images fail to be pushed, the build is marked FAILURE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Images {
      get { return images_; }
    }

    /// <summary>Field number for the "logs_bucket" field.</summary>
    public const int LogsBucketFieldNumber = 19;
    private string logsBucket_ = "";
    /// <summary>
    ///  Google Cloud Storage bucket where logs should be written (see
    ///  [Bucket Name
    ///  Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
    ///  Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogsBucket {
      get { return logsBucket_; }
      set {
        logsBucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_provenance" field.</summary>
    public const int SourceProvenanceFieldNumber = 21;
    private global::Google.Devtools.Cloudbuild.V1.SourceProvenance sourceProvenance_;
    /// <summary>
    ///  A permanent fixed identifier for source.
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.SourceProvenance SourceProvenance {
      get { return sourceProvenance_; }
      set {
        sourceProvenance_ = value;
      }
    }

    /// <summary>Field number for the "build_trigger_id" field.</summary>
    public const int BuildTriggerIdFieldNumber = 22;
    private string buildTriggerId_ = "";
    /// <summary>
    ///  The ID of the BuildTrigger that triggered this build, if it was
    ///  triggered automatically.
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildTriggerId {
      get { return buildTriggerId_; }
      set {
        buildTriggerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 23;
    private global::Google.Devtools.Cloudbuild.V1.BuildOptions options_;
    /// <summary>
    ///  Special options for this build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.BuildOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    /// <summary>Field number for the "log_url" field.</summary>
    public const int LogUrlFieldNumber = 25;
    private string logUrl_ = "";
    /// <summary>
    ///  URL to logs for this build in Google Cloud Logging.
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogUrl {
      get { return logUrl_; }
      set {
        logUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Build);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Build other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ProjectId != other.ProjectId) return false;
      if (Status != other.Status) return false;
      if (StatusDetail != other.StatusDetail) return false;
      if (!object.Equals(Source, other.Source)) return false;
      if(!steps_.Equals(other.steps_)) return false;
      if (!object.Equals(Results, other.Results)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(FinishTime, other.FinishTime)) return false;
      if (!object.Equals(Timeout, other.Timeout)) return false;
      if(!images_.Equals(other.images_)) return false;
      if (LogsBucket != other.LogsBucket) return false;
      if (!object.Equals(SourceProvenance, other.SourceProvenance)) return false;
      if (BuildTriggerId != other.BuildTriggerId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      if (LogUrl != other.LogUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (StatusDetail.Length != 0) hash ^= StatusDetail.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      hash ^= steps_.GetHashCode();
      if (results_ != null) hash ^= Results.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (finishTime_ != null) hash ^= FinishTime.GetHashCode();
      if (timeout_ != null) hash ^= Timeout.GetHashCode();
      hash ^= images_.GetHashCode();
      if (LogsBucket.Length != 0) hash ^= LogsBucket.GetHashCode();
      if (sourceProvenance_ != null) hash ^= SourceProvenance.GetHashCode();
      if (BuildTriggerId.Length != 0) hash ^= BuildTriggerId.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (LogUrl.Length != 0) hash ^= LogUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (source_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Source);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StartTime);
      }
      if (finishTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FinishTime);
      }
      if (results_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Results);
      }
      steps_.WriteTo(output, _repeated_steps_codec);
      if (timeout_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Timeout);
      }
      images_.WriteTo(output, _repeated_images_codec);
      if (ProjectId.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ProjectId);
      }
      if (LogsBucket.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(LogsBucket);
      }
      if (sourceProvenance_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(SourceProvenance);
      }
      if (BuildTriggerId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(BuildTriggerId);
      }
      if (options_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Options);
      }
      if (StatusDetail.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(StatusDetail);
      }
      if (LogUrl.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(LogUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ProjectId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (StatusDetail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StatusDetail);
      }
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      size += steps_.CalculateSize(_repeated_steps_codec);
      if (results_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Results);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (finishTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinishTime);
      }
      if (timeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timeout);
      }
      size += images_.CalculateSize(_repeated_images_codec);
      if (LogsBucket.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LogsBucket);
      }
      if (sourceProvenance_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SourceProvenance);
      }
      if (BuildTriggerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BuildTriggerId);
      }
      if (options_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (LogUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LogUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Build other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.StatusDetail.Length != 0) {
        StatusDetail = other.StatusDetail;
      }
      if (other.source_ != null) {
        if (source_ == null) {
          source_ = new global::Google.Devtools.Cloudbuild.V1.Source();
        }
        Source.MergeFrom(other.Source);
      }
      steps_.Add(other.steps_);
      if (other.results_ != null) {
        if (results_ == null) {
          results_ = new global::Google.Devtools.Cloudbuild.V1.Results();
        }
        Results.MergeFrom(other.Results);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.finishTime_ != null) {
        if (finishTime_ == null) {
          finishTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FinishTime.MergeFrom(other.FinishTime);
      }
      if (other.timeout_ != null) {
        if (timeout_ == null) {
          timeout_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Timeout.MergeFrom(other.Timeout);
      }
      images_.Add(other.images_);
      if (other.LogsBucket.Length != 0) {
        LogsBucket = other.LogsBucket;
      }
      if (other.sourceProvenance_ != null) {
        if (sourceProvenance_ == null) {
          sourceProvenance_ = new global::Google.Devtools.Cloudbuild.V1.SourceProvenance();
        }
        SourceProvenance.MergeFrom(other.SourceProvenance);
      }
      if (other.BuildTriggerId.Length != 0) {
        BuildTriggerId = other.BuildTriggerId;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Google.Devtools.Cloudbuild.V1.BuildOptions();
        }
        Options.MergeFrom(other.Options);
      }
      if (other.LogUrl.Length != 0) {
        LogUrl = other.LogUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            status_ = (global::Google.Devtools.Cloudbuild.V1.Build.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            if (source_ == null) {
              source_ = new global::Google.Devtools.Cloudbuild.V1.Source();
            }
            input.ReadMessage(source_);
            break;
          }
          case 50: {
            if (createTime_ == null) {
              createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(createTime_);
            break;
          }
          case 58: {
            if (startTime_ == null) {
              startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(startTime_);
            break;
          }
          case 66: {
            if (finishTime_ == null) {
              finishTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(finishTime_);
            break;
          }
          case 82: {
            if (results_ == null) {
              results_ = new global::Google.Devtools.Cloudbuild.V1.Results();
            }
            input.ReadMessage(results_);
            break;
          }
          case 90: {
            steps_.AddEntriesFrom(input, _repeated_steps_codec);
            break;
          }
          case 98: {
            if (timeout_ == null) {
              timeout_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(timeout_);
            break;
          }
          case 106: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
          case 130: {
            ProjectId = input.ReadString();
            break;
          }
          case 154: {
            LogsBucket = input.ReadString();
            break;
          }
          case 170: {
            if (sourceProvenance_ == null) {
              sourceProvenance_ = new global::Google.Devtools.Cloudbuild.V1.SourceProvenance();
            }
            input.ReadMessage(sourceProvenance_);
            break;
          }
          case 178: {
            BuildTriggerId = input.ReadString();
            break;
          }
          case 186: {
            if (options_ == null) {
              options_ = new global::Google.Devtools.Cloudbuild.V1.BuildOptions();
            }
            input.ReadMessage(options_);
            break;
          }
          case 194: {
            StatusDetail = input.ReadString();
            break;
          }
          case 202: {
            LogUrl = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Build message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///  Possible status of a build.
      ///  Non-terminal statuses.
      /// </summary>
      public enum Status {
        /// <summary>
        ///  Status of the build is unknown.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        ///  Build is queued; work has not yet begun.
        /// </summary>
        [pbr::OriginalName("QUEUED")] Queued = 1,
        /// <summary>
        ///  Build is being executed.
        /// </summary>
        [pbr::OriginalName("WORKING")] Working = 2,
        /// <summary>
        ///  Build finished successfully.
        /// </summary>
        [pbr::OriginalName("SUCCESS")] Success = 3,
        /// <summary>
        ///  Build failed to complete successfully.
        /// </summary>
        [pbr::OriginalName("FAILURE")] Failure = 4,
        /// <summary>
        ///  Build failed due to an internal cause.
        /// </summary>
        [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 5,
        /// <summary>
        ///  Build took longer than was allowed.
        /// </summary>
        [pbr::OriginalName("TIMEOUT")] Timeout = 6,
        /// <summary>
        ///  Build was canceled by a user.
        /// </summary>
        [pbr::OriginalName("CANCELLED")] Cancelled = 7,
      }

    }
    #endregion

  }

  /// <summary>
  ///  Metadata for build operations.
  /// </summary>
  public sealed partial class BuildOperationMetadata : pb::IMessage<BuildOperationMetadata> {
    private static readonly pb::MessageParser<BuildOperationMetadata> _parser = new pb::MessageParser<BuildOperationMetadata>(() => new BuildOperationMetadata());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildOperationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildOperationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildOperationMetadata(BuildOperationMetadata other) : this() {
      Build = other.build_ != null ? other.Build.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildOperationMetadata Clone() {
      return new BuildOperationMetadata(this);
    }

    /// <summary>Field number for the "build" field.</summary>
    public const int BuildFieldNumber = 1;
    private global::Google.Devtools.Cloudbuild.V1.Build build_;
    /// <summary>
    ///  The build that the operation is tracking.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.Build Build {
      get { return build_; }
      set {
        build_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildOperationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildOperationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Build, other.Build)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (build_ != null) hash ^= Build.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (build_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Build);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (build_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Build);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildOperationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.build_ != null) {
        if (build_ == null) {
          build_ = new global::Google.Devtools.Cloudbuild.V1.Build();
        }
        Build.MergeFrom(other.Build);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (build_ == null) {
              build_ = new global::Google.Devtools.Cloudbuild.V1.Build();
            }
            input.ReadMessage(build_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Provenance of the source. Ways to find the original source, or verify that
  ///  some source was used for this build.
  /// </summary>
  public sealed partial class SourceProvenance : pb::IMessage<SourceProvenance> {
    private static readonly pb::MessageParser<SourceProvenance> _parser = new pb::MessageParser<SourceProvenance>(() => new SourceProvenance());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SourceProvenance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceProvenance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceProvenance(SourceProvenance other) : this() {
      ResolvedStorageSource = other.resolvedStorageSource_ != null ? other.ResolvedStorageSource.Clone() : null;
      ResolvedRepoSource = other.resolvedRepoSource_ != null ? other.ResolvedRepoSource.Clone() : null;
      fileHashes_ = other.fileHashes_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceProvenance Clone() {
      return new SourceProvenance(this);
    }

    /// <summary>Field number for the "resolved_storage_source" field.</summary>
    public const int ResolvedStorageSourceFieldNumber = 3;
    private global::Google.Devtools.Cloudbuild.V1.StorageSource resolvedStorageSource_;
    /// <summary>
    ///  A copy of the build's source.storage_source, if exists, with any
    ///  generations resolved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.StorageSource ResolvedStorageSource {
      get { return resolvedStorageSource_; }
      set {
        resolvedStorageSource_ = value;
      }
    }

    /// <summary>Field number for the "resolved_repo_source" field.</summary>
    public const int ResolvedRepoSourceFieldNumber = 6;
    private global::Google.Devtools.Cloudbuild.V1.RepoSource resolvedRepoSource_;
    /// <summary>
    ///  A copy of the build's source.repo_source, if exists, with any
    ///  revisions resolved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.RepoSource ResolvedRepoSource {
      get { return resolvedRepoSource_; }
      set {
        resolvedRepoSource_ = value;
      }
    }

    /// <summary>Field number for the "file_hashes" field.</summary>
    public const int FileHashesFieldNumber = 4;
    private static readonly pbc::MapField<string, global::Google.Devtools.Cloudbuild.V1.FileHashes>.Codec _map_fileHashes_codec
        = new pbc::MapField<string, global::Google.Devtools.Cloudbuild.V1.FileHashes>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Google.Devtools.Cloudbuild.V1.FileHashes.Parser), 34);
    private readonly pbc::MapField<string, global::Google.Devtools.Cloudbuild.V1.FileHashes> fileHashes_ = new pbc::MapField<string, global::Google.Devtools.Cloudbuild.V1.FileHashes>();
    /// <summary>
    ///  Hash(es) of the build source, which can be used to verify that the original
    ///  source integrity was maintained in the build. Note that FileHashes will
    ///  only be populated if BuildOptions has requested a SourceProvenanceHash.
    ///
    ///  The keys to this map are file paths used as build source and the values
    ///  contain the hash values for those files.
    ///
    ///  If the build source came in a single package such as a gzipped tarfile
    ///  (.tar.gz), the FileHash will be for the single path to that file.
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Devtools.Cloudbuild.V1.FileHashes> FileHashes {
      get { return fileHashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SourceProvenance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SourceProvenance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResolvedStorageSource, other.ResolvedStorageSource)) return false;
      if (!object.Equals(ResolvedRepoSource, other.ResolvedRepoSource)) return false;
      if (!FileHashes.Equals(other.FileHashes)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resolvedStorageSource_ != null) hash ^= ResolvedStorageSource.GetHashCode();
      if (resolvedRepoSource_ != null) hash ^= ResolvedRepoSource.GetHashCode();
      hash ^= FileHashes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resolvedStorageSource_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResolvedStorageSource);
      }
      fileHashes_.WriteTo(output, _map_fileHashes_codec);
      if (resolvedRepoSource_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ResolvedRepoSource);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resolvedStorageSource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResolvedStorageSource);
      }
      if (resolvedRepoSource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResolvedRepoSource);
      }
      size += fileHashes_.CalculateSize(_map_fileHashes_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SourceProvenance other) {
      if (other == null) {
        return;
      }
      if (other.resolvedStorageSource_ != null) {
        if (resolvedStorageSource_ == null) {
          resolvedStorageSource_ = new global::Google.Devtools.Cloudbuild.V1.StorageSource();
        }
        ResolvedStorageSource.MergeFrom(other.ResolvedStorageSource);
      }
      if (other.resolvedRepoSource_ != null) {
        if (resolvedRepoSource_ == null) {
          resolvedRepoSource_ = new global::Google.Devtools.Cloudbuild.V1.RepoSource();
        }
        ResolvedRepoSource.MergeFrom(other.ResolvedRepoSource);
      }
      fileHashes_.Add(other.fileHashes_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 26: {
            if (resolvedStorageSource_ == null) {
              resolvedStorageSource_ = new global::Google.Devtools.Cloudbuild.V1.StorageSource();
            }
            input.ReadMessage(resolvedStorageSource_);
            break;
          }
          case 34: {
            fileHashes_.AddEntriesFrom(input, _map_fileHashes_codec);
            break;
          }
          case 50: {
            if (resolvedRepoSource_ == null) {
              resolvedRepoSource_ = new global::Google.Devtools.Cloudbuild.V1.RepoSource();
            }
            input.ReadMessage(resolvedRepoSource_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Container message for hashes of byte content of files, used in
  ///  SourceProvenance messages to verify integrity of source input to the build.
  /// </summary>
  public sealed partial class FileHashes : pb::IMessage<FileHashes> {
    private static readonly pb::MessageParser<FileHashes> _parser = new pb::MessageParser<FileHashes>(() => new FileHashes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileHashes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileHashes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileHashes(FileHashes other) : this() {
      fileHash_ = other.fileHash_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileHashes Clone() {
      return new FileHashes(this);
    }

    /// <summary>Field number for the "file_hash" field.</summary>
    public const int FileHashFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Devtools.Cloudbuild.V1.Hash> _repeated_fileHash_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Devtools.Cloudbuild.V1.Hash.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.Hash> fileHash_ = new pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.Hash>();
    /// <summary>
    ///  Collection of file hashes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.Hash> FileHash {
      get { return fileHash_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileHashes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileHashes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fileHash_.Equals(other.fileHash_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fileHash_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fileHash_.WriteTo(output, _repeated_fileHash_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fileHash_.CalculateSize(_repeated_fileHash_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileHashes other) {
      if (other == null) {
        return;
      }
      fileHash_.Add(other.fileHash_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            fileHash_.AddEntriesFrom(input, _repeated_fileHash_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Container message for hash values.
  /// </summary>
  public sealed partial class Hash : pb::IMessage<Hash> {
    private static readonly pb::MessageParser<Hash> _parser = new pb::MessageParser<Hash>(() => new Hash());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hash> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash(Hash other) : this() {
      type_ = other.type_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash Clone() {
      return new Hash(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Google.Devtools.Cloudbuild.V1.Hash.Types.HashType type_ = 0;
    /// <summary>
    ///  The type of hash that was performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.Hash.Types.HashType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    /// <summary>
    ///  The hash value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hash);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hash other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hash other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::Google.Devtools.Cloudbuild.V1.Hash.Types.HashType) input.ReadEnum();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Hash message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///  Specifies the hash algorithm, if any.
      /// </summary>
      public enum HashType {
        /// <summary>
        ///  No hash requested.
        /// </summary>
        [pbr::OriginalName("NONE")] None = 0,
        /// <summary>
        ///  Use a sha256 hash.
        /// </summary>
        [pbr::OriginalName("SHA256")] Sha256 = 1,
      }

    }
    #endregion

  }

  /// <summary>
  ///  Request to create a new build.
  /// </summary>
  public sealed partial class CreateBuildRequest : pb::IMessage<CreateBuildRequest> {
    private static readonly pb::MessageParser<CreateBuildRequest> _parser = new pb::MessageParser<CreateBuildRequest>(() => new CreateBuildRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateBuildRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBuildRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBuildRequest(CreateBuildRequest other) : this() {
      projectId_ = other.projectId_;
      Build = other.build_ != null ? other.Build.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBuildRequest Clone() {
      return new CreateBuildRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    ///  ID of the project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "build" field.</summary>
    public const int BuildFieldNumber = 2;
    private global::Google.Devtools.Cloudbuild.V1.Build build_;
    /// <summary>
    ///  Build resource to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.Build Build {
      get { return build_; }
      set {
        build_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateBuildRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateBuildRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (!object.Equals(Build, other.Build)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (build_ != null) hash ^= Build.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (build_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Build);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (build_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Build);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateBuildRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.build_ != null) {
        if (build_ == null) {
          build_ = new global::Google.Devtools.Cloudbuild.V1.Build();
        }
        Build.MergeFrom(other.Build);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            if (build_ == null) {
              build_ = new global::Google.Devtools.Cloudbuild.V1.Build();
            }
            input.ReadMessage(build_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request to get a build.
  /// </summary>
  public sealed partial class GetBuildRequest : pb::IMessage<GetBuildRequest> {
    private static readonly pb::MessageParser<GetBuildRequest> _parser = new pb::MessageParser<GetBuildRequest>(() => new GetBuildRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBuildRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBuildRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBuildRequest(GetBuildRequest other) : this() {
      projectId_ = other.projectId_;
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBuildRequest Clone() {
      return new GetBuildRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    ///  ID of the project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    ///  ID of the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBuildRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBuildRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBuildRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request to list builds.
  /// </summary>
  public sealed partial class ListBuildsRequest : pb::IMessage<ListBuildsRequest> {
    private static readonly pb::MessageParser<ListBuildsRequest> _parser = new pb::MessageParser<ListBuildsRequest>(() => new ListBuildsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListBuildsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBuildsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBuildsRequest(ListBuildsRequest other) : this() {
      projectId_ = other.projectId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBuildsRequest Clone() {
      return new ListBuildsRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    ///  ID of the project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    ///  Number of results to return in the list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    ///  Token to provide to skip to a particular spot in the list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 8;
    private string filter_ = "";
    /// <summary>
    ///  The raw filter text to constrain the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListBuildsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListBuildsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Filter);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListBuildsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 66: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Response including listed builds.
  /// </summary>
  public sealed partial class ListBuildsResponse : pb::IMessage<ListBuildsResponse> {
    private static readonly pb::MessageParser<ListBuildsResponse> _parser = new pb::MessageParser<ListBuildsResponse>(() => new ListBuildsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListBuildsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBuildsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBuildsResponse(ListBuildsResponse other) : this() {
      builds_ = other.builds_.Clone();
      nextPageToken_ = other.nextPageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBuildsResponse Clone() {
      return new ListBuildsResponse(this);
    }

    /// <summary>Field number for the "builds" field.</summary>
    public const int BuildsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Devtools.Cloudbuild.V1.Build> _repeated_builds_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Devtools.Cloudbuild.V1.Build.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.Build> builds_ = new pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.Build>();
    /// <summary>
    ///  Builds will be sorted by create_time, descending.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.Build> Builds {
      get { return builds_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    ///  Token to receive the next page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListBuildsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListBuildsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!builds_.Equals(other.builds_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= builds_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      builds_.WriteTo(output, _repeated_builds_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += builds_.CalculateSize(_repeated_builds_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListBuildsResponse other) {
      if (other == null) {
        return;
      }
      builds_.Add(other.builds_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            builds_.AddEntriesFrom(input, _repeated_builds_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request to cancel an ongoing build.
  /// </summary>
  public sealed partial class CancelBuildRequest : pb::IMessage<CancelBuildRequest> {
    private static readonly pb::MessageParser<CancelBuildRequest> _parser = new pb::MessageParser<CancelBuildRequest>(() => new CancelBuildRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelBuildRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelBuildRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelBuildRequest(CancelBuildRequest other) : this() {
      projectId_ = other.projectId_;
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelBuildRequest Clone() {
      return new CancelBuildRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    ///  ID of the project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    ///  ID of the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelBuildRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelBuildRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelBuildRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Configuration for an automated build in response to source repository
  ///  changes.
  /// </summary>
  public sealed partial class BuildTrigger : pb::IMessage<BuildTrigger> {
    private static readonly pb::MessageParser<BuildTrigger> _parser = new pb::MessageParser<BuildTrigger>(() => new BuildTrigger());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildTrigger> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildTrigger() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildTrigger(BuildTrigger other) : this() {
      id_ = other.id_;
      description_ = other.description_;
      TriggerTemplate = other.triggerTemplate_ != null ? other.TriggerTemplate.Clone() : null;
      CreateTime = other.createTime_ != null ? other.CreateTime.Clone() : null;
      disabled_ = other.disabled_;
      switch (other.BuildTemplateCase) {
        case BuildTemplateOneofCase.Build:
          Build = other.Build.Clone();
          break;
        case BuildTemplateOneofCase.Filename:
          Filename = other.Filename;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildTrigger Clone() {
      return new BuildTrigger(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///  Unique identifier of the trigger.
    ///
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 10;
    private string description_ = "";
    /// <summary>
    ///  Human-readable description of this trigger.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_template" field.</summary>
    public const int TriggerTemplateFieldNumber = 7;
    private global::Google.Devtools.Cloudbuild.V1.RepoSource triggerTemplate_;
    /// <summary>
    ///  Template describing the types of source changes to trigger a build.
    ///
    ///  Branch and tag names in trigger templates are interpreted as regular
    ///  expressions. Any branch or tag change that matches that regular expression
    ///  will trigger a build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.RepoSource TriggerTemplate {
      get { return triggerTemplate_; }
      set {
        triggerTemplate_ = value;
      }
    }

    /// <summary>Field number for the "build" field.</summary>
    public const int BuildFieldNumber = 4;
    /// <summary>
    ///  Contents of the build template.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.Build Build {
      get { return buildTemplateCase_ == BuildTemplateOneofCase.Build ? (global::Google.Devtools.Cloudbuild.V1.Build) buildTemplate_ : null; }
      set {
        buildTemplate_ = value;
        buildTemplateCase_ = value == null ? BuildTemplateOneofCase.None : BuildTemplateOneofCase.Build;
      }
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 8;
    /// <summary>
    ///  Path, from the source root, to a file whose contents is used for the
    ///  template.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filename {
      get { return buildTemplateCase_ == BuildTemplateOneofCase.Filename ? (string) buildTemplate_ : ""; }
      set {
        buildTemplate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        buildTemplateCase_ = BuildTemplateOneofCase.Filename;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    ///  Time when the trigger was created.
    ///
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 9;
    private bool disabled_;
    /// <summary>
    ///  If true, the trigger will never result in a build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    private object buildTemplate_;
    /// <summary>Enum of possible cases for the "build_template" oneof.</summary>
    public enum BuildTemplateOneofCase {
      None = 0,
      Build = 4,
      Filename = 8,
    }
    private BuildTemplateOneofCase buildTemplateCase_ = BuildTemplateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildTemplateOneofCase BuildTemplateCase {
      get { return buildTemplateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBuildTemplate() {
      buildTemplateCase_ = BuildTemplateOneofCase.None;
      buildTemplate_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildTrigger);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildTrigger other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(TriggerTemplate, other.TriggerTemplate)) return false;
      if (!object.Equals(Build, other.Build)) return false;
      if (Filename != other.Filename) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (Disabled != other.Disabled) return false;
      if (BuildTemplateCase != other.BuildTemplateCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (triggerTemplate_ != null) hash ^= TriggerTemplate.GetHashCode();
      if (buildTemplateCase_ == BuildTemplateOneofCase.Build) hash ^= Build.GetHashCode();
      if (buildTemplateCase_ == BuildTemplateOneofCase.Filename) hash ^= Filename.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      hash ^= (int) buildTemplateCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (buildTemplateCase_ == BuildTemplateOneofCase.Build) {
        output.WriteRawTag(34);
        output.WriteMessage(Build);
      }
      if (createTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreateTime);
      }
      if (triggerTemplate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TriggerTemplate);
      }
      if (buildTemplateCase_ == BuildTemplateOneofCase.Filename) {
        output.WriteRawTag(66);
        output.WriteString(Filename);
      }
      if (Disabled != false) {
        output.WriteRawTag(72);
        output.WriteBool(Disabled);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Description);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (triggerTemplate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TriggerTemplate);
      }
      if (buildTemplateCase_ == BuildTemplateOneofCase.Build) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Build);
      }
      if (buildTemplateCase_ == BuildTemplateOneofCase.Filename) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (Disabled != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildTrigger other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.triggerTemplate_ != null) {
        if (triggerTemplate_ == null) {
          triggerTemplate_ = new global::Google.Devtools.Cloudbuild.V1.RepoSource();
        }
        TriggerTemplate.MergeFrom(other.TriggerTemplate);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      switch (other.BuildTemplateCase) {
        case BuildTemplateOneofCase.Build:
          Build = other.Build;
          break;
        case BuildTemplateOneofCase.Filename:
          Filename = other.Filename;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Devtools.Cloudbuild.V1.Build subBuilder = new global::Google.Devtools.Cloudbuild.V1.Build();
            if (buildTemplateCase_ == BuildTemplateOneofCase.Build) {
              subBuilder.MergeFrom(Build);
            }
            input.ReadMessage(subBuilder);
            Build = subBuilder;
            break;
          }
          case 42: {
            if (createTime_ == null) {
              createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(createTime_);
            break;
          }
          case 58: {
            if (triggerTemplate_ == null) {
              triggerTemplate_ = new global::Google.Devtools.Cloudbuild.V1.RepoSource();
            }
            input.ReadMessage(triggerTemplate_);
            break;
          }
          case 66: {
            Filename = input.ReadString();
            break;
          }
          case 72: {
            Disabled = input.ReadBool();
            break;
          }
          case 82: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request to create a new BuildTrigger.
  /// </summary>
  public sealed partial class CreateBuildTriggerRequest : pb::IMessage<CreateBuildTriggerRequest> {
    private static readonly pb::MessageParser<CreateBuildTriggerRequest> _parser = new pb::MessageParser<CreateBuildTriggerRequest>(() => new CreateBuildTriggerRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateBuildTriggerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBuildTriggerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBuildTriggerRequest(CreateBuildTriggerRequest other) : this() {
      projectId_ = other.projectId_;
      Trigger = other.trigger_ != null ? other.Trigger.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBuildTriggerRequest Clone() {
      return new CreateBuildTriggerRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    ///  ID of the project for which to configure automatic builds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger" field.</summary>
    public const int TriggerFieldNumber = 2;
    private global::Google.Devtools.Cloudbuild.V1.BuildTrigger trigger_;
    /// <summary>
    ///  BuildTrigger to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.BuildTrigger Trigger {
      get { return trigger_; }
      set {
        trigger_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateBuildTriggerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateBuildTriggerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (!object.Equals(Trigger, other.Trigger)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (trigger_ != null) hash ^= Trigger.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (trigger_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Trigger);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (trigger_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trigger);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateBuildTriggerRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.trigger_ != null) {
        if (trigger_ == null) {
          trigger_ = new global::Google.Devtools.Cloudbuild.V1.BuildTrigger();
        }
        Trigger.MergeFrom(other.Trigger);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            if (trigger_ == null) {
              trigger_ = new global::Google.Devtools.Cloudbuild.V1.BuildTrigger();
            }
            input.ReadMessage(trigger_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Returns the BuildTrigger with the specified ID.
  /// </summary>
  public sealed partial class GetBuildTriggerRequest : pb::IMessage<GetBuildTriggerRequest> {
    private static readonly pb::MessageParser<GetBuildTriggerRequest> _parser = new pb::MessageParser<GetBuildTriggerRequest>(() => new GetBuildTriggerRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBuildTriggerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBuildTriggerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBuildTriggerRequest(GetBuildTriggerRequest other) : this() {
      projectId_ = other.projectId_;
      triggerId_ = other.triggerId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBuildTriggerRequest Clone() {
      return new GetBuildTriggerRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    ///  ID of the project that owns the trigger.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_id" field.</summary>
    public const int TriggerIdFieldNumber = 2;
    private string triggerId_ = "";
    /// <summary>
    ///  ID of the BuildTrigger to get.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TriggerId {
      get { return triggerId_; }
      set {
        triggerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBuildTriggerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBuildTriggerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (TriggerId != other.TriggerId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (TriggerId.Length != 0) hash ^= TriggerId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (TriggerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TriggerId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (TriggerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBuildTriggerRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.TriggerId.Length != 0) {
        TriggerId = other.TriggerId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            TriggerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request to list existing BuildTriggers.
  /// </summary>
  public sealed partial class ListBuildTriggersRequest : pb::IMessage<ListBuildTriggersRequest> {
    private static readonly pb::MessageParser<ListBuildTriggersRequest> _parser = new pb::MessageParser<ListBuildTriggersRequest>(() => new ListBuildTriggersRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListBuildTriggersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBuildTriggersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBuildTriggersRequest(ListBuildTriggersRequest other) : this() {
      projectId_ = other.projectId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBuildTriggersRequest Clone() {
      return new ListBuildTriggersRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    ///  ID of the project for which to list BuildTriggers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListBuildTriggersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListBuildTriggersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListBuildTriggersRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Response containing existing BuildTriggers.
  /// </summary>
  public sealed partial class ListBuildTriggersResponse : pb::IMessage<ListBuildTriggersResponse> {
    private static readonly pb::MessageParser<ListBuildTriggersResponse> _parser = new pb::MessageParser<ListBuildTriggersResponse>(() => new ListBuildTriggersResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListBuildTriggersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBuildTriggersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBuildTriggersResponse(ListBuildTriggersResponse other) : this() {
      triggers_ = other.triggers_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBuildTriggersResponse Clone() {
      return new ListBuildTriggersResponse(this);
    }

    /// <summary>Field number for the "triggers" field.</summary>
    public const int TriggersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Devtools.Cloudbuild.V1.BuildTrigger> _repeated_triggers_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Devtools.Cloudbuild.V1.BuildTrigger.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.BuildTrigger> triggers_ = new pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.BuildTrigger>();
    /// <summary>
    ///  BuildTriggers for the project, sorted by create_time descending.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.BuildTrigger> Triggers {
      get { return triggers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListBuildTriggersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListBuildTriggersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!triggers_.Equals(other.triggers_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= triggers_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      triggers_.WriteTo(output, _repeated_triggers_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += triggers_.CalculateSize(_repeated_triggers_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListBuildTriggersResponse other) {
      if (other == null) {
        return;
      }
      triggers_.Add(other.triggers_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            triggers_.AddEntriesFrom(input, _repeated_triggers_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request to delete a BuildTrigger.
  /// </summary>
  public sealed partial class DeleteBuildTriggerRequest : pb::IMessage<DeleteBuildTriggerRequest> {
    private static readonly pb::MessageParser<DeleteBuildTriggerRequest> _parser = new pb::MessageParser<DeleteBuildTriggerRequest>(() => new DeleteBuildTriggerRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteBuildTriggerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBuildTriggerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBuildTriggerRequest(DeleteBuildTriggerRequest other) : this() {
      projectId_ = other.projectId_;
      triggerId_ = other.triggerId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBuildTriggerRequest Clone() {
      return new DeleteBuildTriggerRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    ///  ID of the project that owns the trigger.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_id" field.</summary>
    public const int TriggerIdFieldNumber = 2;
    private string triggerId_ = "";
    /// <summary>
    ///  ID of the BuildTrigger to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TriggerId {
      get { return triggerId_; }
      set {
        triggerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteBuildTriggerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteBuildTriggerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (TriggerId != other.TriggerId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (TriggerId.Length != 0) hash ^= TriggerId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (TriggerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TriggerId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (TriggerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteBuildTriggerRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.TriggerId.Length != 0) {
        TriggerId = other.TriggerId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            TriggerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request to update an existing BuildTrigger.
  /// </summary>
  public sealed partial class UpdateBuildTriggerRequest : pb::IMessage<UpdateBuildTriggerRequest> {
    private static readonly pb::MessageParser<UpdateBuildTriggerRequest> _parser = new pb::MessageParser<UpdateBuildTriggerRequest>(() => new UpdateBuildTriggerRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateBuildTriggerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBuildTriggerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBuildTriggerRequest(UpdateBuildTriggerRequest other) : this() {
      projectId_ = other.projectId_;
      triggerId_ = other.triggerId_;
      Trigger = other.trigger_ != null ? other.Trigger.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBuildTriggerRequest Clone() {
      return new UpdateBuildTriggerRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    ///  ID of the project that owns the trigger.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_id" field.</summary>
    public const int TriggerIdFieldNumber = 2;
    private string triggerId_ = "";
    /// <summary>
    ///  ID of the BuildTrigger to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TriggerId {
      get { return triggerId_; }
      set {
        triggerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger" field.</summary>
    public const int TriggerFieldNumber = 3;
    private global::Google.Devtools.Cloudbuild.V1.BuildTrigger trigger_;
    /// <summary>
    ///  BuildTrigger to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.BuildTrigger Trigger {
      get { return trigger_; }
      set {
        trigger_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateBuildTriggerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateBuildTriggerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (TriggerId != other.TriggerId) return false;
      if (!object.Equals(Trigger, other.Trigger)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (TriggerId.Length != 0) hash ^= TriggerId.GetHashCode();
      if (trigger_ != null) hash ^= Trigger.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (TriggerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TriggerId);
      }
      if (trigger_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Trigger);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (TriggerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerId);
      }
      if (trigger_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trigger);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateBuildTriggerRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.TriggerId.Length != 0) {
        TriggerId = other.TriggerId;
      }
      if (other.trigger_ != null) {
        if (trigger_ == null) {
          trigger_ = new global::Google.Devtools.Cloudbuild.V1.BuildTrigger();
        }
        Trigger.MergeFrom(other.Trigger);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            TriggerId = input.ReadString();
            break;
          }
          case 26: {
            if (trigger_ == null) {
              trigger_ = new global::Google.Devtools.Cloudbuild.V1.BuildTrigger();
            }
            input.ReadMessage(trigger_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Optional arguments to enable specific features of builds.
  /// </summary>
  public sealed partial class BuildOptions : pb::IMessage<BuildOptions> {
    private static readonly pb::MessageParser<BuildOptions> _parser = new pb::MessageParser<BuildOptions>(() => new BuildOptions());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Cloudbuild.V1.CloudbuildReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildOptions(BuildOptions other) : this() {
      sourceProvenanceHash_ = other.sourceProvenanceHash_.Clone();
      requestedVerifyOption_ = other.requestedVerifyOption_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildOptions Clone() {
      return new BuildOptions(this);
    }

    /// <summary>Field number for the "source_provenance_hash" field.</summary>
    public const int SourceProvenanceHashFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Devtools.Cloudbuild.V1.Hash.Types.HashType> _repeated_sourceProvenanceHash_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Google.Devtools.Cloudbuild.V1.Hash.Types.HashType) x);
    private readonly pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.Hash.Types.HashType> sourceProvenanceHash_ = new pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.Hash.Types.HashType>();
    /// <summary>
    ///  Requested hash for SourceProvenance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Cloudbuild.V1.Hash.Types.HashType> SourceProvenanceHash {
      get { return sourceProvenanceHash_; }
    }

    /// <summary>Field number for the "requested_verify_option" field.</summary>
    public const int RequestedVerifyOptionFieldNumber = 2;
    private global::Google.Devtools.Cloudbuild.V1.BuildOptions.Types.VerifyOption requestedVerifyOption_ = 0;
    /// <summary>
    ///  Requested verifiability options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Cloudbuild.V1.BuildOptions.Types.VerifyOption RequestedVerifyOption {
      get { return requestedVerifyOption_; }
      set {
        requestedVerifyOption_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sourceProvenanceHash_.Equals(other.sourceProvenanceHash_)) return false;
      if (RequestedVerifyOption != other.RequestedVerifyOption) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sourceProvenanceHash_.GetHashCode();
      if (RequestedVerifyOption != 0) hash ^= RequestedVerifyOption.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sourceProvenanceHash_.WriteTo(output, _repeated_sourceProvenanceHash_codec);
      if (RequestedVerifyOption != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RequestedVerifyOption);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sourceProvenanceHash_.CalculateSize(_repeated_sourceProvenanceHash_codec);
      if (RequestedVerifyOption != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestedVerifyOption);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildOptions other) {
      if (other == null) {
        return;
      }
      sourceProvenanceHash_.Add(other.sourceProvenanceHash_);
      if (other.RequestedVerifyOption != 0) {
        RequestedVerifyOption = other.RequestedVerifyOption;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            sourceProvenanceHash_.AddEntriesFrom(input, _repeated_sourceProvenanceHash_codec);
            break;
          }
          case 16: {
            requestedVerifyOption_ = (global::Google.Devtools.Cloudbuild.V1.BuildOptions.Types.VerifyOption) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BuildOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///  Specifies the manner in which the build should be verified, if at all.
      /// </summary>
      public enum VerifyOption {
        /// <summary>
        ///  Not a verifiable build. (default)
        /// </summary>
        [pbr::OriginalName("NOT_VERIFIED")] NotVerified = 0,
        /// <summary>
        ///  Verified build.
        /// </summary>
        [pbr::OriginalName("VERIFIED")] Verified = 1,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
