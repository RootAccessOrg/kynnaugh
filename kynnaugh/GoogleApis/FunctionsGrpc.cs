// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/functions/v1beta2/functions.proto
// Original file comments:
// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Google.Cloud.Functions.V1Beta2 {
  /// <summary>
  ///  A service that application uses to manipulate triggers and functions.
  /// </summary>
  public static class CloudFunctionsService
  {
    static readonly string __ServiceName = "google.cloud.functions.v1beta2.CloudFunctionsService";

    static readonly Marshaller<global::Google.Cloud.Functions.V1Beta2.ListFunctionsRequest> __Marshaller_ListFunctionsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Functions.V1Beta2.ListFunctionsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Cloud.Functions.V1Beta2.ListFunctionsResponse> __Marshaller_ListFunctionsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Functions.V1Beta2.ListFunctionsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Cloud.Functions.V1Beta2.GetFunctionRequest> __Marshaller_GetFunctionRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Functions.V1Beta2.GetFunctionRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Cloud.Functions.V1Beta2.CloudFunction> __Marshaller_CloudFunction = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Functions.V1Beta2.CloudFunction.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Cloud.Functions.V1Beta2.CreateFunctionRequest> __Marshaller_CreateFunctionRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Functions.V1Beta2.CreateFunctionRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.LongRunning.Operation> __Marshaller_Operation = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.LongRunning.Operation.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Cloud.Functions.V1Beta2.UpdateFunctionRequest> __Marshaller_UpdateFunctionRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Functions.V1Beta2.UpdateFunctionRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Cloud.Functions.V1Beta2.DeleteFunctionRequest> __Marshaller_DeleteFunctionRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Functions.V1Beta2.DeleteFunctionRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Cloud.Functions.V1Beta2.CallFunctionRequest> __Marshaller_CallFunctionRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Functions.V1Beta2.CallFunctionRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Cloud.Functions.V1Beta2.CallFunctionResponse> __Marshaller_CallFunctionResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Cloud.Functions.V1Beta2.CallFunctionResponse.Parser.ParseFrom);

    static readonly Method<global::Google.Cloud.Functions.V1Beta2.ListFunctionsRequest, global::Google.Cloud.Functions.V1Beta2.ListFunctionsResponse> __Method_ListFunctions = new Method<global::Google.Cloud.Functions.V1Beta2.ListFunctionsRequest, global::Google.Cloud.Functions.V1Beta2.ListFunctionsResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListFunctions",
        __Marshaller_ListFunctionsRequest,
        __Marshaller_ListFunctionsResponse);

    static readonly Method<global::Google.Cloud.Functions.V1Beta2.GetFunctionRequest, global::Google.Cloud.Functions.V1Beta2.CloudFunction> __Method_GetFunction = new Method<global::Google.Cloud.Functions.V1Beta2.GetFunctionRequest, global::Google.Cloud.Functions.V1Beta2.CloudFunction>(
        MethodType.Unary,
        __ServiceName,
        "GetFunction",
        __Marshaller_GetFunctionRequest,
        __Marshaller_CloudFunction);

    static readonly Method<global::Google.Cloud.Functions.V1Beta2.CreateFunctionRequest, global::Google.LongRunning.Operation> __Method_CreateFunction = new Method<global::Google.Cloud.Functions.V1Beta2.CreateFunctionRequest, global::Google.LongRunning.Operation>(
        MethodType.Unary,
        __ServiceName,
        "CreateFunction",
        __Marshaller_CreateFunctionRequest,
        __Marshaller_Operation);

    static readonly Method<global::Google.Cloud.Functions.V1Beta2.UpdateFunctionRequest, global::Google.LongRunning.Operation> __Method_UpdateFunction = new Method<global::Google.Cloud.Functions.V1Beta2.UpdateFunctionRequest, global::Google.LongRunning.Operation>(
        MethodType.Unary,
        __ServiceName,
        "UpdateFunction",
        __Marshaller_UpdateFunctionRequest,
        __Marshaller_Operation);

    static readonly Method<global::Google.Cloud.Functions.V1Beta2.DeleteFunctionRequest, global::Google.LongRunning.Operation> __Method_DeleteFunction = new Method<global::Google.Cloud.Functions.V1Beta2.DeleteFunctionRequest, global::Google.LongRunning.Operation>(
        MethodType.Unary,
        __ServiceName,
        "DeleteFunction",
        __Marshaller_DeleteFunctionRequest,
        __Marshaller_Operation);

    static readonly Method<global::Google.Cloud.Functions.V1Beta2.CallFunctionRequest, global::Google.Cloud.Functions.V1Beta2.CallFunctionResponse> __Method_CallFunction = new Method<global::Google.Cloud.Functions.V1Beta2.CallFunctionRequest, global::Google.Cloud.Functions.V1Beta2.CallFunctionResponse>(
        MethodType.Unary,
        __ServiceName,
        "CallFunction",
        __Marshaller_CallFunctionRequest,
        __Marshaller_CallFunctionResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Functions.V1Beta2.FunctionsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CloudFunctionsService</summary>
    public abstract class CloudFunctionsServiceBase
    {
      /// <summary>
      ///  Returns a list of functions that belong to the requested project.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Functions.V1Beta2.ListFunctionsResponse> ListFunctions(global::Google.Cloud.Functions.V1Beta2.ListFunctionsRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Returns a function with the given name from the requested project.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Functions.V1Beta2.CloudFunction> GetFunction(global::Google.Cloud.Functions.V1Beta2.GetFunctionRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Creates a new function. If a function with the given name already exists in
      ///  the specified project, the long running operation will return
      ///  ALREADY_EXISTS error.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateFunction(global::Google.Cloud.Functions.V1Beta2.CreateFunctionRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Updates existing function.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateFunction(global::Google.Cloud.Functions.V1Beta2.UpdateFunctionRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Deletes a function with the given name from the specified project. If the
      ///  given function is used by some trigger, the trigger will be updated to
      ///  remove this function.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteFunction(global::Google.Cloud.Functions.V1Beta2.DeleteFunctionRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Invokes synchronously deployed function. To be used for testing, very
      ///  limited traffic allowed.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Functions.V1Beta2.CallFunctionResponse> CallFunction(global::Google.Cloud.Functions.V1Beta2.CallFunctionRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CloudFunctionsService</summary>
    public class CloudFunctionsServiceClient : ClientBase<CloudFunctionsServiceClient>
    {
      /// <summary>Creates a new client for CloudFunctionsService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CloudFunctionsServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CloudFunctionsService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CloudFunctionsServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CloudFunctionsServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CloudFunctionsServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Returns a list of functions that belong to the requested project.
      /// </summary>
      public virtual global::Google.Cloud.Functions.V1Beta2.ListFunctionsResponse ListFunctions(global::Google.Cloud.Functions.V1Beta2.ListFunctionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListFunctions(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Returns a list of functions that belong to the requested project.
      /// </summary>
      public virtual global::Google.Cloud.Functions.V1Beta2.ListFunctionsResponse ListFunctions(global::Google.Cloud.Functions.V1Beta2.ListFunctionsRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFunctions, null, options, request);
      }
      /// <summary>
      ///  Returns a list of functions that belong to the requested project.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Cloud.Functions.V1Beta2.ListFunctionsResponse> ListFunctionsAsync(global::Google.Cloud.Functions.V1Beta2.ListFunctionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListFunctionsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Returns a list of functions that belong to the requested project.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Cloud.Functions.V1Beta2.ListFunctionsResponse> ListFunctionsAsync(global::Google.Cloud.Functions.V1Beta2.ListFunctionsRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFunctions, null, options, request);
      }
      /// <summary>
      ///  Returns a function with the given name from the requested project.
      /// </summary>
      public virtual global::Google.Cloud.Functions.V1Beta2.CloudFunction GetFunction(global::Google.Cloud.Functions.V1Beta2.GetFunctionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetFunction(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Returns a function with the given name from the requested project.
      /// </summary>
      public virtual global::Google.Cloud.Functions.V1Beta2.CloudFunction GetFunction(global::Google.Cloud.Functions.V1Beta2.GetFunctionRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFunction, null, options, request);
      }
      /// <summary>
      ///  Returns a function with the given name from the requested project.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Cloud.Functions.V1Beta2.CloudFunction> GetFunctionAsync(global::Google.Cloud.Functions.V1Beta2.GetFunctionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetFunctionAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Returns a function with the given name from the requested project.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Cloud.Functions.V1Beta2.CloudFunction> GetFunctionAsync(global::Google.Cloud.Functions.V1Beta2.GetFunctionRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFunction, null, options, request);
      }
      /// <summary>
      ///  Creates a new function. If a function with the given name already exists in
      ///  the specified project, the long running operation will return
      ///  ALREADY_EXISTS error.
      /// </summary>
      public virtual global::Google.LongRunning.Operation CreateFunction(global::Google.Cloud.Functions.V1Beta2.CreateFunctionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateFunction(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new function. If a function with the given name already exists in
      ///  the specified project, the long running operation will return
      ///  ALREADY_EXISTS error.
      /// </summary>
      public virtual global::Google.LongRunning.Operation CreateFunction(global::Google.Cloud.Functions.V1Beta2.CreateFunctionRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFunction, null, options, request);
      }
      /// <summary>
      ///  Creates a new function. If a function with the given name already exists in
      ///  the specified project, the long running operation will return
      ///  ALREADY_EXISTS error.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> CreateFunctionAsync(global::Google.Cloud.Functions.V1Beta2.CreateFunctionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateFunctionAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new function. If a function with the given name already exists in
      ///  the specified project, the long running operation will return
      ///  ALREADY_EXISTS error.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> CreateFunctionAsync(global::Google.Cloud.Functions.V1Beta2.CreateFunctionRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFunction, null, options, request);
      }
      /// <summary>
      ///  Updates existing function.
      /// </summary>
      public virtual global::Google.LongRunning.Operation UpdateFunction(global::Google.Cloud.Functions.V1Beta2.UpdateFunctionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateFunction(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Updates existing function.
      /// </summary>
      public virtual global::Google.LongRunning.Operation UpdateFunction(global::Google.Cloud.Functions.V1Beta2.UpdateFunctionRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateFunction, null, options, request);
      }
      /// <summary>
      ///  Updates existing function.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateFunctionAsync(global::Google.Cloud.Functions.V1Beta2.UpdateFunctionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateFunctionAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Updates existing function.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateFunctionAsync(global::Google.Cloud.Functions.V1Beta2.UpdateFunctionRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateFunction, null, options, request);
      }
      /// <summary>
      ///  Deletes a function with the given name from the specified project. If the
      ///  given function is used by some trigger, the trigger will be updated to
      ///  remove this function.
      /// </summary>
      public virtual global::Google.LongRunning.Operation DeleteFunction(global::Google.Cloud.Functions.V1Beta2.DeleteFunctionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteFunction(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a function with the given name from the specified project. If the
      ///  given function is used by some trigger, the trigger will be updated to
      ///  remove this function.
      /// </summary>
      public virtual global::Google.LongRunning.Operation DeleteFunction(global::Google.Cloud.Functions.V1Beta2.DeleteFunctionRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFunction, null, options, request);
      }
      /// <summary>
      ///  Deletes a function with the given name from the specified project. If the
      ///  given function is used by some trigger, the trigger will be updated to
      ///  remove this function.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteFunctionAsync(global::Google.Cloud.Functions.V1Beta2.DeleteFunctionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteFunctionAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a function with the given name from the specified project. If the
      ///  given function is used by some trigger, the trigger will be updated to
      ///  remove this function.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteFunctionAsync(global::Google.Cloud.Functions.V1Beta2.DeleteFunctionRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFunction, null, options, request);
      }
      /// <summary>
      ///  Invokes synchronously deployed function. To be used for testing, very
      ///  limited traffic allowed.
      /// </summary>
      public virtual global::Google.Cloud.Functions.V1Beta2.CallFunctionResponse CallFunction(global::Google.Cloud.Functions.V1Beta2.CallFunctionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CallFunction(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Invokes synchronously deployed function. To be used for testing, very
      ///  limited traffic allowed.
      /// </summary>
      public virtual global::Google.Cloud.Functions.V1Beta2.CallFunctionResponse CallFunction(global::Google.Cloud.Functions.V1Beta2.CallFunctionRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CallFunction, null, options, request);
      }
      /// <summary>
      ///  Invokes synchronously deployed function. To be used for testing, very
      ///  limited traffic allowed.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Cloud.Functions.V1Beta2.CallFunctionResponse> CallFunctionAsync(global::Google.Cloud.Functions.V1Beta2.CallFunctionRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CallFunctionAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Invokes synchronously deployed function. To be used for testing, very
      ///  limited traffic allowed.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Cloud.Functions.V1Beta2.CallFunctionResponse> CallFunctionAsync(global::Google.Cloud.Functions.V1Beta2.CallFunctionRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CallFunction, null, options, request);
      }
      protected override CloudFunctionsServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CloudFunctionsServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(CloudFunctionsServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListFunctions, serviceImpl.ListFunctions)
          .AddMethod(__Method_GetFunction, serviceImpl.GetFunction)
          .AddMethod(__Method_CreateFunction, serviceImpl.CreateFunction)
          .AddMethod(__Method_UpdateFunction, serviceImpl.UpdateFunction)
          .AddMethod(__Method_DeleteFunction, serviceImpl.DeleteFunction)
          .AddMethod(__Method_CallFunction, serviceImpl.CallFunction).Build();
    }

  }
}
#endregion
