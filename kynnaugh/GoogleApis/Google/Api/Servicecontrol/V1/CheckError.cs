// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/check_error.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Api.Servicecontrol.V1 {

  /// <summary>Holder for reflection information generated from google/api/servicecontrol/v1/check_error.proto</summary>
  public static partial class CheckErrorReflection {

    #region Descriptor
    /// <summary>File descriptor for google/api/servicecontrol/v1/check_error.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CheckErrorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5nb29nbGUvYXBpL3NlcnZpY2Vjb250cm9sL3YxL2NoZWNrX2Vycm9yLnBy",
            "b3RvEhxnb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxGhxnb29nbGUvYXBp",
            "L2Fubm90YXRpb25zLnByb3RvIoIECgpDaGVja0Vycm9yEjsKBGNvZGUYASAB",
            "KA4yLS5nb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxLkNoZWNrRXJyb3Iu",
            "Q29kZRIOCgZkZXRhaWwYAiABKAkipgMKBENvZGUSGgoWRVJST1JfQ09ERV9V",
            "TlNQRUNJRklFRBAAEg0KCU5PVF9GT1VORBAFEhUKEVBFUk1JU1NJT05fREVO",
            "SUVEEAcSFgoSUkVTT1VSQ0VfRVhIQVVTVEVEEAgSGQoVU0VSVklDRV9OT1Rf",
            "QUNUSVZBVEVEEGgSFAoQQklMTElOR19ESVNBQkxFRBBrEhMKD1BST0pFQ1Rf",
            "REVMRVRFRBBsEhMKD1BST0pFQ1RfSU5WQUxJRBByEhYKEklQX0FERFJFU1Nf",
            "QkxPQ0tFRBBtEhMKD1JFRkVSRVJfQkxPQ0tFRBBuEhYKEkNMSUVOVF9BUFBf",
            "QkxPQ0tFRBBvEhMKD0FQSV9LRVlfSU5WQUxJRBBpEhMKD0FQSV9LRVlfRVhQ",
            "SVJFRBBwEhUKEUFQSV9LRVlfTk9UX0ZPVU5EEHESIQocTkFNRVNQQUNFX0xP",
            "T0tVUF9VTkFWQUlMQUJMRRCsAhIfChpTRVJWSUNFX1NUQVRVU19VTkFWQUlM",
            "QUJMRRCtAhIfChpCSUxMSU5HX1NUQVRVU19VTkFWQUlMQUJMRRCuAkKEAQog",
            "Y29tLmdvb2dsZS5hcGkuc2VydmljZWNvbnRyb2wudjFCD0NoZWNrRXJyb3JQ",
            "cm90b1ABWkpnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlz",
            "L2FwaS9zZXJ2aWNlY29udHJvbC92MTtzZXJ2aWNlY29udHJvbPgBAWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Api.Servicecontrol.V1.CheckError), global::Google.Api.Servicecontrol.V1.CheckError.Parser, new[]{ "Code", "Detail" }, null, new[]{ typeof(global::Google.Api.Servicecontrol.V1.CheckError.Types.Code) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  Defines the errors to be returned in
  ///  [google.api.servicecontrol.v1.CheckResponse.check_errors][google.api.servicecontrol.v1.CheckResponse.check_errors].
  /// </summary>
  public sealed partial class CheckError : pb::IMessage<CheckError> {
    private static readonly pb::MessageParser<CheckError> _parser = new pb::MessageParser<CheckError>(() => new CheckError());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Api.Servicecontrol.V1.CheckErrorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckError(CheckError other) : this() {
      code_ = other.code_;
      detail_ = other.detail_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckError Clone() {
      return new CheckError(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Api.Servicecontrol.V1.CheckError.Types.Code code_ = 0;
    /// <summary>
    ///  The error code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Api.Servicecontrol.V1.CheckError.Types.Code Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 2;
    private string detail_ = "";
    /// <summary>
    ///  Free-form text providing details on the error cause of the error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Detail {
      get { return detail_; }
      set {
        detail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Detail != other.Detail) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Detail.Length != 0) hash ^= Detail.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Detail.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Detail);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Detail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Detail);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckError other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Detail.Length != 0) {
        Detail = other.Detail;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            code_ = (global::Google.Api.Servicecontrol.V1.CheckError.Types.Code) input.ReadEnum();
            break;
          }
          case 18: {
            Detail = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CheckError message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///  Error codes for Check responses.
      /// </summary>
      public enum Code {
        /// <summary>
        ///  This is never used in `CheckResponse`.
        /// </summary>
        [pbr::OriginalName("ERROR_CODE_UNSPECIFIED")] ErrorCodeUnspecified = 0,
        /// <summary>
        ///  The consumer's project id was not found.
        ///  Same as [google.rpc.Code.NOT_FOUND][].
        /// </summary>
        [pbr::OriginalName("NOT_FOUND")] NotFound = 5,
        /// <summary>
        ///  The consumer doesn't have access to the specified resource.
        ///  Same as [google.rpc.Code.PERMISSION_DENIED][].
        /// </summary>
        [pbr::OriginalName("PERMISSION_DENIED")] PermissionDenied = 7,
        /// <summary>
        ///  Quota check failed. Same as [google.rpc.Code.RESOURCE_EXHAUSTED][].
        /// </summary>
        [pbr::OriginalName("RESOURCE_EXHAUSTED")] ResourceExhausted = 8,
        /// <summary>
        ///  The consumer hasn't activated the service.
        /// </summary>
        [pbr::OriginalName("SERVICE_NOT_ACTIVATED")] ServiceNotActivated = 104,
        /// <summary>
        ///  The consumer cannot access the service because billing is disabled.
        /// </summary>
        [pbr::OriginalName("BILLING_DISABLED")] BillingDisabled = 107,
        /// <summary>
        ///  The consumer's project has been marked as deleted (soft deletion).
        /// </summary>
        [pbr::OriginalName("PROJECT_DELETED")] ProjectDeleted = 108,
        /// <summary>
        ///  The consumer's project number or id does not represent a valid project.
        /// </summary>
        [pbr::OriginalName("PROJECT_INVALID")] ProjectInvalid = 114,
        /// <summary>
        ///  The IP address of the consumer is invalid for the specific consumer
        ///  project.
        /// </summary>
        [pbr::OriginalName("IP_ADDRESS_BLOCKED")] IpAddressBlocked = 109,
        /// <summary>
        ///  The referer address of the consumer request is invalid for the specific
        ///  consumer project.
        /// </summary>
        [pbr::OriginalName("REFERER_BLOCKED")] RefererBlocked = 110,
        /// <summary>
        ///  The client application of the consumer request is invalid for the
        ///  specific consumer project.
        /// </summary>
        [pbr::OriginalName("CLIENT_APP_BLOCKED")] ClientAppBlocked = 111,
        /// <summary>
        ///  The consumer's API key is invalid.
        /// </summary>
        [pbr::OriginalName("API_KEY_INVALID")] ApiKeyInvalid = 105,
        /// <summary>
        ///  The consumer's API Key has expired.
        /// </summary>
        [pbr::OriginalName("API_KEY_EXPIRED")] ApiKeyExpired = 112,
        /// <summary>
        ///  The consumer's API Key was not found in config record.
        /// </summary>
        [pbr::OriginalName("API_KEY_NOT_FOUND")] ApiKeyNotFound = 113,
        /// <summary>
        ///  The backend server for looking up project id/number is unavailable.
        /// </summary>
        [pbr::OriginalName("NAMESPACE_LOOKUP_UNAVAILABLE")] NamespaceLookupUnavailable = 300,
        /// <summary>
        ///  The backend server for checking service status is unavailable.
        /// </summary>
        [pbr::OriginalName("SERVICE_STATUS_UNAVAILABLE")] ServiceStatusUnavailable = 301,
        /// <summary>
        ///  The backend server for checking billing status is unavailable.
        /// </summary>
        [pbr::OriginalName("BILLING_STATUS_UNAVAILABLE")] BillingStatusUnavailable = 302,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
