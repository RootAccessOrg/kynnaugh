// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/variants.proto
// Original file comments:
// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Google.Genomics.V1 {
  public static class StreamingVariantService
  {
    static readonly string __ServiceName = "google.genomics.v1.StreamingVariantService";

    static readonly Marshaller<global::Google.Genomics.V1.StreamVariantsRequest> __Marshaller_StreamVariantsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.StreamVariantsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.StreamVariantsResponse> __Marshaller_StreamVariantsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.StreamVariantsResponse.Parser.ParseFrom);

    static readonly Method<global::Google.Genomics.V1.StreamVariantsRequest, global::Google.Genomics.V1.StreamVariantsResponse> __Method_StreamVariants = new Method<global::Google.Genomics.V1.StreamVariantsRequest, global::Google.Genomics.V1.StreamVariantsResponse>(
        MethodType.ServerStreaming,
        __ServiceName,
        "StreamVariants",
        __Marshaller_StreamVariantsRequest,
        __Marshaller_StreamVariantsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Genomics.V1.VariantsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of StreamingVariantService</summary>
    public abstract class StreamingVariantServiceBase
    {
      /// <summary>
      ///  Returns a stream of all the variants matching the search request, ordered
      ///  by reference name, position, and ID.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task StreamVariants(global::Google.Genomics.V1.StreamVariantsRequest request, IServerStreamWriter<global::Google.Genomics.V1.StreamVariantsResponse> responseStream, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for StreamingVariantService</summary>
    public class StreamingVariantServiceClient : ClientBase<StreamingVariantServiceClient>
    {
      /// <summary>Creates a new client for StreamingVariantService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public StreamingVariantServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for StreamingVariantService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public StreamingVariantServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected StreamingVariantServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected StreamingVariantServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Returns a stream of all the variants matching the search request, ordered
      ///  by reference name, position, and ID.
      /// </summary>
      public virtual AsyncServerStreamingCall<global::Google.Genomics.V1.StreamVariantsResponse> StreamVariants(global::Google.Genomics.V1.StreamVariantsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StreamVariants(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Returns a stream of all the variants matching the search request, ordered
      ///  by reference name, position, and ID.
      /// </summary>
      public virtual AsyncServerStreamingCall<global::Google.Genomics.V1.StreamVariantsResponse> StreamVariants(global::Google.Genomics.V1.StreamVariantsRequest request, CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_StreamVariants, null, options, request);
      }
      protected override StreamingVariantServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new StreamingVariantServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(StreamingVariantServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_StreamVariants, serviceImpl.StreamVariants).Build();
    }

  }
  public static class VariantServiceV1
  {
    static readonly string __ServiceName = "google.genomics.v1.VariantServiceV1";

    static readonly Marshaller<global::Google.Genomics.V1.ImportVariantsRequest> __Marshaller_ImportVariantsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.ImportVariantsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.LongRunning.Operation> __Marshaller_Operation = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.LongRunning.Operation.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.CreateVariantSetRequest> __Marshaller_CreateVariantSetRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.CreateVariantSetRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.VariantSet> __Marshaller_VariantSet = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.VariantSet.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.ExportVariantSetRequest> __Marshaller_ExportVariantSetRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.ExportVariantSetRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.GetVariantSetRequest> __Marshaller_GetVariantSetRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.GetVariantSetRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.SearchVariantSetsRequest> __Marshaller_SearchVariantSetsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.SearchVariantSetsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.SearchVariantSetsResponse> __Marshaller_SearchVariantSetsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.SearchVariantSetsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.DeleteVariantSetRequest> __Marshaller_DeleteVariantSetRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.DeleteVariantSetRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.UpdateVariantSetRequest> __Marshaller_UpdateVariantSetRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.UpdateVariantSetRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.SearchVariantsRequest> __Marshaller_SearchVariantsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.SearchVariantsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.SearchVariantsResponse> __Marshaller_SearchVariantsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.SearchVariantsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.CreateVariantRequest> __Marshaller_CreateVariantRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.CreateVariantRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.Variant> __Marshaller_Variant = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.Variant.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.UpdateVariantRequest> __Marshaller_UpdateVariantRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.UpdateVariantRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.DeleteVariantRequest> __Marshaller_DeleteVariantRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.DeleteVariantRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.GetVariantRequest> __Marshaller_GetVariantRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.GetVariantRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.MergeVariantsRequest> __Marshaller_MergeVariantsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.MergeVariantsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.SearchCallSetsRequest> __Marshaller_SearchCallSetsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.SearchCallSetsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.SearchCallSetsResponse> __Marshaller_SearchCallSetsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.SearchCallSetsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.CreateCallSetRequest> __Marshaller_CreateCallSetRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.CreateCallSetRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.CallSet> __Marshaller_CallSet = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.CallSet.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.UpdateCallSetRequest> __Marshaller_UpdateCallSetRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.UpdateCallSetRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.DeleteCallSetRequest> __Marshaller_DeleteCallSetRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.DeleteCallSetRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Genomics.V1.GetCallSetRequest> __Marshaller_GetCallSetRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Genomics.V1.GetCallSetRequest.Parser.ParseFrom);

    static readonly Method<global::Google.Genomics.V1.ImportVariantsRequest, global::Google.LongRunning.Operation> __Method_ImportVariants = new Method<global::Google.Genomics.V1.ImportVariantsRequest, global::Google.LongRunning.Operation>(
        MethodType.Unary,
        __ServiceName,
        "ImportVariants",
        __Marshaller_ImportVariantsRequest,
        __Marshaller_Operation);

    static readonly Method<global::Google.Genomics.V1.CreateVariantSetRequest, global::Google.Genomics.V1.VariantSet> __Method_CreateVariantSet = new Method<global::Google.Genomics.V1.CreateVariantSetRequest, global::Google.Genomics.V1.VariantSet>(
        MethodType.Unary,
        __ServiceName,
        "CreateVariantSet",
        __Marshaller_CreateVariantSetRequest,
        __Marshaller_VariantSet);

    static readonly Method<global::Google.Genomics.V1.ExportVariantSetRequest, global::Google.LongRunning.Operation> __Method_ExportVariantSet = new Method<global::Google.Genomics.V1.ExportVariantSetRequest, global::Google.LongRunning.Operation>(
        MethodType.Unary,
        __ServiceName,
        "ExportVariantSet",
        __Marshaller_ExportVariantSetRequest,
        __Marshaller_Operation);

    static readonly Method<global::Google.Genomics.V1.GetVariantSetRequest, global::Google.Genomics.V1.VariantSet> __Method_GetVariantSet = new Method<global::Google.Genomics.V1.GetVariantSetRequest, global::Google.Genomics.V1.VariantSet>(
        MethodType.Unary,
        __ServiceName,
        "GetVariantSet",
        __Marshaller_GetVariantSetRequest,
        __Marshaller_VariantSet);

    static readonly Method<global::Google.Genomics.V1.SearchVariantSetsRequest, global::Google.Genomics.V1.SearchVariantSetsResponse> __Method_SearchVariantSets = new Method<global::Google.Genomics.V1.SearchVariantSetsRequest, global::Google.Genomics.V1.SearchVariantSetsResponse>(
        MethodType.Unary,
        __ServiceName,
        "SearchVariantSets",
        __Marshaller_SearchVariantSetsRequest,
        __Marshaller_SearchVariantSetsResponse);

    static readonly Method<global::Google.Genomics.V1.DeleteVariantSetRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteVariantSet = new Method<global::Google.Genomics.V1.DeleteVariantSetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "DeleteVariantSet",
        __Marshaller_DeleteVariantSetRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Genomics.V1.UpdateVariantSetRequest, global::Google.Genomics.V1.VariantSet> __Method_UpdateVariantSet = new Method<global::Google.Genomics.V1.UpdateVariantSetRequest, global::Google.Genomics.V1.VariantSet>(
        MethodType.Unary,
        __ServiceName,
        "UpdateVariantSet",
        __Marshaller_UpdateVariantSetRequest,
        __Marshaller_VariantSet);

    static readonly Method<global::Google.Genomics.V1.SearchVariantsRequest, global::Google.Genomics.V1.SearchVariantsResponse> __Method_SearchVariants = new Method<global::Google.Genomics.V1.SearchVariantsRequest, global::Google.Genomics.V1.SearchVariantsResponse>(
        MethodType.Unary,
        __ServiceName,
        "SearchVariants",
        __Marshaller_SearchVariantsRequest,
        __Marshaller_SearchVariantsResponse);

    static readonly Method<global::Google.Genomics.V1.CreateVariantRequest, global::Google.Genomics.V1.Variant> __Method_CreateVariant = new Method<global::Google.Genomics.V1.CreateVariantRequest, global::Google.Genomics.V1.Variant>(
        MethodType.Unary,
        __ServiceName,
        "CreateVariant",
        __Marshaller_CreateVariantRequest,
        __Marshaller_Variant);

    static readonly Method<global::Google.Genomics.V1.UpdateVariantRequest, global::Google.Genomics.V1.Variant> __Method_UpdateVariant = new Method<global::Google.Genomics.V1.UpdateVariantRequest, global::Google.Genomics.V1.Variant>(
        MethodType.Unary,
        __ServiceName,
        "UpdateVariant",
        __Marshaller_UpdateVariantRequest,
        __Marshaller_Variant);

    static readonly Method<global::Google.Genomics.V1.DeleteVariantRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteVariant = new Method<global::Google.Genomics.V1.DeleteVariantRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "DeleteVariant",
        __Marshaller_DeleteVariantRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Genomics.V1.GetVariantRequest, global::Google.Genomics.V1.Variant> __Method_GetVariant = new Method<global::Google.Genomics.V1.GetVariantRequest, global::Google.Genomics.V1.Variant>(
        MethodType.Unary,
        __ServiceName,
        "GetVariant",
        __Marshaller_GetVariantRequest,
        __Marshaller_Variant);

    static readonly Method<global::Google.Genomics.V1.MergeVariantsRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_MergeVariants = new Method<global::Google.Genomics.V1.MergeVariantsRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "MergeVariants",
        __Marshaller_MergeVariantsRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Genomics.V1.SearchCallSetsRequest, global::Google.Genomics.V1.SearchCallSetsResponse> __Method_SearchCallSets = new Method<global::Google.Genomics.V1.SearchCallSetsRequest, global::Google.Genomics.V1.SearchCallSetsResponse>(
        MethodType.Unary,
        __ServiceName,
        "SearchCallSets",
        __Marshaller_SearchCallSetsRequest,
        __Marshaller_SearchCallSetsResponse);

    static readonly Method<global::Google.Genomics.V1.CreateCallSetRequest, global::Google.Genomics.V1.CallSet> __Method_CreateCallSet = new Method<global::Google.Genomics.V1.CreateCallSetRequest, global::Google.Genomics.V1.CallSet>(
        MethodType.Unary,
        __ServiceName,
        "CreateCallSet",
        __Marshaller_CreateCallSetRequest,
        __Marshaller_CallSet);

    static readonly Method<global::Google.Genomics.V1.UpdateCallSetRequest, global::Google.Genomics.V1.CallSet> __Method_UpdateCallSet = new Method<global::Google.Genomics.V1.UpdateCallSetRequest, global::Google.Genomics.V1.CallSet>(
        MethodType.Unary,
        __ServiceName,
        "UpdateCallSet",
        __Marshaller_UpdateCallSetRequest,
        __Marshaller_CallSet);

    static readonly Method<global::Google.Genomics.V1.DeleteCallSetRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCallSet = new Method<global::Google.Genomics.V1.DeleteCallSetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "DeleteCallSet",
        __Marshaller_DeleteCallSetRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Genomics.V1.GetCallSetRequest, global::Google.Genomics.V1.CallSet> __Method_GetCallSet = new Method<global::Google.Genomics.V1.GetCallSetRequest, global::Google.Genomics.V1.CallSet>(
        MethodType.Unary,
        __ServiceName,
        "GetCallSet",
        __Marshaller_GetCallSetRequest,
        __Marshaller_CallSet);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Genomics.V1.VariantsReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of VariantServiceV1</summary>
    public abstract class VariantServiceV1Base
    {
      /// <summary>
      ///  Creates variant data by asynchronously importing the provided information.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  The variants for import will be merged with any existing variant that
      ///  matches its reference sequence, start, end, reference bases, and
      ///  alternative bases. If no such variant exists, a new one will be created.
      ///
      ///  When variants are merged, the call information from the new variant
      ///  is added to the existing variant, and Variant info fields are merged
      ///  as specified in
      ///  [infoMergeConfig][google.genomics.v1.ImportVariantsRequest.info_merge_config].
      ///  As a special case, for single-sample VCF files, QUAL and FILTER fields will
      ///  be moved to the call level; these are sometimes interpreted in a
      ///  call-specific context.
      ///  Imported VCF headers are appended to the metadata already in a variant set.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ImportVariants(global::Google.Genomics.V1.ImportVariantsRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Creates a new variant set.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  The provided variant set must have a valid `datasetId` set - all other
      ///  fields are optional. Note that the `id` field will be ignored, as this is
      ///  assigned by the server.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Genomics.V1.VariantSet> CreateVariantSet(global::Google.Genomics.V1.CreateVariantSetRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Exports variant set data to an external destination.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ExportVariantSet(global::Google.Genomics.V1.ExportVariantSetRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Gets a variant set by ID.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Genomics.V1.VariantSet> GetVariantSet(global::Google.Genomics.V1.GetVariantSetRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Returns a list of all variant sets matching search criteria.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchVariantSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L49).
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Genomics.V1.SearchVariantSetsResponse> SearchVariantSets(global::Google.Genomics.V1.SearchVariantSetsRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Deletes a variant set including all variants, call sets, and calls within.
      ///  This is not reversible.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteVariantSet(global::Google.Genomics.V1.DeleteVariantSetRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Updates a variant set using patch semantics.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Genomics.V1.VariantSet> UpdateVariantSet(global::Google.Genomics.V1.UpdateVariantSetRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Gets a list of variants matching the criteria.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchVariants](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L126).
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Genomics.V1.SearchVariantsResponse> SearchVariants(global::Google.Genomics.V1.SearchVariantsRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Creates a new variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Genomics.V1.Variant> CreateVariant(global::Google.Genomics.V1.CreateVariantRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Updates a variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  This method supports patch semantics. Returns the modified variant without
      ///  its calls.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Genomics.V1.Variant> UpdateVariant(global::Google.Genomics.V1.UpdateVariantRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Deletes a variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteVariant(global::Google.Genomics.V1.DeleteVariantRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Gets a variant by ID.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Genomics.V1.Variant> GetVariant(global::Google.Genomics.V1.GetVariantRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Merges the given variants with existing variants.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Each variant will be
      ///  merged with an existing variant that matches its reference sequence,
      ///  start, end, reference bases, and alternative bases. If no such variant
      ///  exists, a new one will be created.
      ///
      ///  When variants are merged, the call information from the new variant
      ///  is added to the existing variant. Variant info fields are merged as
      ///  specified in the
      ///  [infoMergeConfig][google.genomics.v1.MergeVariantsRequest.info_merge_config]
      ///  field of the MergeVariantsRequest.
      ///
      ///  Please exercise caution when using this method!  It is easy to introduce
      ///  mistakes in existing variants and difficult to back out of them.  For
      ///  example,
      ///  suppose you were trying to merge a new variant with an existing one and
      ///  both
      ///  variants contain calls that belong to callsets with the same callset ID.
      ///
      ///      // Existing variant - irrelevant fields trimmed for clarity
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      0,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///      // New variant with conflicting call information
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      1,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///  The resulting merged variant would overwrite the existing calls with those
      ///  from the new variant:
      ///
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      1,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///  This may be the desired outcome, but it is up to the user to determine if
      ///  if that is indeed the case.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> MergeVariants(global::Google.Genomics.V1.MergeVariantsRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Gets a list of call sets matching the criteria.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchCallSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L178).
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Genomics.V1.SearchCallSetsResponse> SearchCallSets(global::Google.Genomics.V1.SearchCallSetsRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Creates a new call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Genomics.V1.CallSet> CreateCallSet(global::Google.Genomics.V1.CreateCallSetRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Updates a call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  This method supports patch semantics.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Genomics.V1.CallSet> UpdateCallSet(global::Google.Genomics.V1.UpdateCallSetRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Deletes a call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCallSet(global::Google.Genomics.V1.DeleteCallSetRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Gets a call set by ID.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Genomics.V1.CallSet> GetCallSet(global::Google.Genomics.V1.GetCallSetRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for VariantServiceV1</summary>
    public class VariantServiceV1Client : ClientBase<VariantServiceV1Client>
    {
      /// <summary>Creates a new client for VariantServiceV1</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public VariantServiceV1Client(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for VariantServiceV1 that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public VariantServiceV1Client(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected VariantServiceV1Client() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected VariantServiceV1Client(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Creates variant data by asynchronously importing the provided information.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  The variants for import will be merged with any existing variant that
      ///  matches its reference sequence, start, end, reference bases, and
      ///  alternative bases. If no such variant exists, a new one will be created.
      ///
      ///  When variants are merged, the call information from the new variant
      ///  is added to the existing variant, and Variant info fields are merged
      ///  as specified in
      ///  [infoMergeConfig][google.genomics.v1.ImportVariantsRequest.info_merge_config].
      ///  As a special case, for single-sample VCF files, QUAL and FILTER fields will
      ///  be moved to the call level; these are sometimes interpreted in a
      ///  call-specific context.
      ///  Imported VCF headers are appended to the metadata already in a variant set.
      /// </summary>
      public virtual global::Google.LongRunning.Operation ImportVariants(global::Google.Genomics.V1.ImportVariantsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ImportVariants(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates variant data by asynchronously importing the provided information.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  The variants for import will be merged with any existing variant that
      ///  matches its reference sequence, start, end, reference bases, and
      ///  alternative bases. If no such variant exists, a new one will be created.
      ///
      ///  When variants are merged, the call information from the new variant
      ///  is added to the existing variant, and Variant info fields are merged
      ///  as specified in
      ///  [infoMergeConfig][google.genomics.v1.ImportVariantsRequest.info_merge_config].
      ///  As a special case, for single-sample VCF files, QUAL and FILTER fields will
      ///  be moved to the call level; these are sometimes interpreted in a
      ///  call-specific context.
      ///  Imported VCF headers are appended to the metadata already in a variant set.
      /// </summary>
      public virtual global::Google.LongRunning.Operation ImportVariants(global::Google.Genomics.V1.ImportVariantsRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportVariants, null, options, request);
      }
      /// <summary>
      ///  Creates variant data by asynchronously importing the provided information.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  The variants for import will be merged with any existing variant that
      ///  matches its reference sequence, start, end, reference bases, and
      ///  alternative bases. If no such variant exists, a new one will be created.
      ///
      ///  When variants are merged, the call information from the new variant
      ///  is added to the existing variant, and Variant info fields are merged
      ///  as specified in
      ///  [infoMergeConfig][google.genomics.v1.ImportVariantsRequest.info_merge_config].
      ///  As a special case, for single-sample VCF files, QUAL and FILTER fields will
      ///  be moved to the call level; these are sometimes interpreted in a
      ///  call-specific context.
      ///  Imported VCF headers are appended to the metadata already in a variant set.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> ImportVariantsAsync(global::Google.Genomics.V1.ImportVariantsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ImportVariantsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates variant data by asynchronously importing the provided information.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  The variants for import will be merged with any existing variant that
      ///  matches its reference sequence, start, end, reference bases, and
      ///  alternative bases. If no such variant exists, a new one will be created.
      ///
      ///  When variants are merged, the call information from the new variant
      ///  is added to the existing variant, and Variant info fields are merged
      ///  as specified in
      ///  [infoMergeConfig][google.genomics.v1.ImportVariantsRequest.info_merge_config].
      ///  As a special case, for single-sample VCF files, QUAL and FILTER fields will
      ///  be moved to the call level; these are sometimes interpreted in a
      ///  call-specific context.
      ///  Imported VCF headers are appended to the metadata already in a variant set.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> ImportVariantsAsync(global::Google.Genomics.V1.ImportVariantsRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportVariants, null, options, request);
      }
      /// <summary>
      ///  Creates a new variant set.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  The provided variant set must have a valid `datasetId` set - all other
      ///  fields are optional. Note that the `id` field will be ignored, as this is
      ///  assigned by the server.
      /// </summary>
      public virtual global::Google.Genomics.V1.VariantSet CreateVariantSet(global::Google.Genomics.V1.CreateVariantSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateVariantSet(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new variant set.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  The provided variant set must have a valid `datasetId` set - all other
      ///  fields are optional. Note that the `id` field will be ignored, as this is
      ///  assigned by the server.
      /// </summary>
      public virtual global::Google.Genomics.V1.VariantSet CreateVariantSet(global::Google.Genomics.V1.CreateVariantSetRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateVariantSet, null, options, request);
      }
      /// <summary>
      ///  Creates a new variant set.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  The provided variant set must have a valid `datasetId` set - all other
      ///  fields are optional. Note that the `id` field will be ignored, as this is
      ///  assigned by the server.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.VariantSet> CreateVariantSetAsync(global::Google.Genomics.V1.CreateVariantSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateVariantSetAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new variant set.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  The provided variant set must have a valid `datasetId` set - all other
      ///  fields are optional. Note that the `id` field will be ignored, as this is
      ///  assigned by the server.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.VariantSet> CreateVariantSetAsync(global::Google.Genomics.V1.CreateVariantSetRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateVariantSet, null, options, request);
      }
      /// <summary>
      ///  Exports variant set data to an external destination.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.LongRunning.Operation ExportVariantSet(global::Google.Genomics.V1.ExportVariantSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ExportVariantSet(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Exports variant set data to an external destination.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.LongRunning.Operation ExportVariantSet(global::Google.Genomics.V1.ExportVariantSetRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportVariantSet, null, options, request);
      }
      /// <summary>
      ///  Exports variant set data to an external destination.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> ExportVariantSetAsync(global::Google.Genomics.V1.ExportVariantSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ExportVariantSetAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Exports variant set data to an external destination.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> ExportVariantSetAsync(global::Google.Genomics.V1.ExportVariantSetRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportVariantSet, null, options, request);
      }
      /// <summary>
      ///  Gets a variant set by ID.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Genomics.V1.VariantSet GetVariantSet(global::Google.Genomics.V1.GetVariantSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetVariantSet(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a variant set by ID.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Genomics.V1.VariantSet GetVariantSet(global::Google.Genomics.V1.GetVariantSetRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetVariantSet, null, options, request);
      }
      /// <summary>
      ///  Gets a variant set by ID.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.VariantSet> GetVariantSetAsync(global::Google.Genomics.V1.GetVariantSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetVariantSetAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a variant set by ID.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.VariantSet> GetVariantSetAsync(global::Google.Genomics.V1.GetVariantSetRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetVariantSet, null, options, request);
      }
      /// <summary>
      ///  Returns a list of all variant sets matching search criteria.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchVariantSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L49).
      /// </summary>
      public virtual global::Google.Genomics.V1.SearchVariantSetsResponse SearchVariantSets(global::Google.Genomics.V1.SearchVariantSetsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchVariantSets(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Returns a list of all variant sets matching search criteria.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchVariantSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L49).
      /// </summary>
      public virtual global::Google.Genomics.V1.SearchVariantSetsResponse SearchVariantSets(global::Google.Genomics.V1.SearchVariantSetsRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchVariantSets, null, options, request);
      }
      /// <summary>
      ///  Returns a list of all variant sets matching search criteria.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchVariantSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L49).
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.SearchVariantSetsResponse> SearchVariantSetsAsync(global::Google.Genomics.V1.SearchVariantSetsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchVariantSetsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Returns a list of all variant sets matching search criteria.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchVariantSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L49).
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.SearchVariantSetsResponse> SearchVariantSetsAsync(global::Google.Genomics.V1.SearchVariantSetsRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchVariantSets, null, options, request);
      }
      /// <summary>
      ///  Deletes a variant set including all variants, call sets, and calls within.
      ///  This is not reversible.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteVariantSet(global::Google.Genomics.V1.DeleteVariantSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteVariantSet(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a variant set including all variants, call sets, and calls within.
      ///  This is not reversible.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteVariantSet(global::Google.Genomics.V1.DeleteVariantSetRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteVariantSet, null, options, request);
      }
      /// <summary>
      ///  Deletes a variant set including all variants, call sets, and calls within.
      ///  This is not reversible.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteVariantSetAsync(global::Google.Genomics.V1.DeleteVariantSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteVariantSetAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a variant set including all variants, call sets, and calls within.
      ///  This is not reversible.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteVariantSetAsync(global::Google.Genomics.V1.DeleteVariantSetRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteVariantSet, null, options, request);
      }
      /// <summary>
      ///  Updates a variant set using patch semantics.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Genomics.V1.VariantSet UpdateVariantSet(global::Google.Genomics.V1.UpdateVariantSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateVariantSet(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Updates a variant set using patch semantics.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Genomics.V1.VariantSet UpdateVariantSet(global::Google.Genomics.V1.UpdateVariantSetRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateVariantSet, null, options, request);
      }
      /// <summary>
      ///  Updates a variant set using patch semantics.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.VariantSet> UpdateVariantSetAsync(global::Google.Genomics.V1.UpdateVariantSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateVariantSetAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Updates a variant set using patch semantics.
      ///
      ///  For the definitions of variant sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.VariantSet> UpdateVariantSetAsync(global::Google.Genomics.V1.UpdateVariantSetRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateVariantSet, null, options, request);
      }
      /// <summary>
      ///  Gets a list of variants matching the criteria.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchVariants](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L126).
      /// </summary>
      public virtual global::Google.Genomics.V1.SearchVariantsResponse SearchVariants(global::Google.Genomics.V1.SearchVariantsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchVariants(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a list of variants matching the criteria.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchVariants](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L126).
      /// </summary>
      public virtual global::Google.Genomics.V1.SearchVariantsResponse SearchVariants(global::Google.Genomics.V1.SearchVariantsRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchVariants, null, options, request);
      }
      /// <summary>
      ///  Gets a list of variants matching the criteria.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchVariants](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L126).
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.SearchVariantsResponse> SearchVariantsAsync(global::Google.Genomics.V1.SearchVariantsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchVariantsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a list of variants matching the criteria.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchVariants](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L126).
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.SearchVariantsResponse> SearchVariantsAsync(global::Google.Genomics.V1.SearchVariantsRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchVariants, null, options, request);
      }
      /// <summary>
      ///  Creates a new variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Genomics.V1.Variant CreateVariant(global::Google.Genomics.V1.CreateVariantRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateVariant(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Genomics.V1.Variant CreateVariant(global::Google.Genomics.V1.CreateVariantRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateVariant, null, options, request);
      }
      /// <summary>
      ///  Creates a new variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.Variant> CreateVariantAsync(global::Google.Genomics.V1.CreateVariantRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateVariantAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.Variant> CreateVariantAsync(global::Google.Genomics.V1.CreateVariantRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateVariant, null, options, request);
      }
      /// <summary>
      ///  Updates a variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  This method supports patch semantics. Returns the modified variant without
      ///  its calls.
      /// </summary>
      public virtual global::Google.Genomics.V1.Variant UpdateVariant(global::Google.Genomics.V1.UpdateVariantRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateVariant(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Updates a variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  This method supports patch semantics. Returns the modified variant without
      ///  its calls.
      /// </summary>
      public virtual global::Google.Genomics.V1.Variant UpdateVariant(global::Google.Genomics.V1.UpdateVariantRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateVariant, null, options, request);
      }
      /// <summary>
      ///  Updates a variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  This method supports patch semantics. Returns the modified variant without
      ///  its calls.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.Variant> UpdateVariantAsync(global::Google.Genomics.V1.UpdateVariantRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateVariantAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Updates a variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  This method supports patch semantics. Returns the modified variant without
      ///  its calls.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.Variant> UpdateVariantAsync(global::Google.Genomics.V1.UpdateVariantRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateVariant, null, options, request);
      }
      /// <summary>
      ///  Deletes a variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteVariant(global::Google.Genomics.V1.DeleteVariantRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteVariant(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteVariant(global::Google.Genomics.V1.DeleteVariantRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteVariant, null, options, request);
      }
      /// <summary>
      ///  Deletes a variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteVariantAsync(global::Google.Genomics.V1.DeleteVariantRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteVariantAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a variant.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteVariantAsync(global::Google.Genomics.V1.DeleteVariantRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteVariant, null, options, request);
      }
      /// <summary>
      ///  Gets a variant by ID.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Genomics.V1.Variant GetVariant(global::Google.Genomics.V1.GetVariantRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetVariant(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a variant by ID.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Genomics.V1.Variant GetVariant(global::Google.Genomics.V1.GetVariantRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetVariant, null, options, request);
      }
      /// <summary>
      ///  Gets a variant by ID.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.Variant> GetVariantAsync(global::Google.Genomics.V1.GetVariantRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetVariantAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a variant by ID.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.Variant> GetVariantAsync(global::Google.Genomics.V1.GetVariantRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetVariant, null, options, request);
      }
      /// <summary>
      ///  Merges the given variants with existing variants.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Each variant will be
      ///  merged with an existing variant that matches its reference sequence,
      ///  start, end, reference bases, and alternative bases. If no such variant
      ///  exists, a new one will be created.
      ///
      ///  When variants are merged, the call information from the new variant
      ///  is added to the existing variant. Variant info fields are merged as
      ///  specified in the
      ///  [infoMergeConfig][google.genomics.v1.MergeVariantsRequest.info_merge_config]
      ///  field of the MergeVariantsRequest.
      ///
      ///  Please exercise caution when using this method!  It is easy to introduce
      ///  mistakes in existing variants and difficult to back out of them.  For
      ///  example,
      ///  suppose you were trying to merge a new variant with an existing one and
      ///  both
      ///  variants contain calls that belong to callsets with the same callset ID.
      ///
      ///      // Existing variant - irrelevant fields trimmed for clarity
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      0,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///      // New variant with conflicting call information
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      1,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///  The resulting merged variant would overwrite the existing calls with those
      ///  from the new variant:
      ///
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      1,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///  This may be the desired outcome, but it is up to the user to determine if
      ///  if that is indeed the case.
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty MergeVariants(global::Google.Genomics.V1.MergeVariantsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MergeVariants(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Merges the given variants with existing variants.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Each variant will be
      ///  merged with an existing variant that matches its reference sequence,
      ///  start, end, reference bases, and alternative bases. If no such variant
      ///  exists, a new one will be created.
      ///
      ///  When variants are merged, the call information from the new variant
      ///  is added to the existing variant. Variant info fields are merged as
      ///  specified in the
      ///  [infoMergeConfig][google.genomics.v1.MergeVariantsRequest.info_merge_config]
      ///  field of the MergeVariantsRequest.
      ///
      ///  Please exercise caution when using this method!  It is easy to introduce
      ///  mistakes in existing variants and difficult to back out of them.  For
      ///  example,
      ///  suppose you were trying to merge a new variant with an existing one and
      ///  both
      ///  variants contain calls that belong to callsets with the same callset ID.
      ///
      ///      // Existing variant - irrelevant fields trimmed for clarity
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      0,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///      // New variant with conflicting call information
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      1,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///  The resulting merged variant would overwrite the existing calls with those
      ///  from the new variant:
      ///
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      1,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///  This may be the desired outcome, but it is up to the user to determine if
      ///  if that is indeed the case.
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty MergeVariants(global::Google.Genomics.V1.MergeVariantsRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MergeVariants, null, options, request);
      }
      /// <summary>
      ///  Merges the given variants with existing variants.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Each variant will be
      ///  merged with an existing variant that matches its reference sequence,
      ///  start, end, reference bases, and alternative bases. If no such variant
      ///  exists, a new one will be created.
      ///
      ///  When variants are merged, the call information from the new variant
      ///  is added to the existing variant. Variant info fields are merged as
      ///  specified in the
      ///  [infoMergeConfig][google.genomics.v1.MergeVariantsRequest.info_merge_config]
      ///  field of the MergeVariantsRequest.
      ///
      ///  Please exercise caution when using this method!  It is easy to introduce
      ///  mistakes in existing variants and difficult to back out of them.  For
      ///  example,
      ///  suppose you were trying to merge a new variant with an existing one and
      ///  both
      ///  variants contain calls that belong to callsets with the same callset ID.
      ///
      ///      // Existing variant - irrelevant fields trimmed for clarity
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      0,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///      // New variant with conflicting call information
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      1,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///  The resulting merged variant would overwrite the existing calls with those
      ///  from the new variant:
      ///
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      1,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///  This may be the desired outcome, but it is up to the user to determine if
      ///  if that is indeed the case.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> MergeVariantsAsync(global::Google.Genomics.V1.MergeVariantsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MergeVariantsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Merges the given variants with existing variants.
      ///
      ///  For the definitions of variants and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Each variant will be
      ///  merged with an existing variant that matches its reference sequence,
      ///  start, end, reference bases, and alternative bases. If no such variant
      ///  exists, a new one will be created.
      ///
      ///  When variants are merged, the call information from the new variant
      ///  is added to the existing variant. Variant info fields are merged as
      ///  specified in the
      ///  [infoMergeConfig][google.genomics.v1.MergeVariantsRequest.info_merge_config]
      ///  field of the MergeVariantsRequest.
      ///
      ///  Please exercise caution when using this method!  It is easy to introduce
      ///  mistakes in existing variants and difficult to back out of them.  For
      ///  example,
      ///  suppose you were trying to merge a new variant with an existing one and
      ///  both
      ///  variants contain calls that belong to callsets with the same callset ID.
      ///
      ///      // Existing variant - irrelevant fields trimmed for clarity
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      0,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///      // New variant with conflicting call information
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      1,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///  The resulting merged variant would overwrite the existing calls with those
      ///  from the new variant:
      ///
      ///      {
      ///          "variantSetId": "10473108253681171589",
      ///          "referenceName": "1",
      ///          "start": "10582",
      ///          "referenceBases": "G",
      ///          "alternateBases": [
      ///              "A"
      ///          ],
      ///          "calls": [
      ///              {
      ///                  "callSetId": "10473108253681171589-0",
      ///                  "callSetName": "CALLSET0",
      ///                  "genotype": [
      ///                      1,
      ///                      1
      ///                  ],
      ///              }
      ///          ]
      ///      }
      ///
      ///  This may be the desired outcome, but it is up to the user to determine if
      ///  if that is indeed the case.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> MergeVariantsAsync(global::Google.Genomics.V1.MergeVariantsRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MergeVariants, null, options, request);
      }
      /// <summary>
      ///  Gets a list of call sets matching the criteria.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchCallSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L178).
      /// </summary>
      public virtual global::Google.Genomics.V1.SearchCallSetsResponse SearchCallSets(global::Google.Genomics.V1.SearchCallSetsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchCallSets(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a list of call sets matching the criteria.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchCallSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L178).
      /// </summary>
      public virtual global::Google.Genomics.V1.SearchCallSetsResponse SearchCallSets(global::Google.Genomics.V1.SearchCallSetsRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchCallSets, null, options, request);
      }
      /// <summary>
      ///  Gets a list of call sets matching the criteria.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchCallSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L178).
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.SearchCallSetsResponse> SearchCallSetsAsync(global::Google.Genomics.V1.SearchCallSetsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchCallSetsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a list of call sets matching the criteria.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  Implements
      ///  [GlobalAllianceApi.searchCallSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L178).
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.SearchCallSetsResponse> SearchCallSetsAsync(global::Google.Genomics.V1.SearchCallSetsRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchCallSets, null, options, request);
      }
      /// <summary>
      ///  Creates a new call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Genomics.V1.CallSet CreateCallSet(global::Google.Genomics.V1.CreateCallSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateCallSet(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Genomics.V1.CallSet CreateCallSet(global::Google.Genomics.V1.CreateCallSetRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCallSet, null, options, request);
      }
      /// <summary>
      ///  Creates a new call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.CallSet> CreateCallSetAsync(global::Google.Genomics.V1.CreateCallSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateCallSetAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.CallSet> CreateCallSetAsync(global::Google.Genomics.V1.CreateCallSetRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCallSet, null, options, request);
      }
      /// <summary>
      ///  Updates a call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  This method supports patch semantics.
      /// </summary>
      public virtual global::Google.Genomics.V1.CallSet UpdateCallSet(global::Google.Genomics.V1.UpdateCallSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateCallSet(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Updates a call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  This method supports patch semantics.
      /// </summary>
      public virtual global::Google.Genomics.V1.CallSet UpdateCallSet(global::Google.Genomics.V1.UpdateCallSetRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCallSet, null, options, request);
      }
      /// <summary>
      ///  Updates a call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  This method supports patch semantics.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.CallSet> UpdateCallSetAsync(global::Google.Genomics.V1.UpdateCallSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateCallSetAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Updates a call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      ///
      ///  This method supports patch semantics.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.CallSet> UpdateCallSetAsync(global::Google.Genomics.V1.UpdateCallSetRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCallSet, null, options, request);
      }
      /// <summary>
      ///  Deletes a call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCallSet(global::Google.Genomics.V1.DeleteCallSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteCallSet(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCallSet(global::Google.Genomics.V1.DeleteCallSetRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCallSet, null, options, request);
      }
      /// <summary>
      ///  Deletes a call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCallSetAsync(global::Google.Genomics.V1.DeleteCallSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteCallSetAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a call set.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCallSetAsync(global::Google.Genomics.V1.DeleteCallSetRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCallSet, null, options, request);
      }
      /// <summary>
      ///  Gets a call set by ID.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Genomics.V1.CallSet GetCallSet(global::Google.Genomics.V1.GetCallSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetCallSet(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a call set by ID.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual global::Google.Genomics.V1.CallSet GetCallSet(global::Google.Genomics.V1.GetCallSetRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCallSet, null, options, request);
      }
      /// <summary>
      ///  Gets a call set by ID.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.CallSet> GetCallSetAsync(global::Google.Genomics.V1.GetCallSetRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetCallSetAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a call set by ID.
      ///
      ///  For the definitions of call sets and other genomics resources, see
      ///  [Fundamentals of Google
      ///  Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Genomics.V1.CallSet> GetCallSetAsync(global::Google.Genomics.V1.GetCallSetRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCallSet, null, options, request);
      }
      protected override VariantServiceV1Client NewInstance(ClientBaseConfiguration configuration)
      {
        return new VariantServiceV1Client(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(VariantServiceV1Base serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ImportVariants, serviceImpl.ImportVariants)
          .AddMethod(__Method_CreateVariantSet, serviceImpl.CreateVariantSet)
          .AddMethod(__Method_ExportVariantSet, serviceImpl.ExportVariantSet)
          .AddMethod(__Method_GetVariantSet, serviceImpl.GetVariantSet)
          .AddMethod(__Method_SearchVariantSets, serviceImpl.SearchVariantSets)
          .AddMethod(__Method_DeleteVariantSet, serviceImpl.DeleteVariantSet)
          .AddMethod(__Method_UpdateVariantSet, serviceImpl.UpdateVariantSet)
          .AddMethod(__Method_SearchVariants, serviceImpl.SearchVariants)
          .AddMethod(__Method_CreateVariant, serviceImpl.CreateVariant)
          .AddMethod(__Method_UpdateVariant, serviceImpl.UpdateVariant)
          .AddMethod(__Method_DeleteVariant, serviceImpl.DeleteVariant)
          .AddMethod(__Method_GetVariant, serviceImpl.GetVariant)
          .AddMethod(__Method_MergeVariants, serviceImpl.MergeVariants)
          .AddMethod(__Method_SearchCallSets, serviceImpl.SearchCallSets)
          .AddMethod(__Method_CreateCallSet, serviceImpl.CreateCallSet)
          .AddMethod(__Method_UpdateCallSet, serviceImpl.UpdateCallSet)
          .AddMethod(__Method_DeleteCallSet, serviceImpl.DeleteCallSet)
          .AddMethod(__Method_GetCallSet, serviceImpl.GetCallSet).Build();
    }

  }
}
#endregion
