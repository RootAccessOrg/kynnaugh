// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/billing/v1/cloud_billing.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Billing.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/billing/v1/cloud_billing.proto</summary>
  public static partial class CloudBillingReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/billing/v1/cloud_billing.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CloudBillingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Citnb29nbGUvY2xvdWQvYmlsbGluZy92MS9jbG91ZF9iaWxsaW5nLnByb3Rv",
            "Ehdnb29nbGUuY2xvdWQuYmlsbGluZy52MRocZ29vZ2xlL2FwaS9hbm5vdGF0",
            "aW9ucy5wcm90byJCCg5CaWxsaW5nQWNjb3VudBIMCgRuYW1lGAEgASgJEgwK",
            "BG9wZW4YAiABKAgSFAoMZGlzcGxheV9uYW1lGAMgASgJIm0KElByb2plY3RC",
            "aWxsaW5nSW5mbxIMCgRuYW1lGAEgASgJEhIKCnByb2plY3RfaWQYAiABKAkS",
            "HAoUYmlsbGluZ19hY2NvdW50X25hbWUYAyABKAkSFwoPYmlsbGluZ19lbmFi",
            "bGVkGAQgASgIIigKGEdldEJpbGxpbmdBY2NvdW50UmVxdWVzdBIMCgRuYW1l",
            "GAEgASgJIkMKGkxpc3RCaWxsaW5nQWNjb3VudHNSZXF1ZXN0EhEKCXBhZ2Vf",
            "c2l6ZRgBIAEoBRISCgpwYWdlX3Rva2VuGAIgASgJInkKG0xpc3RCaWxsaW5n",
            "QWNjb3VudHNSZXNwb25zZRJBChBiaWxsaW5nX2FjY291bnRzGAEgAygLMicu",
            "Z29vZ2xlLmNsb3VkLmJpbGxpbmcudjEuQmlsbGluZ0FjY291bnQSFwoPbmV4",
            "dF9wYWdlX3Rva2VuGAIgASgJIlQKHUxpc3RQcm9qZWN0QmlsbGluZ0luZm9S",
            "ZXF1ZXN0EgwKBG5hbWUYASABKAkSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBh",
            "Z2VfdG9rZW4YAyABKAkihAEKHkxpc3RQcm9qZWN0QmlsbGluZ0luZm9SZXNw",
            "b25zZRJJChRwcm9qZWN0X2JpbGxpbmdfaW5mbxgBIAMoCzIrLmdvb2dsZS5j",
            "bG91ZC5iaWxsaW5nLnYxLlByb2plY3RCaWxsaW5nSW5mbxIXCg9uZXh0X3Bh",
            "Z2VfdG9rZW4YAiABKAkiLAocR2V0UHJvamVjdEJpbGxpbmdJbmZvUmVxdWVz",
            "dBIMCgRuYW1lGAEgASgJInoKH1VwZGF0ZVByb2plY3RCaWxsaW5nSW5mb1Jl",
            "cXVlc3QSDAoEbmFtZRgBIAEoCRJJChRwcm9qZWN0X2JpbGxpbmdfaW5mbxgC",
            "IAEoCzIrLmdvb2dsZS5jbG91ZC5iaWxsaW5nLnYxLlByb2plY3RCaWxsaW5n",
            "SW5mbzLvBgoMQ2xvdWRCaWxsaW5nEpUBChFHZXRCaWxsaW5nQWNjb3VudBIx",
            "Lmdvb2dsZS5jbG91ZC5iaWxsaW5nLnYxLkdldEJpbGxpbmdBY2NvdW50UmVx",
            "dWVzdBonLmdvb2dsZS5jbG91ZC5iaWxsaW5nLnYxLkJpbGxpbmdBY2NvdW50",
            "IiSC0+STAh4SHC92MS97bmFtZT1iaWxsaW5nQWNjb3VudHMvKn0SnQEKE0xp",
            "c3RCaWxsaW5nQWNjb3VudHMSMy5nb29nbGUuY2xvdWQuYmlsbGluZy52MS5M",
            "aXN0QmlsbGluZ0FjY291bnRzUmVxdWVzdBo0Lmdvb2dsZS5jbG91ZC5iaWxs",
            "aW5nLnYxLkxpc3RCaWxsaW5nQWNjb3VudHNSZXNwb25zZSIbgtPkkwIVEhMv",
            "djEvYmlsbGluZ0FjY291bnRzErgBChZMaXN0UHJvamVjdEJpbGxpbmdJbmZv",
            "EjYuZ29vZ2xlLmNsb3VkLmJpbGxpbmcudjEuTGlzdFByb2plY3RCaWxsaW5n",
            "SW5mb1JlcXVlc3QaNy5nb29nbGUuY2xvdWQuYmlsbGluZy52MS5MaXN0UHJv",
            "amVjdEJpbGxpbmdJbmZvUmVzcG9uc2UiLYLT5JMCJxIlL3YxL3tuYW1lPWJp",
            "bGxpbmdBY2NvdW50cy8qfS9wcm9qZWN0cxKmAQoVR2V0UHJvamVjdEJpbGxp",
            "bmdJbmZvEjUuZ29vZ2xlLmNsb3VkLmJpbGxpbmcudjEuR2V0UHJvamVjdEJp",
            "bGxpbmdJbmZvUmVxdWVzdBorLmdvb2dsZS5jbG91ZC5iaWxsaW5nLnYxLlBy",
            "b2plY3RCaWxsaW5nSW5mbyIpgtPkkwIjEiEvdjEve25hbWU9cHJvamVjdHMv",
            "Kn0vYmlsbGluZ0luZm8SwgEKGFVwZGF0ZVByb2plY3RCaWxsaW5nSW5mbxI4",
            "Lmdvb2dsZS5jbG91ZC5iaWxsaW5nLnYxLlVwZGF0ZVByb2plY3RCaWxsaW5n",
            "SW5mb1JlcXVlc3QaKy5nb29nbGUuY2xvdWQuYmlsbGluZy52MS5Qcm9qZWN0",
            "QmlsbGluZ0luZm8iP4LT5JMCORohL3YxL3tuYW1lPXByb2plY3RzLyp9L2Jp",
            "bGxpbmdJbmZvOhRwcm9qZWN0X2JpbGxpbmdfaW5mb0JyChtjb20uZ29vZ2xl",
            "LmNsb3VkLmJpbGxpbmcudjFCEUNsb3VkQmlsbGluZ1Byb3RvUAFaPmdvb2ds",
            "ZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvY2xvdWQvYmlsbGlu",
            "Zy92MTtiaWxsaW5nYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Billing.V1.BillingAccount), global::Google.Cloud.Billing.V1.BillingAccount.Parser, new[]{ "Name", "Open", "DisplayName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Billing.V1.ProjectBillingInfo), global::Google.Cloud.Billing.V1.ProjectBillingInfo.Parser, new[]{ "Name", "ProjectId", "BillingAccountName", "BillingEnabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Billing.V1.GetBillingAccountRequest), global::Google.Cloud.Billing.V1.GetBillingAccountRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Billing.V1.ListBillingAccountsRequest), global::Google.Cloud.Billing.V1.ListBillingAccountsRequest.Parser, new[]{ "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Billing.V1.ListBillingAccountsResponse), global::Google.Cloud.Billing.V1.ListBillingAccountsResponse.Parser, new[]{ "BillingAccounts", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Billing.V1.ListProjectBillingInfoRequest), global::Google.Cloud.Billing.V1.ListProjectBillingInfoRequest.Parser, new[]{ "Name", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Billing.V1.ListProjectBillingInfoResponse), global::Google.Cloud.Billing.V1.ListProjectBillingInfoResponse.Parser, new[]{ "ProjectBillingInfo", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Billing.V1.GetProjectBillingInfoRequest), global::Google.Cloud.Billing.V1.GetProjectBillingInfoRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Billing.V1.UpdateProjectBillingInfoRequest), global::Google.Cloud.Billing.V1.UpdateProjectBillingInfoRequest.Parser, new[]{ "Name", "ProjectBillingInfo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  A billing account in [Google Cloud
  ///  Console](https://console.cloud.google.com/). You can assign a billing account
  ///  to one or more projects.
  /// </summary>
  public sealed partial class BillingAccount : pb::IMessage<BillingAccount> {
    private static readonly pb::MessageParser<BillingAccount> _parser = new pb::MessageParser<BillingAccount>(() => new BillingAccount());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BillingAccount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Billing.V1.CloudBillingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingAccount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingAccount(BillingAccount other) : this() {
      name_ = other.name_;
      open_ = other.open_;
      displayName_ = other.displayName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingAccount Clone() {
      return new BillingAccount(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  The resource name of the billing account. The resource name has the form
    ///  `billingAccounts/{billing_account_id}`. For example,
    ///  `billingAccounts/012345-567890-ABCDEF` would be the resource name for
    ///  billing account `012345-567890-ABCDEF`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "open" field.</summary>
    public const int OpenFieldNumber = 2;
    private bool open_;
    /// <summary>
    ///  True if the billing account is open, and will therefore be charged for any
    ///  usage on associated projects. False if the billing account is closed, and
    ///  therefore projects associated with it will be unable to use paid services.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Open {
      get { return open_; }
      set {
        open_ = value;
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 3;
    private string displayName_ = "";
    /// <summary>
    ///  The display name given to the billing account, such as `My Billing
    ///  Account`. This name is displayed in the Google Cloud Console.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BillingAccount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BillingAccount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Open != other.Open) return false;
      if (DisplayName != other.DisplayName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Open != false) hash ^= Open.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Open != false) {
        output.WriteRawTag(16);
        output.WriteBool(Open);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Open != false) {
        size += 1 + 1;
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BillingAccount other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Open != false) {
        Open = other.Open;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Open = input.ReadBool();
            break;
          }
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Encapsulation of billing information for a Cloud Console project. A project
  ///  has at most one associated billing account at a time (but a billing account
  ///  can be assigned to multiple projects).
  /// </summary>
  public sealed partial class ProjectBillingInfo : pb::IMessage<ProjectBillingInfo> {
    private static readonly pb::MessageParser<ProjectBillingInfo> _parser = new pb::MessageParser<ProjectBillingInfo>(() => new ProjectBillingInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProjectBillingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Billing.V1.CloudBillingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectBillingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectBillingInfo(ProjectBillingInfo other) : this() {
      name_ = other.name_;
      projectId_ = other.projectId_;
      billingAccountName_ = other.billingAccountName_;
      billingEnabled_ = other.billingEnabled_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectBillingInfo Clone() {
      return new ProjectBillingInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  The resource name for the `ProjectBillingInfo`; has the form
    ///  `projects/{project_id}/billingInfo`. For example, the resource name for the
    ///  billing information for project `tokyo-rain-123` would be
    ///  `projects/tokyo-rain-123/billingInfo`. This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 2;
    private string projectId_ = "";
    /// <summary>
    ///  The ID of the project that this `ProjectBillingInfo` represents, such as
    ///  `tokyo-rain-123`. This is a convenience field so that you don't need to
    ///  parse the `name` field to obtain a project ID. This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "billing_account_name" field.</summary>
    public const int BillingAccountNameFieldNumber = 3;
    private string billingAccountName_ = "";
    /// <summary>
    ///  The resource name of the billing account associated with the project, if
    ///  any. For example, `billingAccounts/012345-567890-ABCDEF`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BillingAccountName {
      get { return billingAccountName_; }
      set {
        billingAccountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "billing_enabled" field.</summary>
    public const int BillingEnabledFieldNumber = 4;
    private bool billingEnabled_;
    /// <summary>
    ///  True if the project is associated with an open billing account, to which
    ///  usage on the project is charged. False if the project is associated with a
    ///  closed billing account, or no billing account at all, and therefore cannot
    ///  use paid services. This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BillingEnabled {
      get { return billingEnabled_; }
      set {
        billingEnabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProjectBillingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProjectBillingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ProjectId != other.ProjectId) return false;
      if (BillingAccountName != other.BillingAccountName) return false;
      if (BillingEnabled != other.BillingEnabled) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (BillingAccountName.Length != 0) hash ^= BillingAccountName.GetHashCode();
      if (BillingEnabled != false) hash ^= BillingEnabled.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      if (BillingAccountName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BillingAccountName);
      }
      if (BillingEnabled != false) {
        output.WriteRawTag(32);
        output.WriteBool(BillingEnabled);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (BillingAccountName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BillingAccountName);
      }
      if (BillingEnabled != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProjectBillingInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.BillingAccountName.Length != 0) {
        BillingAccountName = other.BillingAccountName;
      }
      if (other.BillingEnabled != false) {
        BillingEnabled = other.BillingEnabled;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 26: {
            BillingAccountName = input.ReadString();
            break;
          }
          case 32: {
            BillingEnabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request message for `GetBillingAccount`.
  /// </summary>
  public sealed partial class GetBillingAccountRequest : pb::IMessage<GetBillingAccountRequest> {
    private static readonly pb::MessageParser<GetBillingAccountRequest> _parser = new pb::MessageParser<GetBillingAccountRequest>(() => new GetBillingAccountRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBillingAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Billing.V1.CloudBillingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBillingAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBillingAccountRequest(GetBillingAccountRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBillingAccountRequest Clone() {
      return new GetBillingAccountRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  The resource name of the billing account to retrieve. For example,
    ///  `billingAccounts/012345-567890-ABCDEF`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBillingAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBillingAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBillingAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request message for `ListBillingAccounts`.
  /// </summary>
  public sealed partial class ListBillingAccountsRequest : pb::IMessage<ListBillingAccountsRequest> {
    private static readonly pb::MessageParser<ListBillingAccountsRequest> _parser = new pb::MessageParser<ListBillingAccountsRequest>(() => new ListBillingAccountsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListBillingAccountsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Billing.V1.CloudBillingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBillingAccountsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBillingAccountsRequest(ListBillingAccountsRequest other) : this() {
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBillingAccountsRequest Clone() {
      return new ListBillingAccountsRequest(this);
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 1;
    private int pageSize_;
    /// <summary>
    ///  Requested page size. The maximum page size is 100; this is also the
    ///  default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 2;
    private string pageToken_ = "";
    /// <summary>
    ///  A token identifying a page of results to return. This should be a
    ///  `next_page_token` value returned from a previous `ListBillingAccounts`
    ///  call. If unspecified, the first page of results is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListBillingAccountsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListBillingAccountsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageSize != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListBillingAccountsRequest other) {
      if (other == null) {
        return;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PageSize = input.ReadInt32();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Response message for `ListBillingAccounts`.
  /// </summary>
  public sealed partial class ListBillingAccountsResponse : pb::IMessage<ListBillingAccountsResponse> {
    private static readonly pb::MessageParser<ListBillingAccountsResponse> _parser = new pb::MessageParser<ListBillingAccountsResponse>(() => new ListBillingAccountsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListBillingAccountsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Billing.V1.CloudBillingReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBillingAccountsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBillingAccountsResponse(ListBillingAccountsResponse other) : this() {
      billingAccounts_ = other.billingAccounts_.Clone();
      nextPageToken_ = other.nextPageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListBillingAccountsResponse Clone() {
      return new ListBillingAccountsResponse(this);
    }

    /// <summary>Field number for the "billing_accounts" field.</summary>
    public const int BillingAccountsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Billing.V1.BillingAccount> _repeated_billingAccounts_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Billing.V1.BillingAccount.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Billing.V1.BillingAccount> billingAccounts_ = new pbc::RepeatedField<global::Google.Cloud.Billing.V1.BillingAccount>();
    /// <summary>
    ///  A list of billing accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Billing.V1.BillingAccount> BillingAccounts {
      get { return billingAccounts_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    ///  A token to retrieve the next page of results. To retrieve the next page,
    ///  call `ListBillingAccounts` again with the `page_token` field set to this
    ///  value. This field is empty if there are no more results to retrieve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListBillingAccountsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListBillingAccountsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!billingAccounts_.Equals(other.billingAccounts_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= billingAccounts_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      billingAccounts_.WriteTo(output, _repeated_billingAccounts_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += billingAccounts_.CalculateSize(_repeated_billingAccounts_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListBillingAccountsResponse other) {
      if (other == null) {
        return;
      }
      billingAccounts_.Add(other.billingAccounts_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            billingAccounts_.AddEntriesFrom(input, _repeated_billingAccounts_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request message for `ListProjectBillingInfo`.
  /// </summary>
  public sealed partial class ListProjectBillingInfoRequest : pb::IMessage<ListProjectBillingInfoRequest> {
    private static readonly pb::MessageParser<ListProjectBillingInfoRequest> _parser = new pb::MessageParser<ListProjectBillingInfoRequest>(() => new ListProjectBillingInfoRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListProjectBillingInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Billing.V1.CloudBillingReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListProjectBillingInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListProjectBillingInfoRequest(ListProjectBillingInfoRequest other) : this() {
      name_ = other.name_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListProjectBillingInfoRequest Clone() {
      return new ListProjectBillingInfoRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  The resource name of the billing account associated with the projects that
    ///  you want to list. For example, `billingAccounts/012345-567890-ABCDEF`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    ///  Requested page size. The maximum page size is 100; this is also the
    ///  default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    ///  A token identifying a page of results to be returned. This should be a
    ///  `next_page_token` value returned from a previous `ListProjectBillingInfo`
    ///  call. If unspecified, the first page of results is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListProjectBillingInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListProjectBillingInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListProjectBillingInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request message for `ListProjectBillingInfoResponse`.
  /// </summary>
  public sealed partial class ListProjectBillingInfoResponse : pb::IMessage<ListProjectBillingInfoResponse> {
    private static readonly pb::MessageParser<ListProjectBillingInfoResponse> _parser = new pb::MessageParser<ListProjectBillingInfoResponse>(() => new ListProjectBillingInfoResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListProjectBillingInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Billing.V1.CloudBillingReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListProjectBillingInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListProjectBillingInfoResponse(ListProjectBillingInfoResponse other) : this() {
      projectBillingInfo_ = other.projectBillingInfo_.Clone();
      nextPageToken_ = other.nextPageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListProjectBillingInfoResponse Clone() {
      return new ListProjectBillingInfoResponse(this);
    }

    /// <summary>Field number for the "project_billing_info" field.</summary>
    public const int ProjectBillingInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Billing.V1.ProjectBillingInfo> _repeated_projectBillingInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Billing.V1.ProjectBillingInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Billing.V1.ProjectBillingInfo> projectBillingInfo_ = new pbc::RepeatedField<global::Google.Cloud.Billing.V1.ProjectBillingInfo>();
    /// <summary>
    ///  A list of `ProjectBillingInfo` resources representing the projects
    ///  associated with the billing account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Billing.V1.ProjectBillingInfo> ProjectBillingInfo {
      get { return projectBillingInfo_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    ///  A token to retrieve the next page of results. To retrieve the next page,
    ///  call `ListProjectBillingInfo` again with the `page_token` field set to this
    ///  value. This field is empty if there are no more results to retrieve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListProjectBillingInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListProjectBillingInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!projectBillingInfo_.Equals(other.projectBillingInfo_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= projectBillingInfo_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      projectBillingInfo_.WriteTo(output, _repeated_projectBillingInfo_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += projectBillingInfo_.CalculateSize(_repeated_projectBillingInfo_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListProjectBillingInfoResponse other) {
      if (other == null) {
        return;
      }
      projectBillingInfo_.Add(other.projectBillingInfo_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            projectBillingInfo_.AddEntriesFrom(input, _repeated_projectBillingInfo_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request message for `GetProjectBillingInfo`.
  /// </summary>
  public sealed partial class GetProjectBillingInfoRequest : pb::IMessage<GetProjectBillingInfoRequest> {
    private static readonly pb::MessageParser<GetProjectBillingInfoRequest> _parser = new pb::MessageParser<GetProjectBillingInfoRequest>(() => new GetProjectBillingInfoRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetProjectBillingInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Billing.V1.CloudBillingReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProjectBillingInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProjectBillingInfoRequest(GetProjectBillingInfoRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProjectBillingInfoRequest Clone() {
      return new GetProjectBillingInfoRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  The resource name of the project for which billing information is
    ///  retrieved. For example, `projects/tokyo-rain-123`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetProjectBillingInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetProjectBillingInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetProjectBillingInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request message for `UpdateProjectBillingInfo`.
  /// </summary>
  public sealed partial class UpdateProjectBillingInfoRequest : pb::IMessage<UpdateProjectBillingInfoRequest> {
    private static readonly pb::MessageParser<UpdateProjectBillingInfoRequest> _parser = new pb::MessageParser<UpdateProjectBillingInfoRequest>(() => new UpdateProjectBillingInfoRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateProjectBillingInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Billing.V1.CloudBillingReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateProjectBillingInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateProjectBillingInfoRequest(UpdateProjectBillingInfoRequest other) : this() {
      name_ = other.name_;
      ProjectBillingInfo = other.projectBillingInfo_ != null ? other.ProjectBillingInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateProjectBillingInfoRequest Clone() {
      return new UpdateProjectBillingInfoRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  The resource name of the project associated with the billing information
    ///  that you want to update. For example, `projects/tokyo-rain-123`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_billing_info" field.</summary>
    public const int ProjectBillingInfoFieldNumber = 2;
    private global::Google.Cloud.Billing.V1.ProjectBillingInfo projectBillingInfo_;
    /// <summary>
    ///  The new billing information for the project. Read-only fields are ignored;
    ///  thus, you may leave empty all fields except `billing_account_name`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Billing.V1.ProjectBillingInfo ProjectBillingInfo {
      get { return projectBillingInfo_; }
      set {
        projectBillingInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateProjectBillingInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateProjectBillingInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(ProjectBillingInfo, other.ProjectBillingInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (projectBillingInfo_ != null) hash ^= ProjectBillingInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (projectBillingInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProjectBillingInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (projectBillingInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProjectBillingInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateProjectBillingInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.projectBillingInfo_ != null) {
        if (projectBillingInfo_ == null) {
          projectBillingInfo_ = new global::Google.Cloud.Billing.V1.ProjectBillingInfo();
        }
        ProjectBillingInfo.MergeFrom(other.ProjectBillingInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (projectBillingInfo_ == null) {
              projectBillingInfo_ = new global::Google.Cloud.Billing.V1.ProjectBillingInfo();
            }
            input.ReadMessage(projectBillingInfo_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
