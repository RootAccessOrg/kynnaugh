// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/legacy/audit_data.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Appengine.Legacy {

  /// <summary>Holder for reflection information generated from google/appengine/legacy/audit_data.proto</summary>
  public static partial class AuditDataReflection {

    #region Descriptor
    /// <summary>File descriptor for google/appengine/legacy/audit_data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuditDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihnb29nbGUvYXBwZW5naW5lL2xlZ2FjeS9hdWRpdF9kYXRhLnByb3RvEhdn",
            "b29nbGUuYXBwZW5naW5lLmxlZ2FjeSKbAQoJQXVkaXREYXRhEhUKDWV2ZW50",
            "X21lc3NhZ2UYASABKAkSRQoKZXZlbnRfZGF0YRgCIAMoCzIxLmdvb2dsZS5h",
            "cHBlbmdpbmUubGVnYWN5LkF1ZGl0RGF0YS5FdmVudERhdGFFbnRyeRowCg5F",
            "dmVudERhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgB",
            "Qm4KG2NvbS5nb29nbGUuYXBwZW5naW5lLmxlZ2FjeUIOQXVkaXREYXRhUHJv",
            "dG9QAVo9Z29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9h",
            "cHBlbmdpbmUvbGVnYWN5O2xlZ2FjeWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Appengine.Legacy.AuditData), global::Google.Appengine.Legacy.AuditData.Parser, new[]{ "EventMessage", "EventData" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  Admin Console legacy audit log.
  /// </summary>
  public sealed partial class AuditData : pb::IMessage<AuditData> {
    private static readonly pb::MessageParser<AuditData> _parser = new pb::MessageParser<AuditData>(() => new AuditData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuditData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Appengine.Legacy.AuditDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuditData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuditData(AuditData other) : this() {
      eventMessage_ = other.eventMessage_;
      eventData_ = other.eventData_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuditData Clone() {
      return new AuditData(this);
    }

    /// <summary>Field number for the "event_message" field.</summary>
    public const int EventMessageFieldNumber = 1;
    private string eventMessage_ = "";
    /// <summary>
    ///  Text description of the admin event.
    ///  This is the "Event" column in Admin Console's Admin Logs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventMessage {
      get { return eventMessage_; }
      set {
        eventMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_data" field.</summary>
    public const int EventDataFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_eventData_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> eventData_ = new pbc::MapField<string, string>();
    /// <summary>
    ///  Arbitrary event data.
    ///  This is the "Result" column in Admin Console's Admin Logs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> EventData {
      get { return eventData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuditData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuditData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventMessage != other.EventMessage) return false;
      if (!EventData.Equals(other.EventData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventMessage.Length != 0) hash ^= EventMessage.GetHashCode();
      hash ^= EventData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventMessage);
      }
      eventData_.WriteTo(output, _map_eventData_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventMessage);
      }
      size += eventData_.CalculateSize(_map_eventData_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuditData other) {
      if (other == null) {
        return;
      }
      if (other.EventMessage.Length != 0) {
        EventMessage = other.EventMessage;
      }
      eventData_.Add(other.eventData_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            EventMessage = input.ReadString();
            break;
          }
          case 18: {
            eventData_.AddEntriesFrom(input, _map_eventData_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
