// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicemanagement/v1/servicemanager.proto
// Original file comments:
// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Google.Api.Servicemanagement.V1 {
  /// <summary>
  ///  [Google Service Management API](/service-management/overview)
  /// </summary>
  public static class ServiceManager
  {
    static readonly string __ServiceName = "google.api.servicemanagement.v1.ServiceManager";

    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.ListServicesRequest> __Marshaller_ListServicesRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.ListServicesRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.ListServicesResponse> __Marshaller_ListServicesResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.ListServicesResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.GetServiceRequest> __Marshaller_GetServiceRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.GetServiceRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.ManagedService> __Marshaller_ManagedService = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.ManagedService.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.CreateServiceRequest> __Marshaller_CreateServiceRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.CreateServiceRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.LongRunning.Operation> __Marshaller_Operation = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.LongRunning.Operation.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.DeleteServiceRequest> __Marshaller_DeleteServiceRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.DeleteServiceRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.UndeleteServiceRequest> __Marshaller_UndeleteServiceRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.UndeleteServiceRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.ListServiceConfigsRequest> __Marshaller_ListServiceConfigsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.ListServiceConfigsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.ListServiceConfigsResponse> __Marshaller_ListServiceConfigsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.ListServiceConfigsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.GetServiceConfigRequest> __Marshaller_GetServiceConfigRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.GetServiceConfigRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Service> __Marshaller_Service = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Service.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.CreateServiceConfigRequest> __Marshaller_CreateServiceConfigRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.CreateServiceConfigRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.SubmitConfigSourceRequest> __Marshaller_SubmitConfigSourceRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.SubmitConfigSourceRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.ListServiceRolloutsRequest> __Marshaller_ListServiceRolloutsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.ListServiceRolloutsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.ListServiceRolloutsResponse> __Marshaller_ListServiceRolloutsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.ListServiceRolloutsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.GetServiceRolloutRequest> __Marshaller_GetServiceRolloutRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.GetServiceRolloutRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.Rollout> __Marshaller_Rollout = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.Rollout.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.CreateServiceRolloutRequest> __Marshaller_CreateServiceRolloutRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.CreateServiceRolloutRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.GenerateConfigReportRequest> __Marshaller_GenerateConfigReportRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.GenerateConfigReportRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.GenerateConfigReportResponse> __Marshaller_GenerateConfigReportResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.GenerateConfigReportResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.EnableServiceRequest> __Marshaller_EnableServiceRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.EnableServiceRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Api.Servicemanagement.V1.DisableServiceRequest> __Marshaller_DisableServiceRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Api.Servicemanagement.V1.DisableServiceRequest.Parser.ParseFrom);

    static readonly Method<global::Google.Api.Servicemanagement.V1.ListServicesRequest, global::Google.Api.Servicemanagement.V1.ListServicesResponse> __Method_ListServices = new Method<global::Google.Api.Servicemanagement.V1.ListServicesRequest, global::Google.Api.Servicemanagement.V1.ListServicesResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListServices",
        __Marshaller_ListServicesRequest,
        __Marshaller_ListServicesResponse);

    static readonly Method<global::Google.Api.Servicemanagement.V1.GetServiceRequest, global::Google.Api.Servicemanagement.V1.ManagedService> __Method_GetService = new Method<global::Google.Api.Servicemanagement.V1.GetServiceRequest, global::Google.Api.Servicemanagement.V1.ManagedService>(
        MethodType.Unary,
        __ServiceName,
        "GetService",
        __Marshaller_GetServiceRequest,
        __Marshaller_ManagedService);

    static readonly Method<global::Google.Api.Servicemanagement.V1.CreateServiceRequest, global::Google.LongRunning.Operation> __Method_CreateService = new Method<global::Google.Api.Servicemanagement.V1.CreateServiceRequest, global::Google.LongRunning.Operation>(
        MethodType.Unary,
        __ServiceName,
        "CreateService",
        __Marshaller_CreateServiceRequest,
        __Marshaller_Operation);

    static readonly Method<global::Google.Api.Servicemanagement.V1.DeleteServiceRequest, global::Google.LongRunning.Operation> __Method_DeleteService = new Method<global::Google.Api.Servicemanagement.V1.DeleteServiceRequest, global::Google.LongRunning.Operation>(
        MethodType.Unary,
        __ServiceName,
        "DeleteService",
        __Marshaller_DeleteServiceRequest,
        __Marshaller_Operation);

    static readonly Method<global::Google.Api.Servicemanagement.V1.UndeleteServiceRequest, global::Google.LongRunning.Operation> __Method_UndeleteService = new Method<global::Google.Api.Servicemanagement.V1.UndeleteServiceRequest, global::Google.LongRunning.Operation>(
        MethodType.Unary,
        __ServiceName,
        "UndeleteService",
        __Marshaller_UndeleteServiceRequest,
        __Marshaller_Operation);

    static readonly Method<global::Google.Api.Servicemanagement.V1.ListServiceConfigsRequest, global::Google.Api.Servicemanagement.V1.ListServiceConfigsResponse> __Method_ListServiceConfigs = new Method<global::Google.Api.Servicemanagement.V1.ListServiceConfigsRequest, global::Google.Api.Servicemanagement.V1.ListServiceConfigsResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListServiceConfigs",
        __Marshaller_ListServiceConfigsRequest,
        __Marshaller_ListServiceConfigsResponse);

    static readonly Method<global::Google.Api.Servicemanagement.V1.GetServiceConfigRequest, global::Google.Api.Service> __Method_GetServiceConfig = new Method<global::Google.Api.Servicemanagement.V1.GetServiceConfigRequest, global::Google.Api.Service>(
        MethodType.Unary,
        __ServiceName,
        "GetServiceConfig",
        __Marshaller_GetServiceConfigRequest,
        __Marshaller_Service);

    static readonly Method<global::Google.Api.Servicemanagement.V1.CreateServiceConfigRequest, global::Google.Api.Service> __Method_CreateServiceConfig = new Method<global::Google.Api.Servicemanagement.V1.CreateServiceConfigRequest, global::Google.Api.Service>(
        MethodType.Unary,
        __ServiceName,
        "CreateServiceConfig",
        __Marshaller_CreateServiceConfigRequest,
        __Marshaller_Service);

    static readonly Method<global::Google.Api.Servicemanagement.V1.SubmitConfigSourceRequest, global::Google.LongRunning.Operation> __Method_SubmitConfigSource = new Method<global::Google.Api.Servicemanagement.V1.SubmitConfigSourceRequest, global::Google.LongRunning.Operation>(
        MethodType.Unary,
        __ServiceName,
        "SubmitConfigSource",
        __Marshaller_SubmitConfigSourceRequest,
        __Marshaller_Operation);

    static readonly Method<global::Google.Api.Servicemanagement.V1.ListServiceRolloutsRequest, global::Google.Api.Servicemanagement.V1.ListServiceRolloutsResponse> __Method_ListServiceRollouts = new Method<global::Google.Api.Servicemanagement.V1.ListServiceRolloutsRequest, global::Google.Api.Servicemanagement.V1.ListServiceRolloutsResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListServiceRollouts",
        __Marshaller_ListServiceRolloutsRequest,
        __Marshaller_ListServiceRolloutsResponse);

    static readonly Method<global::Google.Api.Servicemanagement.V1.GetServiceRolloutRequest, global::Google.Api.Servicemanagement.V1.Rollout> __Method_GetServiceRollout = new Method<global::Google.Api.Servicemanagement.V1.GetServiceRolloutRequest, global::Google.Api.Servicemanagement.V1.Rollout>(
        MethodType.Unary,
        __ServiceName,
        "GetServiceRollout",
        __Marshaller_GetServiceRolloutRequest,
        __Marshaller_Rollout);

    static readonly Method<global::Google.Api.Servicemanagement.V1.CreateServiceRolloutRequest, global::Google.LongRunning.Operation> __Method_CreateServiceRollout = new Method<global::Google.Api.Servicemanagement.V1.CreateServiceRolloutRequest, global::Google.LongRunning.Operation>(
        MethodType.Unary,
        __ServiceName,
        "CreateServiceRollout",
        __Marshaller_CreateServiceRolloutRequest,
        __Marshaller_Operation);

    static readonly Method<global::Google.Api.Servicemanagement.V1.GenerateConfigReportRequest, global::Google.Api.Servicemanagement.V1.GenerateConfigReportResponse> __Method_GenerateConfigReport = new Method<global::Google.Api.Servicemanagement.V1.GenerateConfigReportRequest, global::Google.Api.Servicemanagement.V1.GenerateConfigReportResponse>(
        MethodType.Unary,
        __ServiceName,
        "GenerateConfigReport",
        __Marshaller_GenerateConfigReportRequest,
        __Marshaller_GenerateConfigReportResponse);

    static readonly Method<global::Google.Api.Servicemanagement.V1.EnableServiceRequest, global::Google.LongRunning.Operation> __Method_EnableService = new Method<global::Google.Api.Servicemanagement.V1.EnableServiceRequest, global::Google.LongRunning.Operation>(
        MethodType.Unary,
        __ServiceName,
        "EnableService",
        __Marshaller_EnableServiceRequest,
        __Marshaller_Operation);

    static readonly Method<global::Google.Api.Servicemanagement.V1.DisableServiceRequest, global::Google.LongRunning.Operation> __Method_DisableService = new Method<global::Google.Api.Servicemanagement.V1.DisableServiceRequest, global::Google.LongRunning.Operation>(
        MethodType.Unary,
        __ServiceName,
        "DisableService",
        __Marshaller_DisableServiceRequest,
        __Marshaller_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Api.Servicemanagement.V1.ServicemanagerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ServiceManager</summary>
    public abstract class ServiceManagerBase
    {
      /// <summary>
      ///  Lists all managed services.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.Servicemanagement.V1.ListServicesResponse> ListServices(global::Google.Api.Servicemanagement.V1.ListServicesRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Gets a managed service.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.Servicemanagement.V1.ManagedService> GetService(global::Google.Api.Servicemanagement.V1.GetServiceRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Creates a new managed service.
      ///  Please note one producer project can own no more than 20 services.
      ///
      ///  Operation&lt;response: ManagedService>
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateService(global::Google.Api.Servicemanagement.V1.CreateServiceRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Deletes a managed service. This method will change the serivce in the
      ///  `Soft-Delete` state for 30 days. Within this period, service producers may
      ///  call [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService] to restore the service.
      ///  After 30 days, the service will be permanently deleted.
      ///
      ///  Operation&lt;response: google.protobuf.Empty>
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteService(global::Google.Api.Servicemanagement.V1.DeleteServiceRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Revives a previously deleted managed service. The method restores the
      ///  service using the configuration at the time the service was deleted.
      ///  The target service must exist and must have been deleted within the
      ///  last 30 days.
      ///
      ///  Operation&lt;response: UndeleteServiceResponse>
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UndeleteService(global::Google.Api.Servicemanagement.V1.UndeleteServiceRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Lists the history of the service configuration for a managed service,
      ///  from the newest to the oldest.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.Servicemanagement.V1.ListServiceConfigsResponse> ListServiceConfigs(global::Google.Api.Servicemanagement.V1.ListServiceConfigsRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Gets a service configuration (version) for a managed service.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.Service> GetServiceConfig(global::Google.Api.Servicemanagement.V1.GetServiceConfigRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Creates a new service configuration (version) for a managed service.
      ///  This method only stores the service configuration. To roll out the service
      ///  configuration to backend systems please call
      ///  [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.Service> CreateServiceConfig(global::Google.Api.Servicemanagement.V1.CreateServiceConfigRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Creates a new service configuration (version) for a managed service based
      ///  on
      ///  user-supplied configuration source files (for example: OpenAPI
      ///  Specification). This method stores the source configurations as well as the
      ///  generated service configuration. To rollout the service configuration to
      ///  other services,
      ///  please call [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      ///  Operation&lt;response: SubmitConfigSourceResponse>
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> SubmitConfigSource(global::Google.Api.Servicemanagement.V1.SubmitConfigSourceRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Lists the history of the service configuration rollouts for a managed
      ///  service, from the newest to the oldest.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.Servicemanagement.V1.ListServiceRolloutsResponse> ListServiceRollouts(global::Google.Api.Servicemanagement.V1.ListServiceRolloutsRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Gets a service configuration [rollout][google.api.servicemanagement.v1.Rollout].
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.Servicemanagement.V1.Rollout> GetServiceRollout(global::Google.Api.Servicemanagement.V1.GetServiceRolloutRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Creates a new service configuration rollout. Based on rollout, the
      ///  Google Service Management will roll out the service configurations to
      ///  different backend services. For example, the logging configuration will be
      ///  pushed to Google Cloud Logging.
      ///
      ///  Please note that any previous pending and running Rollouts and associated
      ///  Operations will be automatically cancelled so that the latest Rollout will
      ///  not be blocked by previous Rollouts.
      ///
      ///  Operation&lt;response: Rollout>
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateServiceRollout(global::Google.Api.Servicemanagement.V1.CreateServiceRolloutRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Generates and returns a report (errors, warnings and changes from
      ///  existing configurations) associated with
      ///  GenerateConfigReportRequest.new_value
      ///
      ///  If GenerateConfigReportRequest.old_value is specified,
      ///  GenerateConfigReportRequest will contain a single ChangeReport based on the
      ///  comparison between GenerateConfigReportRequest.new_value and
      ///  GenerateConfigReportRequest.old_value.
      ///  If GenerateConfigReportRequest.old_value is not specified, this method
      ///  will compare GenerateConfigReportRequest.new_value with the last pushed
      ///  service configuration.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.Servicemanagement.V1.GenerateConfigReportResponse> GenerateConfigReport(global::Google.Api.Servicemanagement.V1.GenerateConfigReportRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Enable a managed service for a project with default setting.
      ///
      ///  Operation&lt;response: EnableServiceResponse>
      ///
      ///  [google.rpc.Status][google.rpc.Status] errors may contain a
      ///  [google.rpc.PreconditionFailure][] error detail.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> EnableService(global::Google.Api.Servicemanagement.V1.EnableServiceRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Disable a managed service for a project.
      ///
      ///  Operation&lt;response: DisableServiceResponse>
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DisableService(global::Google.Api.Servicemanagement.V1.DisableServiceRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ServiceManager</summary>
    public class ServiceManagerClient : ClientBase<ServiceManagerClient>
    {
      /// <summary>Creates a new client for ServiceManager</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ServiceManagerClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ServiceManager that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ServiceManagerClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ServiceManagerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ServiceManagerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Lists all managed services.
      /// </summary>
      public virtual global::Google.Api.Servicemanagement.V1.ListServicesResponse ListServices(global::Google.Api.Servicemanagement.V1.ListServicesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListServices(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Lists all managed services.
      /// </summary>
      public virtual global::Google.Api.Servicemanagement.V1.ListServicesResponse ListServices(global::Google.Api.Servicemanagement.V1.ListServicesRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListServices, null, options, request);
      }
      /// <summary>
      ///  Lists all managed services.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Servicemanagement.V1.ListServicesResponse> ListServicesAsync(global::Google.Api.Servicemanagement.V1.ListServicesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListServicesAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Lists all managed services.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Servicemanagement.V1.ListServicesResponse> ListServicesAsync(global::Google.Api.Servicemanagement.V1.ListServicesRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListServices, null, options, request);
      }
      /// <summary>
      ///  Gets a managed service.
      /// </summary>
      public virtual global::Google.Api.Servicemanagement.V1.ManagedService GetService(global::Google.Api.Servicemanagement.V1.GetServiceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetService(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a managed service.
      /// </summary>
      public virtual global::Google.Api.Servicemanagement.V1.ManagedService GetService(global::Google.Api.Servicemanagement.V1.GetServiceRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetService, null, options, request);
      }
      /// <summary>
      ///  Gets a managed service.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Servicemanagement.V1.ManagedService> GetServiceAsync(global::Google.Api.Servicemanagement.V1.GetServiceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetServiceAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a managed service.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Servicemanagement.V1.ManagedService> GetServiceAsync(global::Google.Api.Servicemanagement.V1.GetServiceRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetService, null, options, request);
      }
      /// <summary>
      ///  Creates a new managed service.
      ///  Please note one producer project can own no more than 20 services.
      ///
      ///  Operation&lt;response: ManagedService>
      /// </summary>
      public virtual global::Google.LongRunning.Operation CreateService(global::Google.Api.Servicemanagement.V1.CreateServiceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateService(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new managed service.
      ///  Please note one producer project can own no more than 20 services.
      ///
      ///  Operation&lt;response: ManagedService>
      /// </summary>
      public virtual global::Google.LongRunning.Operation CreateService(global::Google.Api.Servicemanagement.V1.CreateServiceRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateService, null, options, request);
      }
      /// <summary>
      ///  Creates a new managed service.
      ///  Please note one producer project can own no more than 20 services.
      ///
      ///  Operation&lt;response: ManagedService>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> CreateServiceAsync(global::Google.Api.Servicemanagement.V1.CreateServiceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateServiceAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new managed service.
      ///  Please note one producer project can own no more than 20 services.
      ///
      ///  Operation&lt;response: ManagedService>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> CreateServiceAsync(global::Google.Api.Servicemanagement.V1.CreateServiceRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateService, null, options, request);
      }
      /// <summary>
      ///  Deletes a managed service. This method will change the serivce in the
      ///  `Soft-Delete` state for 30 days. Within this period, service producers may
      ///  call [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService] to restore the service.
      ///  After 30 days, the service will be permanently deleted.
      ///
      ///  Operation&lt;response: google.protobuf.Empty>
      /// </summary>
      public virtual global::Google.LongRunning.Operation DeleteService(global::Google.Api.Servicemanagement.V1.DeleteServiceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteService(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a managed service. This method will change the serivce in the
      ///  `Soft-Delete` state for 30 days. Within this period, service producers may
      ///  call [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService] to restore the service.
      ///  After 30 days, the service will be permanently deleted.
      ///
      ///  Operation&lt;response: google.protobuf.Empty>
      /// </summary>
      public virtual global::Google.LongRunning.Operation DeleteService(global::Google.Api.Servicemanagement.V1.DeleteServiceRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteService, null, options, request);
      }
      /// <summary>
      ///  Deletes a managed service. This method will change the serivce in the
      ///  `Soft-Delete` state for 30 days. Within this period, service producers may
      ///  call [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService] to restore the service.
      ///  After 30 days, the service will be permanently deleted.
      ///
      ///  Operation&lt;response: google.protobuf.Empty>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteServiceAsync(global::Google.Api.Servicemanagement.V1.DeleteServiceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteServiceAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes a managed service. This method will change the serivce in the
      ///  `Soft-Delete` state for 30 days. Within this period, service producers may
      ///  call [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService] to restore the service.
      ///  After 30 days, the service will be permanently deleted.
      ///
      ///  Operation&lt;response: google.protobuf.Empty>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteServiceAsync(global::Google.Api.Servicemanagement.V1.DeleteServiceRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteService, null, options, request);
      }
      /// <summary>
      ///  Revives a previously deleted managed service. The method restores the
      ///  service using the configuration at the time the service was deleted.
      ///  The target service must exist and must have been deleted within the
      ///  last 30 days.
      ///
      ///  Operation&lt;response: UndeleteServiceResponse>
      /// </summary>
      public virtual global::Google.LongRunning.Operation UndeleteService(global::Google.Api.Servicemanagement.V1.UndeleteServiceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UndeleteService(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Revives a previously deleted managed service. The method restores the
      ///  service using the configuration at the time the service was deleted.
      ///  The target service must exist and must have been deleted within the
      ///  last 30 days.
      ///
      ///  Operation&lt;response: UndeleteServiceResponse>
      /// </summary>
      public virtual global::Google.LongRunning.Operation UndeleteService(global::Google.Api.Servicemanagement.V1.UndeleteServiceRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UndeleteService, null, options, request);
      }
      /// <summary>
      ///  Revives a previously deleted managed service. The method restores the
      ///  service using the configuration at the time the service was deleted.
      ///  The target service must exist and must have been deleted within the
      ///  last 30 days.
      ///
      ///  Operation&lt;response: UndeleteServiceResponse>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> UndeleteServiceAsync(global::Google.Api.Servicemanagement.V1.UndeleteServiceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UndeleteServiceAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Revives a previously deleted managed service. The method restores the
      ///  service using the configuration at the time the service was deleted.
      ///  The target service must exist and must have been deleted within the
      ///  last 30 days.
      ///
      ///  Operation&lt;response: UndeleteServiceResponse>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> UndeleteServiceAsync(global::Google.Api.Servicemanagement.V1.UndeleteServiceRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UndeleteService, null, options, request);
      }
      /// <summary>
      ///  Lists the history of the service configuration for a managed service,
      ///  from the newest to the oldest.
      /// </summary>
      public virtual global::Google.Api.Servicemanagement.V1.ListServiceConfigsResponse ListServiceConfigs(global::Google.Api.Servicemanagement.V1.ListServiceConfigsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListServiceConfigs(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Lists the history of the service configuration for a managed service,
      ///  from the newest to the oldest.
      /// </summary>
      public virtual global::Google.Api.Servicemanagement.V1.ListServiceConfigsResponse ListServiceConfigs(global::Google.Api.Servicemanagement.V1.ListServiceConfigsRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListServiceConfigs, null, options, request);
      }
      /// <summary>
      ///  Lists the history of the service configuration for a managed service,
      ///  from the newest to the oldest.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Servicemanagement.V1.ListServiceConfigsResponse> ListServiceConfigsAsync(global::Google.Api.Servicemanagement.V1.ListServiceConfigsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListServiceConfigsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Lists the history of the service configuration for a managed service,
      ///  from the newest to the oldest.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Servicemanagement.V1.ListServiceConfigsResponse> ListServiceConfigsAsync(global::Google.Api.Servicemanagement.V1.ListServiceConfigsRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListServiceConfigs, null, options, request);
      }
      /// <summary>
      ///  Gets a service configuration (version) for a managed service.
      /// </summary>
      public virtual global::Google.Api.Service GetServiceConfig(global::Google.Api.Servicemanagement.V1.GetServiceConfigRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetServiceConfig(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a service configuration (version) for a managed service.
      /// </summary>
      public virtual global::Google.Api.Service GetServiceConfig(global::Google.Api.Servicemanagement.V1.GetServiceConfigRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetServiceConfig, null, options, request);
      }
      /// <summary>
      ///  Gets a service configuration (version) for a managed service.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Service> GetServiceConfigAsync(global::Google.Api.Servicemanagement.V1.GetServiceConfigRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetServiceConfigAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a service configuration (version) for a managed service.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Service> GetServiceConfigAsync(global::Google.Api.Servicemanagement.V1.GetServiceConfigRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetServiceConfig, null, options, request);
      }
      /// <summary>
      ///  Creates a new service configuration (version) for a managed service.
      ///  This method only stores the service configuration. To roll out the service
      ///  configuration to backend systems please call
      ///  [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      /// </summary>
      public virtual global::Google.Api.Service CreateServiceConfig(global::Google.Api.Servicemanagement.V1.CreateServiceConfigRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateServiceConfig(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new service configuration (version) for a managed service.
      ///  This method only stores the service configuration. To roll out the service
      ///  configuration to backend systems please call
      ///  [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      /// </summary>
      public virtual global::Google.Api.Service CreateServiceConfig(global::Google.Api.Servicemanagement.V1.CreateServiceConfigRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateServiceConfig, null, options, request);
      }
      /// <summary>
      ///  Creates a new service configuration (version) for a managed service.
      ///  This method only stores the service configuration. To roll out the service
      ///  configuration to backend systems please call
      ///  [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Service> CreateServiceConfigAsync(global::Google.Api.Servicemanagement.V1.CreateServiceConfigRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateServiceConfigAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new service configuration (version) for a managed service.
      ///  This method only stores the service configuration. To roll out the service
      ///  configuration to backend systems please call
      ///  [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Service> CreateServiceConfigAsync(global::Google.Api.Servicemanagement.V1.CreateServiceConfigRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateServiceConfig, null, options, request);
      }
      /// <summary>
      ///  Creates a new service configuration (version) for a managed service based
      ///  on
      ///  user-supplied configuration source files (for example: OpenAPI
      ///  Specification). This method stores the source configurations as well as the
      ///  generated service configuration. To rollout the service configuration to
      ///  other services,
      ///  please call [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      ///  Operation&lt;response: SubmitConfigSourceResponse>
      /// </summary>
      public virtual global::Google.LongRunning.Operation SubmitConfigSource(global::Google.Api.Servicemanagement.V1.SubmitConfigSourceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SubmitConfigSource(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new service configuration (version) for a managed service based
      ///  on
      ///  user-supplied configuration source files (for example: OpenAPI
      ///  Specification). This method stores the source configurations as well as the
      ///  generated service configuration. To rollout the service configuration to
      ///  other services,
      ///  please call [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      ///  Operation&lt;response: SubmitConfigSourceResponse>
      /// </summary>
      public virtual global::Google.LongRunning.Operation SubmitConfigSource(global::Google.Api.Servicemanagement.V1.SubmitConfigSourceRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SubmitConfigSource, null, options, request);
      }
      /// <summary>
      ///  Creates a new service configuration (version) for a managed service based
      ///  on
      ///  user-supplied configuration source files (for example: OpenAPI
      ///  Specification). This method stores the source configurations as well as the
      ///  generated service configuration. To rollout the service configuration to
      ///  other services,
      ///  please call [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      ///  Operation&lt;response: SubmitConfigSourceResponse>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> SubmitConfigSourceAsync(global::Google.Api.Servicemanagement.V1.SubmitConfigSourceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SubmitConfigSourceAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new service configuration (version) for a managed service based
      ///  on
      ///  user-supplied configuration source files (for example: OpenAPI
      ///  Specification). This method stores the source configurations as well as the
      ///  generated service configuration. To rollout the service configuration to
      ///  other services,
      ///  please call [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      ///  Operation&lt;response: SubmitConfigSourceResponse>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> SubmitConfigSourceAsync(global::Google.Api.Servicemanagement.V1.SubmitConfigSourceRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SubmitConfigSource, null, options, request);
      }
      /// <summary>
      ///  Lists the history of the service configuration rollouts for a managed
      ///  service, from the newest to the oldest.
      /// </summary>
      public virtual global::Google.Api.Servicemanagement.V1.ListServiceRolloutsResponse ListServiceRollouts(global::Google.Api.Servicemanagement.V1.ListServiceRolloutsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListServiceRollouts(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Lists the history of the service configuration rollouts for a managed
      ///  service, from the newest to the oldest.
      /// </summary>
      public virtual global::Google.Api.Servicemanagement.V1.ListServiceRolloutsResponse ListServiceRollouts(global::Google.Api.Servicemanagement.V1.ListServiceRolloutsRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListServiceRollouts, null, options, request);
      }
      /// <summary>
      ///  Lists the history of the service configuration rollouts for a managed
      ///  service, from the newest to the oldest.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Servicemanagement.V1.ListServiceRolloutsResponse> ListServiceRolloutsAsync(global::Google.Api.Servicemanagement.V1.ListServiceRolloutsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListServiceRolloutsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Lists the history of the service configuration rollouts for a managed
      ///  service, from the newest to the oldest.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Servicemanagement.V1.ListServiceRolloutsResponse> ListServiceRolloutsAsync(global::Google.Api.Servicemanagement.V1.ListServiceRolloutsRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListServiceRollouts, null, options, request);
      }
      /// <summary>
      ///  Gets a service configuration [rollout][google.api.servicemanagement.v1.Rollout].
      /// </summary>
      public virtual global::Google.Api.Servicemanagement.V1.Rollout GetServiceRollout(global::Google.Api.Servicemanagement.V1.GetServiceRolloutRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetServiceRollout(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a service configuration [rollout][google.api.servicemanagement.v1.Rollout].
      /// </summary>
      public virtual global::Google.Api.Servicemanagement.V1.Rollout GetServiceRollout(global::Google.Api.Servicemanagement.V1.GetServiceRolloutRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetServiceRollout, null, options, request);
      }
      /// <summary>
      ///  Gets a service configuration [rollout][google.api.servicemanagement.v1.Rollout].
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Servicemanagement.V1.Rollout> GetServiceRolloutAsync(global::Google.Api.Servicemanagement.V1.GetServiceRolloutRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetServiceRolloutAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a service configuration [rollout][google.api.servicemanagement.v1.Rollout].
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Servicemanagement.V1.Rollout> GetServiceRolloutAsync(global::Google.Api.Servicemanagement.V1.GetServiceRolloutRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetServiceRollout, null, options, request);
      }
      /// <summary>
      ///  Creates a new service configuration rollout. Based on rollout, the
      ///  Google Service Management will roll out the service configurations to
      ///  different backend services. For example, the logging configuration will be
      ///  pushed to Google Cloud Logging.
      ///
      ///  Please note that any previous pending and running Rollouts and associated
      ///  Operations will be automatically cancelled so that the latest Rollout will
      ///  not be blocked by previous Rollouts.
      ///
      ///  Operation&lt;response: Rollout>
      /// </summary>
      public virtual global::Google.LongRunning.Operation CreateServiceRollout(global::Google.Api.Servicemanagement.V1.CreateServiceRolloutRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateServiceRollout(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new service configuration rollout. Based on rollout, the
      ///  Google Service Management will roll out the service configurations to
      ///  different backend services. For example, the logging configuration will be
      ///  pushed to Google Cloud Logging.
      ///
      ///  Please note that any previous pending and running Rollouts and associated
      ///  Operations will be automatically cancelled so that the latest Rollout will
      ///  not be blocked by previous Rollouts.
      ///
      ///  Operation&lt;response: Rollout>
      /// </summary>
      public virtual global::Google.LongRunning.Operation CreateServiceRollout(global::Google.Api.Servicemanagement.V1.CreateServiceRolloutRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateServiceRollout, null, options, request);
      }
      /// <summary>
      ///  Creates a new service configuration rollout. Based on rollout, the
      ///  Google Service Management will roll out the service configurations to
      ///  different backend services. For example, the logging configuration will be
      ///  pushed to Google Cloud Logging.
      ///
      ///  Please note that any previous pending and running Rollouts and associated
      ///  Operations will be automatically cancelled so that the latest Rollout will
      ///  not be blocked by previous Rollouts.
      ///
      ///  Operation&lt;response: Rollout>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> CreateServiceRolloutAsync(global::Google.Api.Servicemanagement.V1.CreateServiceRolloutRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateServiceRolloutAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a new service configuration rollout. Based on rollout, the
      ///  Google Service Management will roll out the service configurations to
      ///  different backend services. For example, the logging configuration will be
      ///  pushed to Google Cloud Logging.
      ///
      ///  Please note that any previous pending and running Rollouts and associated
      ///  Operations will be automatically cancelled so that the latest Rollout will
      ///  not be blocked by previous Rollouts.
      ///
      ///  Operation&lt;response: Rollout>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> CreateServiceRolloutAsync(global::Google.Api.Servicemanagement.V1.CreateServiceRolloutRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateServiceRollout, null, options, request);
      }
      /// <summary>
      ///  Generates and returns a report (errors, warnings and changes from
      ///  existing configurations) associated with
      ///  GenerateConfigReportRequest.new_value
      ///
      ///  If GenerateConfigReportRequest.old_value is specified,
      ///  GenerateConfigReportRequest will contain a single ChangeReport based on the
      ///  comparison between GenerateConfigReportRequest.new_value and
      ///  GenerateConfigReportRequest.old_value.
      ///  If GenerateConfigReportRequest.old_value is not specified, this method
      ///  will compare GenerateConfigReportRequest.new_value with the last pushed
      ///  service configuration.
      /// </summary>
      public virtual global::Google.Api.Servicemanagement.V1.GenerateConfigReportResponse GenerateConfigReport(global::Google.Api.Servicemanagement.V1.GenerateConfigReportRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GenerateConfigReport(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Generates and returns a report (errors, warnings and changes from
      ///  existing configurations) associated with
      ///  GenerateConfigReportRequest.new_value
      ///
      ///  If GenerateConfigReportRequest.old_value is specified,
      ///  GenerateConfigReportRequest will contain a single ChangeReport based on the
      ///  comparison between GenerateConfigReportRequest.new_value and
      ///  GenerateConfigReportRequest.old_value.
      ///  If GenerateConfigReportRequest.old_value is not specified, this method
      ///  will compare GenerateConfigReportRequest.new_value with the last pushed
      ///  service configuration.
      /// </summary>
      public virtual global::Google.Api.Servicemanagement.V1.GenerateConfigReportResponse GenerateConfigReport(global::Google.Api.Servicemanagement.V1.GenerateConfigReportRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateConfigReport, null, options, request);
      }
      /// <summary>
      ///  Generates and returns a report (errors, warnings and changes from
      ///  existing configurations) associated with
      ///  GenerateConfigReportRequest.new_value
      ///
      ///  If GenerateConfigReportRequest.old_value is specified,
      ///  GenerateConfigReportRequest will contain a single ChangeReport based on the
      ///  comparison between GenerateConfigReportRequest.new_value and
      ///  GenerateConfigReportRequest.old_value.
      ///  If GenerateConfigReportRequest.old_value is not specified, this method
      ///  will compare GenerateConfigReportRequest.new_value with the last pushed
      ///  service configuration.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Servicemanagement.V1.GenerateConfigReportResponse> GenerateConfigReportAsync(global::Google.Api.Servicemanagement.V1.GenerateConfigReportRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GenerateConfigReportAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Generates and returns a report (errors, warnings and changes from
      ///  existing configurations) associated with
      ///  GenerateConfigReportRequest.new_value
      ///
      ///  If GenerateConfigReportRequest.old_value is specified,
      ///  GenerateConfigReportRequest will contain a single ChangeReport based on the
      ///  comparison between GenerateConfigReportRequest.new_value and
      ///  GenerateConfigReportRequest.old_value.
      ///  If GenerateConfigReportRequest.old_value is not specified, this method
      ///  will compare GenerateConfigReportRequest.new_value with the last pushed
      ///  service configuration.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Api.Servicemanagement.V1.GenerateConfigReportResponse> GenerateConfigReportAsync(global::Google.Api.Servicemanagement.V1.GenerateConfigReportRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateConfigReport, null, options, request);
      }
      /// <summary>
      ///  Enable a managed service for a project with default setting.
      ///
      ///  Operation&lt;response: EnableServiceResponse>
      ///
      ///  [google.rpc.Status][google.rpc.Status] errors may contain a
      ///  [google.rpc.PreconditionFailure][] error detail.
      /// </summary>
      public virtual global::Google.LongRunning.Operation EnableService(global::Google.Api.Servicemanagement.V1.EnableServiceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EnableService(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Enable a managed service for a project with default setting.
      ///
      ///  Operation&lt;response: EnableServiceResponse>
      ///
      ///  [google.rpc.Status][google.rpc.Status] errors may contain a
      ///  [google.rpc.PreconditionFailure][] error detail.
      /// </summary>
      public virtual global::Google.LongRunning.Operation EnableService(global::Google.Api.Servicemanagement.V1.EnableServiceRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EnableService, null, options, request);
      }
      /// <summary>
      ///  Enable a managed service for a project with default setting.
      ///
      ///  Operation&lt;response: EnableServiceResponse>
      ///
      ///  [google.rpc.Status][google.rpc.Status] errors may contain a
      ///  [google.rpc.PreconditionFailure][] error detail.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> EnableServiceAsync(global::Google.Api.Servicemanagement.V1.EnableServiceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EnableServiceAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Enable a managed service for a project with default setting.
      ///
      ///  Operation&lt;response: EnableServiceResponse>
      ///
      ///  [google.rpc.Status][google.rpc.Status] errors may contain a
      ///  [google.rpc.PreconditionFailure][] error detail.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> EnableServiceAsync(global::Google.Api.Servicemanagement.V1.EnableServiceRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EnableService, null, options, request);
      }
      /// <summary>
      ///  Disable a managed service for a project.
      ///
      ///  Operation&lt;response: DisableServiceResponse>
      /// </summary>
      public virtual global::Google.LongRunning.Operation DisableService(global::Google.Api.Servicemanagement.V1.DisableServiceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DisableService(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Disable a managed service for a project.
      ///
      ///  Operation&lt;response: DisableServiceResponse>
      /// </summary>
      public virtual global::Google.LongRunning.Operation DisableService(global::Google.Api.Servicemanagement.V1.DisableServiceRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableService, null, options, request);
      }
      /// <summary>
      ///  Disable a managed service for a project.
      ///
      ///  Operation&lt;response: DisableServiceResponse>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> DisableServiceAsync(global::Google.Api.Servicemanagement.V1.DisableServiceRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DisableServiceAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Disable a managed service for a project.
      ///
      ///  Operation&lt;response: DisableServiceResponse>
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.LongRunning.Operation> DisableServiceAsync(global::Google.Api.Servicemanagement.V1.DisableServiceRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableService, null, options, request);
      }
      protected override ServiceManagerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ServiceManagerClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(ServiceManagerBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListServices, serviceImpl.ListServices)
          .AddMethod(__Method_GetService, serviceImpl.GetService)
          .AddMethod(__Method_CreateService, serviceImpl.CreateService)
          .AddMethod(__Method_DeleteService, serviceImpl.DeleteService)
          .AddMethod(__Method_UndeleteService, serviceImpl.UndeleteService)
          .AddMethod(__Method_ListServiceConfigs, serviceImpl.ListServiceConfigs)
          .AddMethod(__Method_GetServiceConfig, serviceImpl.GetServiceConfig)
          .AddMethod(__Method_CreateServiceConfig, serviceImpl.CreateServiceConfig)
          .AddMethod(__Method_SubmitConfigSource, serviceImpl.SubmitConfigSource)
          .AddMethod(__Method_ListServiceRollouts, serviceImpl.ListServiceRollouts)
          .AddMethod(__Method_GetServiceRollout, serviceImpl.GetServiceRollout)
          .AddMethod(__Method_CreateServiceRollout, serviceImpl.CreateServiceRollout)
          .AddMethod(__Method_GenerateConfigReport, serviceImpl.GenerateConfigReport)
          .AddMethod(__Method_EnableService, serviceImpl.EnableService)
          .AddMethod(__Method_DisableService, serviceImpl.DisableService).Build();
    }

  }
}
#endregion
