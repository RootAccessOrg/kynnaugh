// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/appengine/v1/application.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Appengine.V1 {

  /// <summary>Holder for reflection information generated from google/appengine/v1/application.proto</summary>
  public static partial class ApplicationReflection {

    #region Descriptor
    /// <summary>File descriptor for google/appengine/v1/application.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApplicationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVnb29nbGUvYXBwZW5naW5lL3YxL2FwcGxpY2F0aW9uLnByb3RvEhNnb29n",
            "bGUuYXBwZW5naW5lLnYxGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3Rv",
            "Gh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8ilAIKC0FwcGxpY2F0",
            "aW9uEgwKBG5hbWUYASABKAkSCgoCaWQYAiABKAkSPAoOZGlzcGF0Y2hfcnVs",
            "ZXMYAyADKAsyJC5nb29nbGUuYXBwZW5naW5lLnYxLlVybERpc3BhdGNoUnVs",
            "ZRITCgthdXRoX2RvbWFpbhgGIAEoCRITCgtsb2NhdGlvbl9pZBgHIAEoCRIT",
            "Cgtjb2RlX2J1Y2tldBgIIAEoCRI8ChlkZWZhdWx0X2Nvb2tpZV9leHBpcmF0",
            "aW9uGAkgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEhgKEGRlZmF1",
            "bHRfaG9zdG5hbWUYCyABKAkSFgoOZGVmYXVsdF9idWNrZXQYDCABKAkiQAoP",
            "VXJsRGlzcGF0Y2hSdWxlEg4KBmRvbWFpbhgBIAEoCRIMCgRwYXRoGAIgASgJ",
            "Eg8KB3NlcnZpY2UYAyABKAlCawoXY29tLmdvb2dsZS5hcHBlbmdpbmUudjFC",
            "EEFwcGxpY2F0aW9uUHJvdG9QAVo8Z29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJv",
            "dG8vZ29vZ2xlYXBpcy9hcHBlbmdpbmUvdjE7YXBwZW5naW5lYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Appengine.V1.Application), global::Google.Appengine.V1.Application.Parser, new[]{ "Name", "Id", "DispatchRules", "AuthDomain", "LocationId", "CodeBucket", "DefaultCookieExpiration", "DefaultHostname", "DefaultBucket" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Appengine.V1.UrlDispatchRule), global::Google.Appengine.V1.UrlDispatchRule.Parser, new[]{ "Domain", "Path", "Service" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  An Application resource contains the top-level configuration of an App
  ///  Engine application.
  /// </summary>
  public sealed partial class Application : pb::IMessage<Application> {
    private static readonly pb::MessageParser<Application> _parser = new pb::MessageParser<Application>(() => new Application());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Application> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Appengine.V1.ApplicationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Application() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Application(Application other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      dispatchRules_ = other.dispatchRules_.Clone();
      authDomain_ = other.authDomain_;
      locationId_ = other.locationId_;
      codeBucket_ = other.codeBucket_;
      DefaultCookieExpiration = other.defaultCookieExpiration_ != null ? other.DefaultCookieExpiration.Clone() : null;
      defaultHostname_ = other.defaultHostname_;
      defaultBucket_ = other.defaultBucket_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Application Clone() {
      return new Application(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  Full path to the Application resource in the API.
    ///  Example: `apps/myapp`.
    ///
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    ///  Identifier of the Application resource. This identifier is equivalent
    ///  to the project ID of the Google Cloud Platform project where you want to
    ///  deploy your application.
    ///  Example: `myapp`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dispatch_rules" field.</summary>
    public const int DispatchRulesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Appengine.V1.UrlDispatchRule> _repeated_dispatchRules_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Appengine.V1.UrlDispatchRule.Parser);
    private readonly pbc::RepeatedField<global::Google.Appengine.V1.UrlDispatchRule> dispatchRules_ = new pbc::RepeatedField<global::Google.Appengine.V1.UrlDispatchRule>();
    /// <summary>
    ///  HTTP path dispatch rules for requests to the application that do not
    ///  explicitly target a service or version. Rules are order-dependent.
    ///
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Appengine.V1.UrlDispatchRule> DispatchRules {
      get { return dispatchRules_; }
    }

    /// <summary>Field number for the "auth_domain" field.</summary>
    public const int AuthDomainFieldNumber = 6;
    private string authDomain_ = "";
    /// <summary>
    ///  Google Apps authentication domain that controls which users can access
    ///  this application.
    ///
    ///  Defaults to open access for any Google Account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthDomain {
      get { return authDomain_; }
      set {
        authDomain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 7;
    private string locationId_ = "";
    /// <summary>
    ///  Location from which this application will be run. Application instances
    ///  will run out of data centers in the chosen location, which is also where
    ///  all of the application's end user content is stored.
    ///
    ///  Defaults to `us-central`.
    ///
    ///  Options are:
    ///
    ///  `us-central` - Central US
    ///
    ///  `europe-west` - Western Europe
    ///
    ///  `us-east1` - Eastern US
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code_bucket" field.</summary>
    public const int CodeBucketFieldNumber = 8;
    private string codeBucket_ = "";
    /// <summary>
    ///  Google Cloud Storage bucket that can be used for storing files
    ///  associated with this application. This bucket is associated with the
    ///  application and can be used by the gcloud deployment commands.
    ///
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CodeBucket {
      get { return codeBucket_; }
      set {
        codeBucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_cookie_expiration" field.</summary>
    public const int DefaultCookieExpirationFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Duration defaultCookieExpiration_;
    /// <summary>
    ///  Cookie expiration policy for this application.
    ///
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration DefaultCookieExpiration {
      get { return defaultCookieExpiration_; }
      set {
        defaultCookieExpiration_ = value;
      }
    }

    /// <summary>Field number for the "default_hostname" field.</summary>
    public const int DefaultHostnameFieldNumber = 11;
    private string defaultHostname_ = "";
    /// <summary>
    ///  Hostname used to reach this application, as resolved by App Engine.
    ///
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultHostname {
      get { return defaultHostname_; }
      set {
        defaultHostname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_bucket" field.</summary>
    public const int DefaultBucketFieldNumber = 12;
    private string defaultBucket_ = "";
    /// <summary>
    ///  Google Cloud Storage bucket that can be used by this application to store
    ///  content.
    ///
    ///  @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultBucket {
      get { return defaultBucket_; }
      set {
        defaultBucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Application);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Application other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if(!dispatchRules_.Equals(other.dispatchRules_)) return false;
      if (AuthDomain != other.AuthDomain) return false;
      if (LocationId != other.LocationId) return false;
      if (CodeBucket != other.CodeBucket) return false;
      if (!object.Equals(DefaultCookieExpiration, other.DefaultCookieExpiration)) return false;
      if (DefaultHostname != other.DefaultHostname) return false;
      if (DefaultBucket != other.DefaultBucket) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= dispatchRules_.GetHashCode();
      if (AuthDomain.Length != 0) hash ^= AuthDomain.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (CodeBucket.Length != 0) hash ^= CodeBucket.GetHashCode();
      if (defaultCookieExpiration_ != null) hash ^= DefaultCookieExpiration.GetHashCode();
      if (DefaultHostname.Length != 0) hash ^= DefaultHostname.GetHashCode();
      if (DefaultBucket.Length != 0) hash ^= DefaultBucket.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      dispatchRules_.WriteTo(output, _repeated_dispatchRules_codec);
      if (AuthDomain.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AuthDomain);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LocationId);
      }
      if (CodeBucket.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CodeBucket);
      }
      if (defaultCookieExpiration_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DefaultCookieExpiration);
      }
      if (DefaultHostname.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DefaultHostname);
      }
      if (DefaultBucket.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DefaultBucket);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += dispatchRules_.CalculateSize(_repeated_dispatchRules_codec);
      if (AuthDomain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthDomain);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (CodeBucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CodeBucket);
      }
      if (defaultCookieExpiration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultCookieExpiration);
      }
      if (DefaultHostname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultHostname);
      }
      if (DefaultBucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultBucket);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Application other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      dispatchRules_.Add(other.dispatchRules_);
      if (other.AuthDomain.Length != 0) {
        AuthDomain = other.AuthDomain;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      if (other.CodeBucket.Length != 0) {
        CodeBucket = other.CodeBucket;
      }
      if (other.defaultCookieExpiration_ != null) {
        if (defaultCookieExpiration_ == null) {
          defaultCookieExpiration_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        DefaultCookieExpiration.MergeFrom(other.DefaultCookieExpiration);
      }
      if (other.DefaultHostname.Length != 0) {
        DefaultHostname = other.DefaultHostname;
      }
      if (other.DefaultBucket.Length != 0) {
        DefaultBucket = other.DefaultBucket;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            dispatchRules_.AddEntriesFrom(input, _repeated_dispatchRules_codec);
            break;
          }
          case 50: {
            AuthDomain = input.ReadString();
            break;
          }
          case 58: {
            LocationId = input.ReadString();
            break;
          }
          case 66: {
            CodeBucket = input.ReadString();
            break;
          }
          case 74: {
            if (defaultCookieExpiration_ == null) {
              defaultCookieExpiration_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(defaultCookieExpiration_);
            break;
          }
          case 90: {
            DefaultHostname = input.ReadString();
            break;
          }
          case 98: {
            DefaultBucket = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Rules to match an HTTP request and dispatch that request to a service.
  /// </summary>
  public sealed partial class UrlDispatchRule : pb::IMessage<UrlDispatchRule> {
    private static readonly pb::MessageParser<UrlDispatchRule> _parser = new pb::MessageParser<UrlDispatchRule>(() => new UrlDispatchRule());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UrlDispatchRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Appengine.V1.ApplicationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UrlDispatchRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UrlDispatchRule(UrlDispatchRule other) : this() {
      domain_ = other.domain_;
      path_ = other.path_;
      service_ = other.service_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UrlDispatchRule Clone() {
      return new UrlDispatchRule(this);
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 1;
    private string domain_ = "";
    /// <summary>
    ///  Domain name to match against. The wildcard "`*`" is supported if
    ///  specified before a period: "`*.`".
    ///
    ///  Defaults to matching all domains: "`*`".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    ///  Pathname within the host. Must start with a "`/`". A
    ///  single "`*`" can be included at the end of the path. The sum
    ///  of the lengths of the domain and path may not exceed 100
    ///  characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 3;
    private string service_ = "";
    /// <summary>
    ///  Resource ID of a service in this application that should
    ///  serve the matched request. The service must already
    ///  exist. Example: `default`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return service_; }
      set {
        service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UrlDispatchRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UrlDispatchRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Domain != other.Domain) return false;
      if (Path != other.Path) return false;
      if (Service != other.Service) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (Service.Length != 0) hash ^= Service.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Domain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Domain);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (Service.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Service);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (Service.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UrlDispatchRule other) {
      if (other == null) {
        return;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.Service.Length != 0) {
        Service = other.Service;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Domain = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 26: {
            Service = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
