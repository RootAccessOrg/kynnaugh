// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/storagetransfer/v1/transfer.proto
// Original file comments:
// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Google.Storagetransfer.V1 {
  /// <summary>
  ///  Transfers data between between Google Cloud Storage buckets or from a data
  ///  source external to Google to a Cloud Storage bucket.
  /// </summary>
  public static class StorageTransferService
  {
    static readonly string __ServiceName = "google.storagetransfer.v1.StorageTransferService";

    static readonly Marshaller<global::Google.Storagetransfer.V1.GetGoogleServiceAccountRequest> __Marshaller_GetGoogleServiceAccountRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Storagetransfer.V1.GetGoogleServiceAccountRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Storagetransfer.V1.GoogleServiceAccount> __Marshaller_GoogleServiceAccount = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Storagetransfer.V1.GoogleServiceAccount.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Storagetransfer.V1.CreateTransferJobRequest> __Marshaller_CreateTransferJobRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Storagetransfer.V1.CreateTransferJobRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Storagetransfer.V1.TransferJob> __Marshaller_TransferJob = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Storagetransfer.V1.TransferJob.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Storagetransfer.V1.UpdateTransferJobRequest> __Marshaller_UpdateTransferJobRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Storagetransfer.V1.UpdateTransferJobRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Storagetransfer.V1.GetTransferJobRequest> __Marshaller_GetTransferJobRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Storagetransfer.V1.GetTransferJobRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Storagetransfer.V1.ListTransferJobsRequest> __Marshaller_ListTransferJobsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Storagetransfer.V1.ListTransferJobsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Storagetransfer.V1.ListTransferJobsResponse> __Marshaller_ListTransferJobsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Storagetransfer.V1.ListTransferJobsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Storagetransfer.V1.PauseTransferOperationRequest> __Marshaller_PauseTransferOperationRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Storagetransfer.V1.PauseTransferOperationRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Storagetransfer.V1.ResumeTransferOperationRequest> __Marshaller_ResumeTransferOperationRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Storagetransfer.V1.ResumeTransferOperationRequest.Parser.ParseFrom);

    static readonly Method<global::Google.Storagetransfer.V1.GetGoogleServiceAccountRequest, global::Google.Storagetransfer.V1.GoogleServiceAccount> __Method_GetGoogleServiceAccount = new Method<global::Google.Storagetransfer.V1.GetGoogleServiceAccountRequest, global::Google.Storagetransfer.V1.GoogleServiceAccount>(
        MethodType.Unary,
        __ServiceName,
        "GetGoogleServiceAccount",
        __Marshaller_GetGoogleServiceAccountRequest,
        __Marshaller_GoogleServiceAccount);

    static readonly Method<global::Google.Storagetransfer.V1.CreateTransferJobRequest, global::Google.Storagetransfer.V1.TransferJob> __Method_CreateTransferJob = new Method<global::Google.Storagetransfer.V1.CreateTransferJobRequest, global::Google.Storagetransfer.V1.TransferJob>(
        MethodType.Unary,
        __ServiceName,
        "CreateTransferJob",
        __Marshaller_CreateTransferJobRequest,
        __Marshaller_TransferJob);

    static readonly Method<global::Google.Storagetransfer.V1.UpdateTransferJobRequest, global::Google.Storagetransfer.V1.TransferJob> __Method_UpdateTransferJob = new Method<global::Google.Storagetransfer.V1.UpdateTransferJobRequest, global::Google.Storagetransfer.V1.TransferJob>(
        MethodType.Unary,
        __ServiceName,
        "UpdateTransferJob",
        __Marshaller_UpdateTransferJobRequest,
        __Marshaller_TransferJob);

    static readonly Method<global::Google.Storagetransfer.V1.GetTransferJobRequest, global::Google.Storagetransfer.V1.TransferJob> __Method_GetTransferJob = new Method<global::Google.Storagetransfer.V1.GetTransferJobRequest, global::Google.Storagetransfer.V1.TransferJob>(
        MethodType.Unary,
        __ServiceName,
        "GetTransferJob",
        __Marshaller_GetTransferJobRequest,
        __Marshaller_TransferJob);

    static readonly Method<global::Google.Storagetransfer.V1.ListTransferJobsRequest, global::Google.Storagetransfer.V1.ListTransferJobsResponse> __Method_ListTransferJobs = new Method<global::Google.Storagetransfer.V1.ListTransferJobsRequest, global::Google.Storagetransfer.V1.ListTransferJobsResponse>(
        MethodType.Unary,
        __ServiceName,
        "ListTransferJobs",
        __Marshaller_ListTransferJobsRequest,
        __Marshaller_ListTransferJobsResponse);

    static readonly Method<global::Google.Storagetransfer.V1.PauseTransferOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_PauseTransferOperation = new Method<global::Google.Storagetransfer.V1.PauseTransferOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "PauseTransferOperation",
        __Marshaller_PauseTransferOperationRequest,
        __Marshaller_Empty);

    static readonly Method<global::Google.Storagetransfer.V1.ResumeTransferOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ResumeTransferOperation = new Method<global::Google.Storagetransfer.V1.ResumeTransferOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "ResumeTransferOperation",
        __Marshaller_ResumeTransferOperationRequest,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Storagetransfer.V1.TransferReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of StorageTransferService</summary>
    public abstract class StorageTransferServiceBase
    {
      /// <summary>
      ///  Returns the Google service account that is used by Storage Transfer
      ///  Service to access buckets in the project where transfers
      ///  run or in other projects. Each Google service account is associated
      ///  with one Google Cloud Platform Console project. Users
      ///  should add this service account to the Google Cloud Storage bucket
      ///  ACLs to grant access to Storage Transfer Service. This service
      ///  account is created and owned by Storage Transfer Service and can
      ///  only be used by Storage Transfer Service.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Storagetransfer.V1.GoogleServiceAccount> GetGoogleServiceAccount(global::Google.Storagetransfer.V1.GetGoogleServiceAccountRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Creates a transfer job that runs periodically.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Storagetransfer.V1.TransferJob> CreateTransferJob(global::Google.Storagetransfer.V1.CreateTransferJobRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Updates a transfer job. Updating a job's transfer spec does not affect
      ///  transfer operations that are running already. Updating the scheduling
      ///  of a job is not allowed.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Storagetransfer.V1.TransferJob> UpdateTransferJob(global::Google.Storagetransfer.V1.UpdateTransferJobRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Gets a transfer job.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Storagetransfer.V1.TransferJob> GetTransferJob(global::Google.Storagetransfer.V1.GetTransferJobRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Lists transfer jobs.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Storagetransfer.V1.ListTransferJobsResponse> ListTransferJobs(global::Google.Storagetransfer.V1.ListTransferJobsRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Pauses a transfer operation.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> PauseTransferOperation(global::Google.Storagetransfer.V1.PauseTransferOperationRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Resumes a transfer operation that is paused.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ResumeTransferOperation(global::Google.Storagetransfer.V1.ResumeTransferOperationRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for StorageTransferService</summary>
    public class StorageTransferServiceClient : ClientBase<StorageTransferServiceClient>
    {
      /// <summary>Creates a new client for StorageTransferService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public StorageTransferServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for StorageTransferService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public StorageTransferServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected StorageTransferServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected StorageTransferServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Returns the Google service account that is used by Storage Transfer
      ///  Service to access buckets in the project where transfers
      ///  run or in other projects. Each Google service account is associated
      ///  with one Google Cloud Platform Console project. Users
      ///  should add this service account to the Google Cloud Storage bucket
      ///  ACLs to grant access to Storage Transfer Service. This service
      ///  account is created and owned by Storage Transfer Service and can
      ///  only be used by Storage Transfer Service.
      /// </summary>
      public virtual global::Google.Storagetransfer.V1.GoogleServiceAccount GetGoogleServiceAccount(global::Google.Storagetransfer.V1.GetGoogleServiceAccountRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetGoogleServiceAccount(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Returns the Google service account that is used by Storage Transfer
      ///  Service to access buckets in the project where transfers
      ///  run or in other projects. Each Google service account is associated
      ///  with one Google Cloud Platform Console project. Users
      ///  should add this service account to the Google Cloud Storage bucket
      ///  ACLs to grant access to Storage Transfer Service. This service
      ///  account is created and owned by Storage Transfer Service and can
      ///  only be used by Storage Transfer Service.
      /// </summary>
      public virtual global::Google.Storagetransfer.V1.GoogleServiceAccount GetGoogleServiceAccount(global::Google.Storagetransfer.V1.GetGoogleServiceAccountRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGoogleServiceAccount, null, options, request);
      }
      /// <summary>
      ///  Returns the Google service account that is used by Storage Transfer
      ///  Service to access buckets in the project where transfers
      ///  run or in other projects. Each Google service account is associated
      ///  with one Google Cloud Platform Console project. Users
      ///  should add this service account to the Google Cloud Storage bucket
      ///  ACLs to grant access to Storage Transfer Service. This service
      ///  account is created and owned by Storage Transfer Service and can
      ///  only be used by Storage Transfer Service.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Storagetransfer.V1.GoogleServiceAccount> GetGoogleServiceAccountAsync(global::Google.Storagetransfer.V1.GetGoogleServiceAccountRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetGoogleServiceAccountAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Returns the Google service account that is used by Storage Transfer
      ///  Service to access buckets in the project where transfers
      ///  run or in other projects. Each Google service account is associated
      ///  with one Google Cloud Platform Console project. Users
      ///  should add this service account to the Google Cloud Storage bucket
      ///  ACLs to grant access to Storage Transfer Service. This service
      ///  account is created and owned by Storage Transfer Service and can
      ///  only be used by Storage Transfer Service.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Storagetransfer.V1.GoogleServiceAccount> GetGoogleServiceAccountAsync(global::Google.Storagetransfer.V1.GetGoogleServiceAccountRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGoogleServiceAccount, null, options, request);
      }
      /// <summary>
      ///  Creates a transfer job that runs periodically.
      /// </summary>
      public virtual global::Google.Storagetransfer.V1.TransferJob CreateTransferJob(global::Google.Storagetransfer.V1.CreateTransferJobRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateTransferJob(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a transfer job that runs periodically.
      /// </summary>
      public virtual global::Google.Storagetransfer.V1.TransferJob CreateTransferJob(global::Google.Storagetransfer.V1.CreateTransferJobRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTransferJob, null, options, request);
      }
      /// <summary>
      ///  Creates a transfer job that runs periodically.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Storagetransfer.V1.TransferJob> CreateTransferJobAsync(global::Google.Storagetransfer.V1.CreateTransferJobRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateTransferJobAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Creates a transfer job that runs periodically.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Storagetransfer.V1.TransferJob> CreateTransferJobAsync(global::Google.Storagetransfer.V1.CreateTransferJobRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTransferJob, null, options, request);
      }
      /// <summary>
      ///  Updates a transfer job. Updating a job's transfer spec does not affect
      ///  transfer operations that are running already. Updating the scheduling
      ///  of a job is not allowed.
      /// </summary>
      public virtual global::Google.Storagetransfer.V1.TransferJob UpdateTransferJob(global::Google.Storagetransfer.V1.UpdateTransferJobRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateTransferJob(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Updates a transfer job. Updating a job's transfer spec does not affect
      ///  transfer operations that are running already. Updating the scheduling
      ///  of a job is not allowed.
      /// </summary>
      public virtual global::Google.Storagetransfer.V1.TransferJob UpdateTransferJob(global::Google.Storagetransfer.V1.UpdateTransferJobRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTransferJob, null, options, request);
      }
      /// <summary>
      ///  Updates a transfer job. Updating a job's transfer spec does not affect
      ///  transfer operations that are running already. Updating the scheduling
      ///  of a job is not allowed.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Storagetransfer.V1.TransferJob> UpdateTransferJobAsync(global::Google.Storagetransfer.V1.UpdateTransferJobRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateTransferJobAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Updates a transfer job. Updating a job's transfer spec does not affect
      ///  transfer operations that are running already. Updating the scheduling
      ///  of a job is not allowed.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Storagetransfer.V1.TransferJob> UpdateTransferJobAsync(global::Google.Storagetransfer.V1.UpdateTransferJobRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTransferJob, null, options, request);
      }
      /// <summary>
      ///  Gets a transfer job.
      /// </summary>
      public virtual global::Google.Storagetransfer.V1.TransferJob GetTransferJob(global::Google.Storagetransfer.V1.GetTransferJobRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetTransferJob(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a transfer job.
      /// </summary>
      public virtual global::Google.Storagetransfer.V1.TransferJob GetTransferJob(global::Google.Storagetransfer.V1.GetTransferJobRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTransferJob, null, options, request);
      }
      /// <summary>
      ///  Gets a transfer job.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Storagetransfer.V1.TransferJob> GetTransferJobAsync(global::Google.Storagetransfer.V1.GetTransferJobRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetTransferJobAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Gets a transfer job.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Storagetransfer.V1.TransferJob> GetTransferJobAsync(global::Google.Storagetransfer.V1.GetTransferJobRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTransferJob, null, options, request);
      }
      /// <summary>
      ///  Lists transfer jobs.
      /// </summary>
      public virtual global::Google.Storagetransfer.V1.ListTransferJobsResponse ListTransferJobs(global::Google.Storagetransfer.V1.ListTransferJobsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListTransferJobs(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Lists transfer jobs.
      /// </summary>
      public virtual global::Google.Storagetransfer.V1.ListTransferJobsResponse ListTransferJobs(global::Google.Storagetransfer.V1.ListTransferJobsRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTransferJobs, null, options, request);
      }
      /// <summary>
      ///  Lists transfer jobs.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Storagetransfer.V1.ListTransferJobsResponse> ListTransferJobsAsync(global::Google.Storagetransfer.V1.ListTransferJobsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListTransferJobsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Lists transfer jobs.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Storagetransfer.V1.ListTransferJobsResponse> ListTransferJobsAsync(global::Google.Storagetransfer.V1.ListTransferJobsRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTransferJobs, null, options, request);
      }
      /// <summary>
      ///  Pauses a transfer operation.
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty PauseTransferOperation(global::Google.Storagetransfer.V1.PauseTransferOperationRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return PauseTransferOperation(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Pauses a transfer operation.
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty PauseTransferOperation(global::Google.Storagetransfer.V1.PauseTransferOperationRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PauseTransferOperation, null, options, request);
      }
      /// <summary>
      ///  Pauses a transfer operation.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> PauseTransferOperationAsync(global::Google.Storagetransfer.V1.PauseTransferOperationRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return PauseTransferOperationAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Pauses a transfer operation.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> PauseTransferOperationAsync(global::Google.Storagetransfer.V1.PauseTransferOperationRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PauseTransferOperation, null, options, request);
      }
      /// <summary>
      ///  Resumes a transfer operation that is paused.
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ResumeTransferOperation(global::Google.Storagetransfer.V1.ResumeTransferOperationRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ResumeTransferOperation(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Resumes a transfer operation that is paused.
      /// </summary>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ResumeTransferOperation(global::Google.Storagetransfer.V1.ResumeTransferOperationRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResumeTransferOperation, null, options, request);
      }
      /// <summary>
      ///  Resumes a transfer operation that is paused.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ResumeTransferOperationAsync(global::Google.Storagetransfer.V1.ResumeTransferOperationRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ResumeTransferOperationAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Resumes a transfer operation that is paused.
      /// </summary>
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ResumeTransferOperationAsync(global::Google.Storagetransfer.V1.ResumeTransferOperationRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResumeTransferOperation, null, options, request);
      }
      protected override StorageTransferServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new StorageTransferServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(StorageTransferServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetGoogleServiceAccount, serviceImpl.GetGoogleServiceAccount)
          .AddMethod(__Method_CreateTransferJob, serviceImpl.CreateTransferJob)
          .AddMethod(__Method_UpdateTransferJob, serviceImpl.UpdateTransferJob)
          .AddMethod(__Method_GetTransferJob, serviceImpl.GetTransferJob)
          .AddMethod(__Method_ListTransferJobs, serviceImpl.ListTransferJobs)
          .AddMethod(__Method_PauseTransferOperation, serviceImpl.PauseTransferOperation)
          .AddMethod(__Method_ResumeTransferOperation, serviceImpl.ResumeTransferOperation).Build();
    }

  }
}
#endregion
