// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/ml/v1beta1/job_service.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Ml.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/ml/v1beta1/job_service.proto</summary>
  public static partial class JobServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/ml/v1beta1/job_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JobServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvY2xvdWQvbWwvdjFiZXRhMS9qb2Jfc2VydmljZS5wcm90bxIX",
            "Z29vZ2xlLmNsb3VkLm1sLnYxYmV0YTEaHGdvb2dsZS9hcGkvYW5ub3RhdGlv",
            "bnMucHJvdG8aG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90bxofZ29vZ2xl",
            "L3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byKoAwoNVHJhaW5pbmdJbnB1dBJE",
            "CgpzY2FsZV90aWVyGAEgASgOMjAuZ29vZ2xlLmNsb3VkLm1sLnYxYmV0YTEu",
            "VHJhaW5pbmdJbnB1dC5TY2FsZVRpZXISEwoLbWFzdGVyX3R5cGUYAiABKAkS",
            "EwoLd29ya2VyX3R5cGUYAyABKAkSHQoVcGFyYW1ldGVyX3NlcnZlcl90eXBl",
            "GAQgASgJEhQKDHdvcmtlcl9jb3VudBgFIAEoAxIeChZwYXJhbWV0ZXJfc2Vy",
            "dmVyX2NvdW50GAYgASgDEhQKDHBhY2thZ2VfdXJpcxgHIAMoCRIVCg1weXRo",
            "b25fbW9kdWxlGAggASgJEgwKBGFyZ3MYCiADKAkSRAoPaHlwZXJwYXJhbWV0",
            "ZXJzGAwgASgLMisuZ29vZ2xlLmNsb3VkLm1sLnYxYmV0YTEuSHlwZXJwYXJh",
            "bWV0ZXJTcGVjEg4KBnJlZ2lvbhgOIAEoCSJBCglTY2FsZVRpZXISCQoFQkFT",
            "SUMQABIOCgpTVEFOREFSRF8xEAESDQoJUFJFTUlVTV8xEAMSCgoGQ1VTVE9N",
            "EAUihAIKEkh5cGVycGFyYW1ldGVyU3BlYxJCCgRnb2FsGAEgASgOMjQuZ29v",
            "Z2xlLmNsb3VkLm1sLnYxYmV0YTEuSHlwZXJwYXJhbWV0ZXJTcGVjLkdvYWxU",
            "eXBlEjYKBnBhcmFtcxgCIAMoCzImLmdvb2dsZS5jbG91ZC5tbC52MWJldGEx",
            "LlBhcmFtZXRlclNwZWMSEgoKbWF4X3RyaWFscxgDIAEoBRIbChNtYXhfcGFy",
            "YWxsZWxfdHJpYWxzGAQgASgFIkEKCEdvYWxUeXBlEhkKFUdPQUxfVFlQRV9V",
            "TlNQRUNJRklFRBAAEgwKCE1BWElNSVpFEAESDAoITUlOSU1JWkUQAiLTAwoN",
            "UGFyYW1ldGVyU3BlYxIWCg5wYXJhbWV0ZXJfbmFtZRgBIAEoCRJCCgR0eXBl",
            "GAQgASgOMjQuZ29vZ2xlLmNsb3VkLm1sLnYxYmV0YTEuUGFyYW1ldGVyU3Bl",
            "Yy5QYXJhbWV0ZXJUeXBlEhEKCW1pbl92YWx1ZRgCIAEoARIRCgltYXhfdmFs",
            "dWUYAyABKAESGgoSY2F0ZWdvcmljYWxfdmFsdWVzGAUgAygJEhcKD2Rpc2Ny",
            "ZXRlX3ZhbHVlcxgGIAMoARJECgpzY2FsZV90eXBlGAcgASgOMjAuZ29vZ2xl",
            "LmNsb3VkLm1sLnYxYmV0YTEuUGFyYW1ldGVyU3BlYy5TY2FsZVR5cGUiZwoN",
            "UGFyYW1ldGVyVHlwZRIeChpQQVJBTUVURVJfVFlQRV9VTlNQRUNJRklFRBAA",
            "EgoKBkRPVUJMRRABEgsKB0lOVEVHRVIQAhIPCgtDQVRFR09SSUNBTBADEgwK",
            "CERJU0NSRVRFEAQiXAoJU2NhbGVUeXBlEggKBE5PTkUQABIVChFVTklUX0xJ",
            "TkVBUl9TQ0FMRRABEhIKDlVOSVRfTE9HX1NDQUxFEAISGgoWVU5JVF9SRVZF",
            "UlNFX0xPR19TQ0FMRRADIrgDChRIeXBlcnBhcmFtZXRlck91dHB1dBIQCgh0",
            "cmlhbF9pZBgBIAEoCRJbCg9oeXBlcnBhcmFtZXRlcnMYAiADKAsyQi5nb29n",
            "bGUuY2xvdWQubWwudjFiZXRhMS5IeXBlcnBhcmFtZXRlck91dHB1dC5IeXBl",
            "cnBhcmFtZXRlcnNFbnRyeRJYCgxmaW5hbF9tZXRyaWMYAyABKAsyQi5nb29n",
            "bGUuY2xvdWQubWwudjFiZXRhMS5IeXBlcnBhcmFtZXRlck91dHB1dC5IeXBl",
            "cnBhcmFtZXRlck1ldHJpYxJXCgthbGxfbWV0cmljcxgEIAMoCzJCLmdvb2ds",
            "ZS5jbG91ZC5tbC52MWJldGExLkh5cGVycGFyYW1ldGVyT3V0cHV0Lkh5cGVy",
            "cGFyYW1ldGVyTWV0cmljGkYKFEh5cGVycGFyYW1ldGVyTWV0cmljEhUKDXRy",
            "YWluaW5nX3N0ZXAYASABKAMSFwoPb2JqZWN0aXZlX3ZhbHVlGAIgASgBGjYK",
            "FEh5cGVycGFyYW1ldGVyc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoCToCOAEibgoOVHJhaW5pbmdPdXRwdXQSHQoVY29tcGxldGVkX3RyaWFs",
            "X2NvdW50GAEgASgDEj0KBnRyaWFscxgCIAMoCzItLmdvb2dsZS5jbG91ZC5t",
            "bC52MWJldGExLkh5cGVycGFyYW1ldGVyT3V0cHV0IsYCCg9QcmVkaWN0aW9u",
            "SW5wdXQSFAoKbW9kZWxfbmFtZRgBIAEoCUgAEhYKDHZlcnNpb25fbmFtZRgC",
            "IAEoCUgAEkgKC2RhdGFfZm9ybWF0GAMgASgOMjMuZ29vZ2xlLmNsb3VkLm1s",
            "LnYxYmV0YTEuUHJlZGljdGlvbklucHV0LkRhdGFGb3JtYXQSEwoLaW5wdXRf",
            "cGF0aHMYBCADKAkSEwoLb3V0cHV0X3BhdGgYBSABKAkSGAoQbWF4X3dvcmtl",
            "cl9jb3VudBgGIAEoAxIOCgZyZWdpb24YByABKAkiVgoKRGF0YUZvcm1hdBIb",
            "ChdEQVRBX0ZPUk1BVF9VTlNQRUNJRklFRBAAEggKBFRFWFQQARINCglURl9S",
            "RUNPUkQQAhISCg5URl9SRUNPUkRfR1pJUBADQg8KDW1vZGVsX3ZlcnNpb24i",
            "VgoQUHJlZGljdGlvbk91dHB1dBITCgtvdXRwdXRfcGF0aBgBIAEoCRIYChBw",
            "cmVkaWN0aW9uX2NvdW50GAIgASgDEhMKC2Vycm9yX2NvdW50GAMgASgDIpgF",
            "CgNKb2ISDgoGam9iX2lkGAEgASgJEkAKDnRyYWluaW5nX2lucHV0GAIgASgL",
            "MiYuZ29vZ2xlLmNsb3VkLm1sLnYxYmV0YTEuVHJhaW5pbmdJbnB1dEgAEkQK",
            "EHByZWRpY3Rpb25faW5wdXQYAyABKAsyKC5nb29nbGUuY2xvdWQubWwudjFi",
            "ZXRhMS5QcmVkaWN0aW9uSW5wdXRIABIvCgtjcmVhdGVfdGltZRgEIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKc3RhcnRfdGltZRgFIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIZW5kX3RpbWUYBiAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjEKBXN0YXRlGAcgASgO",
            "MiIuZ29vZ2xlLmNsb3VkLm1sLnYxYmV0YTEuSm9iLlN0YXRlEhUKDWVycm9y",
            "X21lc3NhZ2UYCCABKAkSQgoPdHJhaW5pbmdfb3V0cHV0GAkgASgLMicuZ29v",
            "Z2xlLmNsb3VkLm1sLnYxYmV0YTEuVHJhaW5pbmdPdXRwdXRIARJGChFwcmVk",
            "aWN0aW9uX291dHB1dBgKIAEoCzIpLmdvb2dsZS5jbG91ZC5tbC52MWJldGEx",
            "LlByZWRpY3Rpb25PdXRwdXRIASKAAQoFU3RhdGUSFQoRU1RBVEVfVU5TUEVD",
            "SUZJRUQQABIKCgZRVUVVRUQQARINCglQUkVQQVJJTkcQAhILCgdSVU5OSU5H",
            "EAMSDQoJU1VDQ0VFREVEEAQSCgoGRkFJTEVEEAUSDgoKQ0FOQ0VMTElORxAG",
            "Eg0KCUNBTkNFTExFRBAHQgcKBWlucHV0QggKBm91dHB1dCJNChBDcmVhdGVK",
            "b2JSZXF1ZXN0Eg4KBnBhcmVudBgBIAEoCRIpCgNqb2IYAiABKAsyHC5nb29n",
            "bGUuY2xvdWQubWwudjFiZXRhMS5Kb2IiWAoPTGlzdEpvYnNSZXF1ZXN0Eg4K",
            "BnBhcmVudBgBIAEoCRIOCgZmaWx0ZXIYAiABKAkSEgoKcGFnZV90b2tlbhgE",
            "IAEoCRIRCglwYWdlX3NpemUYBSABKAUiVwoQTGlzdEpvYnNSZXNwb25zZRIq",
            "CgRqb2JzGAEgAygLMhwuZ29vZ2xlLmNsb3VkLm1sLnYxYmV0YTEuSm9iEhcK",
            "D25leHRfcGFnZV90b2tlbhgCIAEoCSIdCg1HZXRKb2JSZXF1ZXN0EgwKBG5h",
            "bWUYASABKAkiIAoQQ2FuY2VsSm9iUmVxdWVzdBIMCgRuYW1lGAEgASgJMqEE",
            "CgpKb2JTZXJ2aWNlEoQBCglDcmVhdGVKb2ISKS5nb29nbGUuY2xvdWQubWwu",
            "djFiZXRhMS5DcmVhdGVKb2JSZXF1ZXN0GhwuZ29vZ2xlLmNsb3VkLm1sLnYx",
            "YmV0YTEuSm9iIi6C0+STAigiIS92MWJldGExL3twYXJlbnQ9cHJvamVjdHMv",
            "Kn0vam9iczoDam9iEooBCghMaXN0Sm9icxIoLmdvb2dsZS5jbG91ZC5tbC52",
            "MWJldGExLkxpc3RKb2JzUmVxdWVzdBopLmdvb2dsZS5jbG91ZC5tbC52MWJl",
            "dGExLkxpc3RKb2JzUmVzcG9uc2UiKYLT5JMCIxIhL3YxYmV0YTEve3BhcmVu",
            "dD1wcm9qZWN0cy8qfS9qb2JzEnkKBkdldEpvYhImLmdvb2dsZS5jbG91ZC5t",
            "bC52MWJldGExLkdldEpvYlJlcXVlc3QaHC5nb29nbGUuY2xvdWQubWwudjFi",
            "ZXRhMS5Kb2IiKYLT5JMCIxIhL3YxYmV0YTEve25hbWU9cHJvamVjdHMvKi9q",
            "b2JzLyp9EoMBCglDYW5jZWxKb2ISKS5nb29nbGUuY2xvdWQubWwudjFiZXRh",
            "MS5DYW5jZWxKb2JSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IjOC",
            "0+STAi0iKC92MWJldGExL3tuYW1lPXByb2plY3RzLyovam9icy8qfTpjYW5j",
            "ZWw6ASpCbwofY29tLmdvb2dsZS5jbG91ZC5tbC5hcGkudjFiZXRhMUIPSm9i",
            "U2VydmljZVByb3RvUAFaOWdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dv",
            "b2dsZWFwaXMvY2xvdWQvbWwvdjFiZXRhMTttbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.TrainingInput), global::Google.Cloud.Ml.V1Beta1.TrainingInput.Parser, new[]{ "ScaleTier", "MasterType", "WorkerType", "ParameterServerType", "WorkerCount", "ParameterServerCount", "PackageUris", "PythonModule", "Args", "Hyperparameters", "Region" }, null, new[]{ typeof(global::Google.Cloud.Ml.V1Beta1.TrainingInput.Types.ScaleTier) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.HyperparameterSpec), global::Google.Cloud.Ml.V1Beta1.HyperparameterSpec.Parser, new[]{ "Goal", "Params", "MaxTrials", "MaxParallelTrials" }, null, new[]{ typeof(global::Google.Cloud.Ml.V1Beta1.HyperparameterSpec.Types.GoalType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.ParameterSpec), global::Google.Cloud.Ml.V1Beta1.ParameterSpec.Parser, new[]{ "ParameterName", "Type", "MinValue", "MaxValue", "CategoricalValues", "DiscreteValues", "ScaleType" }, null, new[]{ typeof(global::Google.Cloud.Ml.V1Beta1.ParameterSpec.Types.ParameterType), typeof(global::Google.Cloud.Ml.V1Beta1.ParameterSpec.Types.ScaleType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput), global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Parser, new[]{ "TrialId", "Hyperparameters", "FinalMetric", "AllMetrics" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Types.HyperparameterMetric), global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Types.HyperparameterMetric.Parser, new[]{ "TrainingStep", "ObjectiveValue" }, null, null, null),
            null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.TrainingOutput), global::Google.Cloud.Ml.V1Beta1.TrainingOutput.Parser, new[]{ "CompletedTrialCount", "Trials" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.PredictionInput), global::Google.Cloud.Ml.V1Beta1.PredictionInput.Parser, new[]{ "ModelName", "VersionName", "DataFormat", "InputPaths", "OutputPath", "MaxWorkerCount", "Region" }, new[]{ "ModelVersion" }, new[]{ typeof(global::Google.Cloud.Ml.V1Beta1.PredictionInput.Types.DataFormat) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.PredictionOutput), global::Google.Cloud.Ml.V1Beta1.PredictionOutput.Parser, new[]{ "OutputPath", "PredictionCount", "ErrorCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.Job), global::Google.Cloud.Ml.V1Beta1.Job.Parser, new[]{ "JobId", "TrainingInput", "PredictionInput", "CreateTime", "StartTime", "EndTime", "State", "ErrorMessage", "TrainingOutput", "PredictionOutput" }, new[]{ "Input", "Output" }, new[]{ typeof(global::Google.Cloud.Ml.V1Beta1.Job.Types.State) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.CreateJobRequest), global::Google.Cloud.Ml.V1Beta1.CreateJobRequest.Parser, new[]{ "Parent", "Job" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.ListJobsRequest), global::Google.Cloud.Ml.V1Beta1.ListJobsRequest.Parser, new[]{ "Parent", "Filter", "PageToken", "PageSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.ListJobsResponse), global::Google.Cloud.Ml.V1Beta1.ListJobsResponse.Parser, new[]{ "Jobs", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.GetJobRequest), global::Google.Cloud.Ml.V1Beta1.GetJobRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Ml.V1Beta1.CancelJobRequest), global::Google.Cloud.Ml.V1Beta1.CancelJobRequest.Parser, new[]{ "Name" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  Represents input parameters for a training job.
  /// </summary>
  public sealed partial class TrainingInput : pb::IMessage<TrainingInput> {
    private static readonly pb::MessageParser<TrainingInput> _parser = new pb::MessageParser<TrainingInput>(() => new TrainingInput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainingInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainingInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainingInput(TrainingInput other) : this() {
      scaleTier_ = other.scaleTier_;
      masterType_ = other.masterType_;
      workerType_ = other.workerType_;
      parameterServerType_ = other.parameterServerType_;
      workerCount_ = other.workerCount_;
      parameterServerCount_ = other.parameterServerCount_;
      packageUris_ = other.packageUris_.Clone();
      pythonModule_ = other.pythonModule_;
      args_ = other.args_.Clone();
      Hyperparameters = other.hyperparameters_ != null ? other.Hyperparameters.Clone() : null;
      region_ = other.region_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainingInput Clone() {
      return new TrainingInput(this);
    }

    /// <summary>Field number for the "scale_tier" field.</summary>
    public const int ScaleTierFieldNumber = 1;
    private global::Google.Cloud.Ml.V1Beta1.TrainingInput.Types.ScaleTier scaleTier_ = 0;
    /// <summary>
    ///  Required. Specifies the machine types, the number of replicas for workers
    ///  and parameter servers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.TrainingInput.Types.ScaleTier ScaleTier {
      get { return scaleTier_; }
      set {
        scaleTier_ = value;
      }
    }

    /// <summary>Field number for the "master_type" field.</summary>
    public const int MasterTypeFieldNumber = 2;
    private string masterType_ = "";
    /// <summary>
    ///  Optional. Specifies the type of virtual machine to use for your training
    ///  job's master worker.
    ///
    ///  The following types are supported:
    ///
    ///  &lt;dl>
    ///    &lt;dt>standard&lt;/dt>
    ///    &lt;dd>
    ///    A basic machine configuration suitable for training simple models with
    ///    small to moderate datasets.
    ///    &lt;/dd>
    ///    &lt;dt>large_model&lt;/dt>
    ///    &lt;dd>
    ///    A machine with a lot of memory, specially suited for parameter servers
    ///    when your model is large (having many hidden layers or layers with very
    ///    large numbers of nodes).
    ///    &lt;/dd>
    ///    &lt;dt>complex_model_s&lt;/dt>
    ///    &lt;dd>
    ///    A machine suitable for the master and workers of the cluster when your
    ///    model requires more computation than the standard machine can handle
    ///    satisfactorily.
    ///    &lt;/dd>
    ///    &lt;dt>complex_model_m&lt;/dt>
    ///    &lt;dd>
    ///    A machine with roughly twice the number of cores and roughly double the
    ///    memory of `complex_model_s`.
    ///    &lt;/dd>
    ///    &lt;dt>complex_model_l&lt;/dt>
    ///    &lt;dd>
    ///    A machine with roughly twice the number of cores and roughly double the
    ///    memory of `complex_model_m`.
    ///    &lt;/dd>
    ///  &lt;/dl>
    ///
    ///  This value can only be used when `ScaleTier` is set to `CUSTOM`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MasterType {
      get { return masterType_; }
      set {
        masterType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "worker_type" field.</summary>
    public const int WorkerTypeFieldNumber = 3;
    private string workerType_ = "";
    /// <summary>
    ///  Optional. Specifies the type of virtual machine to use for your training
    ///  job's worker nodes.
    ///
    ///  The supported values are the same as those described in the entry for
    ///  `master_type`.
    ///
    ///  This value must be present when `scale_tier` is set to `CUSTOM` and
    ///  `worker_count` is greater than zero.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkerType {
      get { return workerType_; }
      set {
        workerType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameter_server_type" field.</summary>
    public const int ParameterServerTypeFieldNumber = 4;
    private string parameterServerType_ = "";
    /// <summary>
    ///  Optional. Specifies the type of virtual machine to use for your training
    ///  job's parameter server.
    ///
    ///  The supported values are the same as those described in the entry for
    ///  `master_type`.
    ///
    ///  This value must be present when `scale_tier` is set to `CUSTOM` and
    ///  `parameter_server_count` is greater than zero.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParameterServerType {
      get { return parameterServerType_; }
      set {
        parameterServerType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "worker_count" field.</summary>
    public const int WorkerCountFieldNumber = 5;
    private long workerCount_;
    /// <summary>
    ///  Optional. The number of worker replicas to use for the training job. Each
    ///  replica in the cluster will be of the type specified in `worker_type`.
    ///
    ///  This value can only be used when `scale_tier` is set to `CUSTOM`. If you
    ///  set this value, you must also set `worker_type`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WorkerCount {
      get { return workerCount_; }
      set {
        workerCount_ = value;
      }
    }

    /// <summary>Field number for the "parameter_server_count" field.</summary>
    public const int ParameterServerCountFieldNumber = 6;
    private long parameterServerCount_;
    /// <summary>
    ///  Optional. The number of parameter server replicas to use for the training
    ///  job. Each replica in the cluster will be of the type specified in
    ///  `parameter_server_type`.
    ///
    ///  This value can only be used when `scale_tier` is set to `CUSTOM`.If you
    ///  set this value, you must also set `parameter_server_type`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ParameterServerCount {
      get { return parameterServerCount_; }
      set {
        parameterServerCount_ = value;
      }
    }

    /// <summary>Field number for the "package_uris" field.</summary>
    public const int PackageUrisFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_packageUris_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> packageUris_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  Required. The Google Cloud Storage location of the packages with
    ///  the training program and any additional dependencies.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PackageUris {
      get { return packageUris_; }
    }

    /// <summary>Field number for the "python_module" field.</summary>
    public const int PythonModuleFieldNumber = 8;
    private string pythonModule_ = "";
    /// <summary>
    ///  Required. The Python module name to run after installing the packages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PythonModule {
      get { return pythonModule_; }
      set {
        pythonModule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_args_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> args_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  Optional. Command line arguments to pass to the program.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Args {
      get { return args_; }
    }

    /// <summary>Field number for the "hyperparameters" field.</summary>
    public const int HyperparametersFieldNumber = 12;
    private global::Google.Cloud.Ml.V1Beta1.HyperparameterSpec hyperparameters_;
    /// <summary>
    ///  Optional. The set of Hyperparameters to tune.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.HyperparameterSpec Hyperparameters {
      get { return hyperparameters_; }
      set {
        hyperparameters_ = value;
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 14;
    private string region_ = "";
    /// <summary>
    ///  Required. The Google Compute Engine region to run the training job in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainingInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainingInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScaleTier != other.ScaleTier) return false;
      if (MasterType != other.MasterType) return false;
      if (WorkerType != other.WorkerType) return false;
      if (ParameterServerType != other.ParameterServerType) return false;
      if (WorkerCount != other.WorkerCount) return false;
      if (ParameterServerCount != other.ParameterServerCount) return false;
      if(!packageUris_.Equals(other.packageUris_)) return false;
      if (PythonModule != other.PythonModule) return false;
      if(!args_.Equals(other.args_)) return false;
      if (!object.Equals(Hyperparameters, other.Hyperparameters)) return false;
      if (Region != other.Region) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ScaleTier != 0) hash ^= ScaleTier.GetHashCode();
      if (MasterType.Length != 0) hash ^= MasterType.GetHashCode();
      if (WorkerType.Length != 0) hash ^= WorkerType.GetHashCode();
      if (ParameterServerType.Length != 0) hash ^= ParameterServerType.GetHashCode();
      if (WorkerCount != 0L) hash ^= WorkerCount.GetHashCode();
      if (ParameterServerCount != 0L) hash ^= ParameterServerCount.GetHashCode();
      hash ^= packageUris_.GetHashCode();
      if (PythonModule.Length != 0) hash ^= PythonModule.GetHashCode();
      hash ^= args_.GetHashCode();
      if (hyperparameters_ != null) hash ^= Hyperparameters.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ScaleTier != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ScaleTier);
      }
      if (MasterType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MasterType);
      }
      if (WorkerType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WorkerType);
      }
      if (ParameterServerType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ParameterServerType);
      }
      if (WorkerCount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(WorkerCount);
      }
      if (ParameterServerCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ParameterServerCount);
      }
      packageUris_.WriteTo(output, _repeated_packageUris_codec);
      if (PythonModule.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PythonModule);
      }
      args_.WriteTo(output, _repeated_args_codec);
      if (hyperparameters_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Hyperparameters);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Region);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ScaleTier != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ScaleTier);
      }
      if (MasterType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MasterType);
      }
      if (WorkerType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkerType);
      }
      if (ParameterServerType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParameterServerType);
      }
      if (WorkerCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WorkerCount);
      }
      if (ParameterServerCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ParameterServerCount);
      }
      size += packageUris_.CalculateSize(_repeated_packageUris_codec);
      if (PythonModule.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PythonModule);
      }
      size += args_.CalculateSize(_repeated_args_codec);
      if (hyperparameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hyperparameters);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainingInput other) {
      if (other == null) {
        return;
      }
      if (other.ScaleTier != 0) {
        ScaleTier = other.ScaleTier;
      }
      if (other.MasterType.Length != 0) {
        MasterType = other.MasterType;
      }
      if (other.WorkerType.Length != 0) {
        WorkerType = other.WorkerType;
      }
      if (other.ParameterServerType.Length != 0) {
        ParameterServerType = other.ParameterServerType;
      }
      if (other.WorkerCount != 0L) {
        WorkerCount = other.WorkerCount;
      }
      if (other.ParameterServerCount != 0L) {
        ParameterServerCount = other.ParameterServerCount;
      }
      packageUris_.Add(other.packageUris_);
      if (other.PythonModule.Length != 0) {
        PythonModule = other.PythonModule;
      }
      args_.Add(other.args_);
      if (other.hyperparameters_ != null) {
        if (hyperparameters_ == null) {
          hyperparameters_ = new global::Google.Cloud.Ml.V1Beta1.HyperparameterSpec();
        }
        Hyperparameters.MergeFrom(other.Hyperparameters);
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            scaleTier_ = (global::Google.Cloud.Ml.V1Beta1.TrainingInput.Types.ScaleTier) input.ReadEnum();
            break;
          }
          case 18: {
            MasterType = input.ReadString();
            break;
          }
          case 26: {
            WorkerType = input.ReadString();
            break;
          }
          case 34: {
            ParameterServerType = input.ReadString();
            break;
          }
          case 40: {
            WorkerCount = input.ReadInt64();
            break;
          }
          case 48: {
            ParameterServerCount = input.ReadInt64();
            break;
          }
          case 58: {
            packageUris_.AddEntriesFrom(input, _repeated_packageUris_codec);
            break;
          }
          case 66: {
            PythonModule = input.ReadString();
            break;
          }
          case 82: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
          case 98: {
            if (hyperparameters_ == null) {
              hyperparameters_ = new global::Google.Cloud.Ml.V1Beta1.HyperparameterSpec();
            }
            input.ReadMessage(hyperparameters_);
            break;
          }
          case 114: {
            Region = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TrainingInput message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///  A scale tier is an abstract representation of the resources Cloud ML
      ///  will allocate to a training job. When selecting a scale tier for your
      ///  training job, you should consider the size of your training dataset and
      ///  the complexity of your model. As the tiers increase, virtual machines are
      ///  added to handle your job, and the individual machines in the cluster
      ///  generally have more memory and greater processing power than they do at
      ///  lower tiers. The number of training units charged per hour of processing
      ///  increases as tiers get more advanced. Refer to the
      ///  [pricing guide](/ml/pricing) for more details.
      /// </summary>
      public enum ScaleTier {
        /// <summary>
        ///  A single worker instance. This tier is suitable for learning how to use
        ///  Cloud ML, and for experimenting with new models using small datasets.
        /// </summary>
        [pbr::OriginalName("BASIC")] Basic = 0,
        /// <summary>
        ///  Many workers and a few parameter servers.
        /// </summary>
        [pbr::OriginalName("STANDARD_1")] Standard1 = 1,
        /// <summary>
        ///  A large number of workers with many parameter servers.
        /// </summary>
        [pbr::OriginalName("PREMIUM_1")] Premium1 = 3,
        /// <summary>
        ///  The CUSTOM tier is not a set tier, but rather enables you to use your
        ///  own cluster specification. When you use this tier, you must also set
        ///  valid values for `worker_count` and `parameter_server_count`, and you can
        ///  specify the type of virtual machines to use for the different types of
        ///  workers by setting `master_type`, `worker_type`, and
        ///  `parameter_server_type`.
        /// </summary>
        [pbr::OriginalName("CUSTOM")] Custom = 5,
      }

    }
    #endregion

  }

  /// <summary>
  ///  Represents a set of hyperparameters to optimize.
  /// </summary>
  public sealed partial class HyperparameterSpec : pb::IMessage<HyperparameterSpec> {
    private static readonly pb::MessageParser<HyperparameterSpec> _parser = new pb::MessageParser<HyperparameterSpec>(() => new HyperparameterSpec());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HyperparameterSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HyperparameterSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HyperparameterSpec(HyperparameterSpec other) : this() {
      goal_ = other.goal_;
      params_ = other.params_.Clone();
      maxTrials_ = other.maxTrials_;
      maxParallelTrials_ = other.maxParallelTrials_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HyperparameterSpec Clone() {
      return new HyperparameterSpec(this);
    }

    /// <summary>Field number for the "goal" field.</summary>
    public const int GoalFieldNumber = 1;
    private global::Google.Cloud.Ml.V1Beta1.HyperparameterSpec.Types.GoalType goal_ = 0;
    /// <summary>
    ///  Required. The type of goal to use for tuning. Available types are
    ///  `MAXIMIZE` and `MINIMIZE`.
    ///
    ///  Defaults to `MAXIMIZE`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.HyperparameterSpec.Types.GoalType Goal {
      get { return goal_; }
      set {
        goal_ = value;
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Ml.V1Beta1.ParameterSpec> _repeated_params_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Ml.V1Beta1.ParameterSpec.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Ml.V1Beta1.ParameterSpec> params_ = new pbc::RepeatedField<global::Google.Cloud.Ml.V1Beta1.ParameterSpec>();
    /// <summary>
    ///  Required. The set of parameters to tune.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Ml.V1Beta1.ParameterSpec> Params {
      get { return params_; }
    }

    /// <summary>Field number for the "max_trials" field.</summary>
    public const int MaxTrialsFieldNumber = 3;
    private int maxTrials_;
    /// <summary>
    ///  Optional. How many training trials should be attempted to optimize
    ///  the specified hyperparameters.
    ///
    ///  Defaults to one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxTrials {
      get { return maxTrials_; }
      set {
        maxTrials_ = value;
      }
    }

    /// <summary>Field number for the "max_parallel_trials" field.</summary>
    public const int MaxParallelTrialsFieldNumber = 4;
    private int maxParallelTrials_;
    /// <summary>
    ///  Optional. The number of training trials to run concurrently.
    ///  You can reduce the time it takes to perform hyperparameter tuning by adding
    ///  trials in parallel. However, each trail only benefits from the information
    ///  gained in completed trials. That means that a trial does not get access to
    ///  the results of trials running at the same time, which could reduce the
    ///  quality of the overall optimization.
    ///
    ///  Each trial will use the same scale tier and machine types.
    ///
    ///  Defaults to one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxParallelTrials {
      get { return maxParallelTrials_; }
      set {
        maxParallelTrials_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HyperparameterSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HyperparameterSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Goal != other.Goal) return false;
      if(!params_.Equals(other.params_)) return false;
      if (MaxTrials != other.MaxTrials) return false;
      if (MaxParallelTrials != other.MaxParallelTrials) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Goal != 0) hash ^= Goal.GetHashCode();
      hash ^= params_.GetHashCode();
      if (MaxTrials != 0) hash ^= MaxTrials.GetHashCode();
      if (MaxParallelTrials != 0) hash ^= MaxParallelTrials.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Goal != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Goal);
      }
      params_.WriteTo(output, _repeated_params_codec);
      if (MaxTrials != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxTrials);
      }
      if (MaxParallelTrials != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxParallelTrials);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Goal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Goal);
      }
      size += params_.CalculateSize(_repeated_params_codec);
      if (MaxTrials != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxTrials);
      }
      if (MaxParallelTrials != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxParallelTrials);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HyperparameterSpec other) {
      if (other == null) {
        return;
      }
      if (other.Goal != 0) {
        Goal = other.Goal;
      }
      params_.Add(other.params_);
      if (other.MaxTrials != 0) {
        MaxTrials = other.MaxTrials;
      }
      if (other.MaxParallelTrials != 0) {
        MaxParallelTrials = other.MaxParallelTrials;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            goal_ = (global::Google.Cloud.Ml.V1Beta1.HyperparameterSpec.Types.GoalType) input.ReadEnum();
            break;
          }
          case 18: {
            params_.AddEntriesFrom(input, _repeated_params_codec);
            break;
          }
          case 24: {
            MaxTrials = input.ReadInt32();
            break;
          }
          case 32: {
            MaxParallelTrials = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the HyperparameterSpec message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///  The available types of optimization goals.
      /// </summary>
      public enum GoalType {
        /// <summary>
        ///  Goal Type will default to maximize.
        /// </summary>
        [pbr::OriginalName("GOAL_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        ///  Maximize the goal metric.
        /// </summary>
        [pbr::OriginalName("MAXIMIZE")] Maximize = 1,
        /// <summary>
        ///  Minimize the goal metric.
        /// </summary>
        [pbr::OriginalName("MINIMIZE")] Minimize = 2,
      }

    }
    #endregion

  }

  /// <summary>
  ///  Represents a single hyperparameter to optimize.
  /// </summary>
  public sealed partial class ParameterSpec : pb::IMessage<ParameterSpec> {
    private static readonly pb::MessageParser<ParameterSpec> _parser = new pb::MessageParser<ParameterSpec>(() => new ParameterSpec());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParameterSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterSpec(ParameterSpec other) : this() {
      parameterName_ = other.parameterName_;
      type_ = other.type_;
      minValue_ = other.minValue_;
      maxValue_ = other.maxValue_;
      categoricalValues_ = other.categoricalValues_.Clone();
      discreteValues_ = other.discreteValues_.Clone();
      scaleType_ = other.scaleType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterSpec Clone() {
      return new ParameterSpec(this);
    }

    /// <summary>Field number for the "parameter_name" field.</summary>
    public const int ParameterNameFieldNumber = 1;
    private string parameterName_ = "";
    /// <summary>
    ///  Required. The parameter name must be unique amongst all ParameterConfigs in
    ///  a HyperparameterSpec message. E.g., "learning_rate".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParameterName {
      get { return parameterName_; }
      set {
        parameterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::Google.Cloud.Ml.V1Beta1.ParameterSpec.Types.ParameterType type_ = 0;
    /// <summary>
    ///  Required. The type of the parameter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.ParameterSpec.Types.ParameterType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "min_value" field.</summary>
    public const int MinValueFieldNumber = 2;
    private double minValue_;
    /// <summary>
    ///  Required if type is `DOUBLE` or `INTEGER`. This field
    ///  should be unset if type is `CATEGORICAL`. This value should be integers if
    ///  type is INTEGER.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MinValue {
      get { return minValue_; }
      set {
        minValue_ = value;
      }
    }

    /// <summary>Field number for the "max_value" field.</summary>
    public const int MaxValueFieldNumber = 3;
    private double maxValue_;
    /// <summary>
    ///  Required if typeis `DOUBLE` or `INTEGER`. This field
    ///  should be unset if type is `CATEGORICAL`. This value should be integers if
    ///  type is `INTEGER`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MaxValue {
      get { return maxValue_; }
      set {
        maxValue_ = value;
      }
    }

    /// <summary>Field number for the "categorical_values" field.</summary>
    public const int CategoricalValuesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_categoricalValues_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> categoricalValues_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  Required if type is `CATEGORICAL`. The list of possible categories.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CategoricalValues {
      get { return categoricalValues_; }
    }

    /// <summary>Field number for the "discrete_values" field.</summary>
    public const int DiscreteValuesFieldNumber = 6;
    private static readonly pb::FieldCodec<double> _repeated_discreteValues_codec
        = pb::FieldCodec.ForDouble(50);
    private readonly pbc::RepeatedField<double> discreteValues_ = new pbc::RepeatedField<double>();
    /// <summary>
    ///  Required if type is `DISCRETE`.
    ///  A list of feasible points.
    ///  The list should be in strictly increasing order. For instance, this
    ///  parameter might have possible settings of 1.5, 2.5, and 4.0. This list
    ///  should not contain more than 1,000 values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> DiscreteValues {
      get { return discreteValues_; }
    }

    /// <summary>Field number for the "scale_type" field.</summary>
    public const int ScaleTypeFieldNumber = 7;
    private global::Google.Cloud.Ml.V1Beta1.ParameterSpec.Types.ScaleType scaleType_ = 0;
    /// <summary>
    ///  Optional. How the parameter should be scaled to the hypercube.
    ///  Leave unset for categorical parameters.
    ///  Some kind of scaling is strongly recommended for real or integral
    ///  parameters (e.g., `UNIT_LINEAR_SCALE`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.ParameterSpec.Types.ScaleType ScaleType {
      get { return scaleType_; }
      set {
        scaleType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParameterSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParameterSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParameterName != other.ParameterName) return false;
      if (Type != other.Type) return false;
      if (MinValue != other.MinValue) return false;
      if (MaxValue != other.MaxValue) return false;
      if(!categoricalValues_.Equals(other.categoricalValues_)) return false;
      if(!discreteValues_.Equals(other.discreteValues_)) return false;
      if (ScaleType != other.ScaleType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParameterName.Length != 0) hash ^= ParameterName.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (MinValue != 0D) hash ^= MinValue.GetHashCode();
      if (MaxValue != 0D) hash ^= MaxValue.GetHashCode();
      hash ^= categoricalValues_.GetHashCode();
      hash ^= discreteValues_.GetHashCode();
      if (ScaleType != 0) hash ^= ScaleType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParameterName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParameterName);
      }
      if (MinValue != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(MinValue);
      }
      if (MaxValue != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MaxValue);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      categoricalValues_.WriteTo(output, _repeated_categoricalValues_codec);
      discreteValues_.WriteTo(output, _repeated_discreteValues_codec);
      if (ScaleType != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ScaleType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParameterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParameterName);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (MinValue != 0D) {
        size += 1 + 8;
      }
      if (MaxValue != 0D) {
        size += 1 + 8;
      }
      size += categoricalValues_.CalculateSize(_repeated_categoricalValues_codec);
      size += discreteValues_.CalculateSize(_repeated_discreteValues_codec);
      if (ScaleType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ScaleType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParameterSpec other) {
      if (other == null) {
        return;
      }
      if (other.ParameterName.Length != 0) {
        ParameterName = other.ParameterName;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.MinValue != 0D) {
        MinValue = other.MinValue;
      }
      if (other.MaxValue != 0D) {
        MaxValue = other.MaxValue;
      }
      categoricalValues_.Add(other.categoricalValues_);
      discreteValues_.Add(other.discreteValues_);
      if (other.ScaleType != 0) {
        ScaleType = other.ScaleType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ParameterName = input.ReadString();
            break;
          }
          case 17: {
            MinValue = input.ReadDouble();
            break;
          }
          case 25: {
            MaxValue = input.ReadDouble();
            break;
          }
          case 32: {
            type_ = (global::Google.Cloud.Ml.V1Beta1.ParameterSpec.Types.ParameterType) input.ReadEnum();
            break;
          }
          case 42: {
            categoricalValues_.AddEntriesFrom(input, _repeated_categoricalValues_codec);
            break;
          }
          case 50:
          case 49: {
            discreteValues_.AddEntriesFrom(input, _repeated_discreteValues_codec);
            break;
          }
          case 56: {
            scaleType_ = (global::Google.Cloud.Ml.V1Beta1.ParameterSpec.Types.ScaleType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ParameterSpec message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///  The type of the parameter.
      /// </summary>
      public enum ParameterType {
        /// <summary>
        ///  You must specify a valid type. Using this unspecified type will result in
        ///  an error.
        /// </summary>
        [pbr::OriginalName("PARAMETER_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        ///  Type for real-valued parameters.
        /// </summary>
        [pbr::OriginalName("DOUBLE")] Double = 1,
        /// <summary>
        ///  Type for integral parameters.
        /// </summary>
        [pbr::OriginalName("INTEGER")] Integer = 2,
        /// <summary>
        ///  The parameter is categorical, with a value chosen from the categories
        ///  field.
        /// </summary>
        [pbr::OriginalName("CATEGORICAL")] Categorical = 3,
        /// <summary>
        ///  The parameter is real valued, with a fixed set of feasible points. If
        ///  `type==DISCRETE`, feasible_points must be provided, and
        ///  {`min_value`, `max_value`} will be ignored.
        /// </summary>
        [pbr::OriginalName("DISCRETE")] Discrete = 4,
      }

      /// <summary>
      ///  The type of scaling that should be applied to this parameter.
      /// </summary>
      public enum ScaleType {
        /// <summary>
        ///  By default, no scaling is applied.
        /// </summary>
        [pbr::OriginalName("NONE")] None = 0,
        /// <summary>
        ///  Scales the feasible space to (0, 1) linearly.
        /// </summary>
        [pbr::OriginalName("UNIT_LINEAR_SCALE")] UnitLinearScale = 1,
        /// <summary>
        ///  Scales the feasible space logarithmically to (0, 1). The entire feasible
        ///  space must be strictly positive.
        /// </summary>
        [pbr::OriginalName("UNIT_LOG_SCALE")] UnitLogScale = 2,
        /// <summary>
        ///  Scales the feasible space "reverse" logarithmically to (0, 1). The result
        ///  is that values close to the top of the feasible space are spread out more
        ///  than points near the bottom. The entire feasible space must be strictly
        ///  positive.
        /// </summary>
        [pbr::OriginalName("UNIT_REVERSE_LOG_SCALE")] UnitReverseLogScale = 3,
      }

    }
    #endregion

  }

  /// <summary>
  ///  Represents the result of a single hyperparameter tuning trial from a
  ///  training job. The TrainingOutput object that is returned on successful
  ///  completion of a training job with hyperparameter tuning includes a list
  ///  of HyperparameterOutput objects, one for each successful trial.
  /// </summary>
  public sealed partial class HyperparameterOutput : pb::IMessage<HyperparameterOutput> {
    private static readonly pb::MessageParser<HyperparameterOutput> _parser = new pb::MessageParser<HyperparameterOutput>(() => new HyperparameterOutput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HyperparameterOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HyperparameterOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HyperparameterOutput(HyperparameterOutput other) : this() {
      trialId_ = other.trialId_;
      hyperparameters_ = other.hyperparameters_.Clone();
      FinalMetric = other.finalMetric_ != null ? other.FinalMetric.Clone() : null;
      allMetrics_ = other.allMetrics_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HyperparameterOutput Clone() {
      return new HyperparameterOutput(this);
    }

    /// <summary>Field number for the "trial_id" field.</summary>
    public const int TrialIdFieldNumber = 1;
    private string trialId_ = "";
    /// <summary>
    ///  The trial id for these results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrialId {
      get { return trialId_; }
      set {
        trialId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hyperparameters" field.</summary>
    public const int HyperparametersFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_hyperparameters_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> hyperparameters_ = new pbc::MapField<string, string>();
    /// <summary>
    ///  The hyperparameters given to this trial.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Hyperparameters {
      get { return hyperparameters_; }
    }

    /// <summary>Field number for the "final_metric" field.</summary>
    public const int FinalMetricFieldNumber = 3;
    private global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Types.HyperparameterMetric finalMetric_;
    /// <summary>
    ///  The final objective metric seen for this trial.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Types.HyperparameterMetric FinalMetric {
      get { return finalMetric_; }
      set {
        finalMetric_ = value;
      }
    }

    /// <summary>Field number for the "all_metrics" field.</summary>
    public const int AllMetricsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Types.HyperparameterMetric> _repeated_allMetrics_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Types.HyperparameterMetric.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Types.HyperparameterMetric> allMetrics_ = new pbc::RepeatedField<global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Types.HyperparameterMetric>();
    /// <summary>
    ///  All recorded object metrics for this trial.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Types.HyperparameterMetric> AllMetrics {
      get { return allMetrics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HyperparameterOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HyperparameterOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TrialId != other.TrialId) return false;
      if (!Hyperparameters.Equals(other.Hyperparameters)) return false;
      if (!object.Equals(FinalMetric, other.FinalMetric)) return false;
      if(!allMetrics_.Equals(other.allMetrics_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TrialId.Length != 0) hash ^= TrialId.GetHashCode();
      hash ^= Hyperparameters.GetHashCode();
      if (finalMetric_ != null) hash ^= FinalMetric.GetHashCode();
      hash ^= allMetrics_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TrialId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrialId);
      }
      hyperparameters_.WriteTo(output, _map_hyperparameters_codec);
      if (finalMetric_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FinalMetric);
      }
      allMetrics_.WriteTo(output, _repeated_allMetrics_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TrialId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrialId);
      }
      size += hyperparameters_.CalculateSize(_map_hyperparameters_codec);
      if (finalMetric_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinalMetric);
      }
      size += allMetrics_.CalculateSize(_repeated_allMetrics_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HyperparameterOutput other) {
      if (other == null) {
        return;
      }
      if (other.TrialId.Length != 0) {
        TrialId = other.TrialId;
      }
      hyperparameters_.Add(other.hyperparameters_);
      if (other.finalMetric_ != null) {
        if (finalMetric_ == null) {
          finalMetric_ = new global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Types.HyperparameterMetric();
        }
        FinalMetric.MergeFrom(other.FinalMetric);
      }
      allMetrics_.Add(other.allMetrics_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            TrialId = input.ReadString();
            break;
          }
          case 18: {
            hyperparameters_.AddEntriesFrom(input, _map_hyperparameters_codec);
            break;
          }
          case 26: {
            if (finalMetric_ == null) {
              finalMetric_ = new global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Types.HyperparameterMetric();
            }
            input.ReadMessage(finalMetric_);
            break;
          }
          case 34: {
            allMetrics_.AddEntriesFrom(input, _repeated_allMetrics_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the HyperparameterOutput message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///  An observed value of a metric.
      /// </summary>
      public sealed partial class HyperparameterMetric : pb::IMessage<HyperparameterMetric> {
        private static readonly pb::MessageParser<HyperparameterMetric> _parser = new pb::MessageParser<HyperparameterMetric>(() => new HyperparameterMetric());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HyperparameterMetric> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HyperparameterMetric() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HyperparameterMetric(HyperparameterMetric other) : this() {
          trainingStep_ = other.trainingStep_;
          objectiveValue_ = other.objectiveValue_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HyperparameterMetric Clone() {
          return new HyperparameterMetric(this);
        }

        /// <summary>Field number for the "training_step" field.</summary>
        public const int TrainingStepFieldNumber = 1;
        private long trainingStep_;
        /// <summary>
        ///  The global training step for this metric.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TrainingStep {
          get { return trainingStep_; }
          set {
            trainingStep_ = value;
          }
        }

        /// <summary>Field number for the "objective_value" field.</summary>
        public const int ObjectiveValueFieldNumber = 2;
        private double objectiveValue_;
        /// <summary>
        ///  The objective value at this training step.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double ObjectiveValue {
          get { return objectiveValue_; }
          set {
            objectiveValue_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as HyperparameterMetric);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HyperparameterMetric other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TrainingStep != other.TrainingStep) return false;
          if (ObjectiveValue != other.ObjectiveValue) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TrainingStep != 0L) hash ^= TrainingStep.GetHashCode();
          if (ObjectiveValue != 0D) hash ^= ObjectiveValue.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TrainingStep != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(TrainingStep);
          }
          if (ObjectiveValue != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(ObjectiveValue);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TrainingStep != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TrainingStep);
          }
          if (ObjectiveValue != 0D) {
            size += 1 + 8;
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HyperparameterMetric other) {
          if (other == null) {
            return;
          }
          if (other.TrainingStep != 0L) {
            TrainingStep = other.TrainingStep;
          }
          if (other.ObjectiveValue != 0D) {
            ObjectiveValue = other.ObjectiveValue;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                TrainingStep = input.ReadInt64();
                break;
              }
              case 17: {
                ObjectiveValue = input.ReadDouble();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  ///  Represents results of a training job.
  /// </summary>
  public sealed partial class TrainingOutput : pb::IMessage<TrainingOutput> {
    private static readonly pb::MessageParser<TrainingOutput> _parser = new pb::MessageParser<TrainingOutput>(() => new TrainingOutput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainingOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainingOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainingOutput(TrainingOutput other) : this() {
      completedTrialCount_ = other.completedTrialCount_;
      trials_ = other.trials_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainingOutput Clone() {
      return new TrainingOutput(this);
    }

    /// <summary>Field number for the "completed_trial_count" field.</summary>
    public const int CompletedTrialCountFieldNumber = 1;
    private long completedTrialCount_;
    /// <summary>
    ///  The number of hyperparameter tuning trials that completed successfully.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CompletedTrialCount {
      get { return completedTrialCount_; }
      set {
        completedTrialCount_ = value;
      }
    }

    /// <summary>Field number for the "trials" field.</summary>
    public const int TrialsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput> _repeated_trials_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput> trials_ = new pbc::RepeatedField<global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput>();
    /// <summary>
    ///  Results for individual Hyperparameter trials.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Ml.V1Beta1.HyperparameterOutput> Trials {
      get { return trials_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainingOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainingOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompletedTrialCount != other.CompletedTrialCount) return false;
      if(!trials_.Equals(other.trials_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompletedTrialCount != 0L) hash ^= CompletedTrialCount.GetHashCode();
      hash ^= trials_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompletedTrialCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CompletedTrialCount);
      }
      trials_.WriteTo(output, _repeated_trials_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompletedTrialCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CompletedTrialCount);
      }
      size += trials_.CalculateSize(_repeated_trials_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainingOutput other) {
      if (other == null) {
        return;
      }
      if (other.CompletedTrialCount != 0L) {
        CompletedTrialCount = other.CompletedTrialCount;
      }
      trials_.Add(other.trials_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CompletedTrialCount = input.ReadInt64();
            break;
          }
          case 18: {
            trials_.AddEntriesFrom(input, _repeated_trials_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Represents input parameters for a prediction job.
  /// </summary>
  public sealed partial class PredictionInput : pb::IMessage<PredictionInput> {
    private static readonly pb::MessageParser<PredictionInput> _parser = new pb::MessageParser<PredictionInput>(() => new PredictionInput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionInput(PredictionInput other) : this() {
      dataFormat_ = other.dataFormat_;
      inputPaths_ = other.inputPaths_.Clone();
      outputPath_ = other.outputPath_;
      maxWorkerCount_ = other.maxWorkerCount_;
      region_ = other.region_;
      switch (other.ModelVersionCase) {
        case ModelVersionOneofCase.ModelName:
          ModelName = other.ModelName;
          break;
        case ModelVersionOneofCase.VersionName:
          VersionName = other.VersionName;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionInput Clone() {
      return new PredictionInput(this);
    }

    /// <summary>Field number for the "model_name" field.</summary>
    public const int ModelNameFieldNumber = 1;
    /// <summary>
    ///  Use this field if you want to use the default version for the specified
    ///  model. The string must use the following format:
    ///
    ///  `"project/&lt;var>[YOUR_PROJECT]&lt;/var>/models/&lt;var>[YOUR_MODEL]&lt;/var>"`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelVersionCase_ == ModelVersionOneofCase.ModelName ? (string) modelVersion_ : ""; }
      set {
        modelVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        modelVersionCase_ = ModelVersionOneofCase.ModelName;
      }
    }

    /// <summary>Field number for the "version_name" field.</summary>
    public const int VersionNameFieldNumber = 2;
    /// <summary>
    ///  Use this field if you want to specify a version of the model to use. The
    ///  string is formatted the same way as `model_version`, with the addition
    ///  of the version information:
    ///
    ///  `"project/&lt;var>[YOUR_PROJECT]&lt;/var>/models/&lt;var>YOUR_MODEL/versions/&lt;var>[YOUR_VERSION]&lt;/var>"`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return modelVersionCase_ == ModelVersionOneofCase.VersionName ? (string) modelVersion_ : ""; }
      set {
        modelVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        modelVersionCase_ = ModelVersionOneofCase.VersionName;
      }
    }

    /// <summary>Field number for the "data_format" field.</summary>
    public const int DataFormatFieldNumber = 3;
    private global::Google.Cloud.Ml.V1Beta1.PredictionInput.Types.DataFormat dataFormat_ = 0;
    /// <summary>
    ///  Required. The format of the input data files.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.PredictionInput.Types.DataFormat DataFormat {
      get { return dataFormat_; }
      set {
        dataFormat_ = value;
      }
    }

    /// <summary>Field number for the "input_paths" field.</summary>
    public const int InputPathsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_inputPaths_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> inputPaths_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  Required. The Google Cloud Storage location of the input data files.
    ///  May contain wildcards.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InputPaths {
      get { return inputPaths_; }
    }

    /// <summary>Field number for the "output_path" field.</summary>
    public const int OutputPathFieldNumber = 5;
    private string outputPath_ = "";
    /// <summary>
    ///  Required. The output Google Cloud Storage location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputPath {
      get { return outputPath_; }
      set {
        outputPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_worker_count" field.</summary>
    public const int MaxWorkerCountFieldNumber = 6;
    private long maxWorkerCount_;
    /// <summary>
    ///  Optional. The maximum amount of workers to be used for parallel processing.
    ///  Defaults to 10.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxWorkerCount {
      get { return maxWorkerCount_; }
      set {
        maxWorkerCount_ = value;
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 7;
    private string region_ = "";
    /// <summary>
    ///  Required. The Google Compute Engine region to run the prediction job in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object modelVersion_;
    /// <summary>Enum of possible cases for the "model_version" oneof.</summary>
    public enum ModelVersionOneofCase {
      None = 0,
      ModelName = 1,
      VersionName = 2,
    }
    private ModelVersionOneofCase modelVersionCase_ = ModelVersionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelVersionOneofCase ModelVersionCase {
      get { return modelVersionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearModelVersion() {
      modelVersionCase_ = ModelVersionOneofCase.None;
      modelVersion_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelName != other.ModelName) return false;
      if (VersionName != other.VersionName) return false;
      if (DataFormat != other.DataFormat) return false;
      if(!inputPaths_.Equals(other.inputPaths_)) return false;
      if (OutputPath != other.OutputPath) return false;
      if (MaxWorkerCount != other.MaxWorkerCount) return false;
      if (Region != other.Region) return false;
      if (ModelVersionCase != other.ModelVersionCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (modelVersionCase_ == ModelVersionOneofCase.ModelName) hash ^= ModelName.GetHashCode();
      if (modelVersionCase_ == ModelVersionOneofCase.VersionName) hash ^= VersionName.GetHashCode();
      if (DataFormat != 0) hash ^= DataFormat.GetHashCode();
      hash ^= inputPaths_.GetHashCode();
      if (OutputPath.Length != 0) hash ^= OutputPath.GetHashCode();
      if (MaxWorkerCount != 0L) hash ^= MaxWorkerCount.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      hash ^= (int) modelVersionCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (modelVersionCase_ == ModelVersionOneofCase.ModelName) {
        output.WriteRawTag(10);
        output.WriteString(ModelName);
      }
      if (modelVersionCase_ == ModelVersionOneofCase.VersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (DataFormat != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) DataFormat);
      }
      inputPaths_.WriteTo(output, _repeated_inputPaths_codec);
      if (OutputPath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OutputPath);
      }
      if (MaxWorkerCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(MaxWorkerCount);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Region);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (modelVersionCase_ == ModelVersionOneofCase.ModelName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (modelVersionCase_ == ModelVersionOneofCase.VersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (DataFormat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataFormat);
      }
      size += inputPaths_.CalculateSize(_repeated_inputPaths_codec);
      if (OutputPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputPath);
      }
      if (MaxWorkerCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxWorkerCount);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionInput other) {
      if (other == null) {
        return;
      }
      if (other.DataFormat != 0) {
        DataFormat = other.DataFormat;
      }
      inputPaths_.Add(other.inputPaths_);
      if (other.OutputPath.Length != 0) {
        OutputPath = other.OutputPath;
      }
      if (other.MaxWorkerCount != 0L) {
        MaxWorkerCount = other.MaxWorkerCount;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      switch (other.ModelVersionCase) {
        case ModelVersionOneofCase.ModelName:
          ModelName = other.ModelName;
          break;
        case ModelVersionOneofCase.VersionName:
          VersionName = other.VersionName;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ModelName = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 24: {
            dataFormat_ = (global::Google.Cloud.Ml.V1Beta1.PredictionInput.Types.DataFormat) input.ReadEnum();
            break;
          }
          case 34: {
            inputPaths_.AddEntriesFrom(input, _repeated_inputPaths_codec);
            break;
          }
          case 42: {
            OutputPath = input.ReadString();
            break;
          }
          case 48: {
            MaxWorkerCount = input.ReadInt64();
            break;
          }
          case 58: {
            Region = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PredictionInput message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///  The format used to separate data instances in the source files.
      /// </summary>
      public enum DataFormat {
        /// <summary>
        ///  Unspecified format.
        /// </summary>
        [pbr::OriginalName("DATA_FORMAT_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        ///  The source file is a text file with instances separated by the
        ///  new-line character.
        /// </summary>
        [pbr::OriginalName("TEXT")] Text = 1,
        /// <summary>
        ///  The source file is a TFRecord file.
        /// </summary>
        [pbr::OriginalName("TF_RECORD")] TfRecord = 2,
        /// <summary>
        ///  The source file is a GZIP-compressed TFRecord file.
        /// </summary>
        [pbr::OriginalName("TF_RECORD_GZIP")] TfRecordGzip = 3,
      }

    }
    #endregion

  }

  /// <summary>
  ///  Represents results of a prediction job.
  /// </summary>
  public sealed partial class PredictionOutput : pb::IMessage<PredictionOutput> {
    private static readonly pb::MessageParser<PredictionOutput> _parser = new pb::MessageParser<PredictionOutput>(() => new PredictionOutput());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictionOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionOutput(PredictionOutput other) : this() {
      outputPath_ = other.outputPath_;
      predictionCount_ = other.predictionCount_;
      errorCount_ = other.errorCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictionOutput Clone() {
      return new PredictionOutput(this);
    }

    /// <summary>Field number for the "output_path" field.</summary>
    public const int OutputPathFieldNumber = 1;
    private string outputPath_ = "";
    /// <summary>
    ///  The output Google Cloud Storage location provided at the job creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputPath {
      get { return outputPath_; }
      set {
        outputPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prediction_count" field.</summary>
    public const int PredictionCountFieldNumber = 2;
    private long predictionCount_;
    /// <summary>
    ///  The number of generated predictions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PredictionCount {
      get { return predictionCount_; }
      set {
        predictionCount_ = value;
      }
    }

    /// <summary>Field number for the "error_count" field.</summary>
    public const int ErrorCountFieldNumber = 3;
    private long errorCount_;
    /// <summary>
    ///  The number of data instances which resulted in errors.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ErrorCount {
      get { return errorCount_; }
      set {
        errorCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictionOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictionOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OutputPath != other.OutputPath) return false;
      if (PredictionCount != other.PredictionCount) return false;
      if (ErrorCount != other.ErrorCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OutputPath.Length != 0) hash ^= OutputPath.GetHashCode();
      if (PredictionCount != 0L) hash ^= PredictionCount.GetHashCode();
      if (ErrorCount != 0L) hash ^= ErrorCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OutputPath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OutputPath);
      }
      if (PredictionCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PredictionCount);
      }
      if (ErrorCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ErrorCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OutputPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputPath);
      }
      if (PredictionCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PredictionCount);
      }
      if (ErrorCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ErrorCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictionOutput other) {
      if (other == null) {
        return;
      }
      if (other.OutputPath.Length != 0) {
        OutputPath = other.OutputPath;
      }
      if (other.PredictionCount != 0L) {
        PredictionCount = other.PredictionCount;
      }
      if (other.ErrorCount != 0L) {
        ErrorCount = other.ErrorCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            OutputPath = input.ReadString();
            break;
          }
          case 16: {
            PredictionCount = input.ReadInt64();
            break;
          }
          case 24: {
            ErrorCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Represents a training or prediction job.
  /// </summary>
  public sealed partial class Job : pb::IMessage<Job> {
    private static readonly pb::MessageParser<Job> _parser = new pb::MessageParser<Job>(() => new Job());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Job> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Job() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Job(Job other) : this() {
      jobId_ = other.jobId_;
      CreateTime = other.createTime_ != null ? other.CreateTime.Clone() : null;
      StartTime = other.startTime_ != null ? other.StartTime.Clone() : null;
      EndTime = other.endTime_ != null ? other.EndTime.Clone() : null;
      state_ = other.state_;
      errorMessage_ = other.errorMessage_;
      switch (other.InputCase) {
        case InputOneofCase.TrainingInput:
          TrainingInput = other.TrainingInput.Clone();
          break;
        case InputOneofCase.PredictionInput:
          PredictionInput = other.PredictionInput.Clone();
          break;
      }

      switch (other.OutputCase) {
        case OutputOneofCase.TrainingOutput:
          TrainingOutput = other.TrainingOutput.Clone();
          break;
        case OutputOneofCase.PredictionOutput:
          PredictionOutput = other.PredictionOutput.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Job Clone() {
      return new Job(this);
    }

    /// <summary>Field number for the "job_id" field.</summary>
    public const int JobIdFieldNumber = 1;
    private string jobId_ = "";
    /// <summary>
    ///  Required. The user-specified id of the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "training_input" field.</summary>
    public const int TrainingInputFieldNumber = 2;
    /// <summary>
    ///  Input parameters to create a training job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.TrainingInput TrainingInput {
      get { return inputCase_ == InputOneofCase.TrainingInput ? (global::Google.Cloud.Ml.V1Beta1.TrainingInput) input_ : null; }
      set {
        input_ = value;
        inputCase_ = value == null ? InputOneofCase.None : InputOneofCase.TrainingInput;
      }
    }

    /// <summary>Field number for the "prediction_input" field.</summary>
    public const int PredictionInputFieldNumber = 3;
    /// <summary>
    ///  Input parameters to create a prediction job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.PredictionInput PredictionInput {
      get { return inputCase_ == InputOneofCase.PredictionInput ? (global::Google.Cloud.Ml.V1Beta1.PredictionInput) input_ : null; }
      set {
        input_ = value;
        inputCase_ = value == null ? InputOneofCase.None : InputOneofCase.PredictionInput;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    ///  Output only. When the job was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    ///  Output only. When the job processing was started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    ///  Output only. When the job processing was completed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 7;
    private global::Google.Cloud.Ml.V1Beta1.Job.Types.State state_ = 0;
    /// <summary>
    ///  Output only. The detailed state of a job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.Job.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 8;
    private string errorMessage_ = "";
    /// <summary>
    ///  Output only. The details of a failure or a cancellation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "training_output" field.</summary>
    public const int TrainingOutputFieldNumber = 9;
    /// <summary>
    ///  The current training job result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.TrainingOutput TrainingOutput {
      get { return outputCase_ == OutputOneofCase.TrainingOutput ? (global::Google.Cloud.Ml.V1Beta1.TrainingOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.TrainingOutput;
      }
    }

    /// <summary>Field number for the "prediction_output" field.</summary>
    public const int PredictionOutputFieldNumber = 10;
    /// <summary>
    ///  The current prediction job result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.PredictionOutput PredictionOutput {
      get { return outputCase_ == OutputOneofCase.PredictionOutput ? (global::Google.Cloud.Ml.V1Beta1.PredictionOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.PredictionOutput;
      }
    }

    private object input_;
    /// <summary>Enum of possible cases for the "input" oneof.</summary>
    public enum InputOneofCase {
      None = 0,
      TrainingInput = 2,
      PredictionInput = 3,
    }
    private InputOneofCase inputCase_ = InputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputOneofCase InputCase {
      get { return inputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInput() {
      inputCase_ = InputOneofCase.None;
      input_ = null;
    }

    private object output_;
    /// <summary>Enum of possible cases for the "output" oneof.</summary>
    public enum OutputOneofCase {
      None = 0,
      TrainingOutput = 9,
      PredictionOutput = 10,
    }
    private OutputOneofCase outputCase_ = OutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputOneofCase OutputCase {
      get { return outputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOutput() {
      outputCase_ = OutputOneofCase.None;
      output_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Job);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Job other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobId != other.JobId) return false;
      if (!object.Equals(TrainingInput, other.TrainingInput)) return false;
      if (!object.Equals(PredictionInput, other.PredictionInput)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (State != other.State) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (!object.Equals(TrainingOutput, other.TrainingOutput)) return false;
      if (!object.Equals(PredictionOutput, other.PredictionOutput)) return false;
      if (InputCase != other.InputCase) return false;
      if (OutputCase != other.OutputCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (inputCase_ == InputOneofCase.TrainingInput) hash ^= TrainingInput.GetHashCode();
      if (inputCase_ == InputOneofCase.PredictionInput) hash ^= PredictionInput.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (outputCase_ == OutputOneofCase.TrainingOutput) hash ^= TrainingOutput.GetHashCode();
      if (outputCase_ == OutputOneofCase.PredictionOutput) hash ^= PredictionOutput.GetHashCode();
      hash ^= (int) inputCase_;
      hash ^= (int) outputCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JobId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JobId);
      }
      if (inputCase_ == InputOneofCase.TrainingInput) {
        output.WriteRawTag(18);
        output.WriteMessage(TrainingInput);
      }
      if (inputCase_ == InputOneofCase.PredictionInput) {
        output.WriteRawTag(26);
        output.WriteMessage(PredictionInput);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(EndTime);
      }
      if (State != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) State);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ErrorMessage);
      }
      if (outputCase_ == OutputOneofCase.TrainingOutput) {
        output.WriteRawTag(74);
        output.WriteMessage(TrainingOutput);
      }
      if (outputCase_ == OutputOneofCase.PredictionOutput) {
        output.WriteRawTag(82);
        output.WriteMessage(PredictionOutput);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobId);
      }
      if (inputCase_ == InputOneofCase.TrainingInput) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrainingInput);
      }
      if (inputCase_ == InputOneofCase.PredictionInput) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PredictionInput);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (outputCase_ == OutputOneofCase.TrainingOutput) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrainingOutput);
      }
      if (outputCase_ == OutputOneofCase.PredictionOutput) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PredictionOutput);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Job other) {
      if (other == null) {
        return;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          endTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      switch (other.InputCase) {
        case InputOneofCase.TrainingInput:
          TrainingInput = other.TrainingInput;
          break;
        case InputOneofCase.PredictionInput:
          PredictionInput = other.PredictionInput;
          break;
      }

      switch (other.OutputCase) {
        case OutputOneofCase.TrainingOutput:
          TrainingOutput = other.TrainingOutput;
          break;
        case OutputOneofCase.PredictionOutput:
          PredictionOutput = other.PredictionOutput;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            JobId = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.Ml.V1Beta1.TrainingInput subBuilder = new global::Google.Cloud.Ml.V1Beta1.TrainingInput();
            if (inputCase_ == InputOneofCase.TrainingInput) {
              subBuilder.MergeFrom(TrainingInput);
            }
            input.ReadMessage(subBuilder);
            TrainingInput = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Ml.V1Beta1.PredictionInput subBuilder = new global::Google.Cloud.Ml.V1Beta1.PredictionInput();
            if (inputCase_ == InputOneofCase.PredictionInput) {
              subBuilder.MergeFrom(PredictionInput);
            }
            input.ReadMessage(subBuilder);
            PredictionInput = subBuilder;
            break;
          }
          case 34: {
            if (createTime_ == null) {
              createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(createTime_);
            break;
          }
          case 42: {
            if (startTime_ == null) {
              startTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(startTime_);
            break;
          }
          case 50: {
            if (endTime_ == null) {
              endTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(endTime_);
            break;
          }
          case 56: {
            state_ = (global::Google.Cloud.Ml.V1Beta1.Job.Types.State) input.ReadEnum();
            break;
          }
          case 66: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 74: {
            global::Google.Cloud.Ml.V1Beta1.TrainingOutput subBuilder = new global::Google.Cloud.Ml.V1Beta1.TrainingOutput();
            if (outputCase_ == OutputOneofCase.TrainingOutput) {
              subBuilder.MergeFrom(TrainingOutput);
            }
            input.ReadMessage(subBuilder);
            TrainingOutput = subBuilder;
            break;
          }
          case 82: {
            global::Google.Cloud.Ml.V1Beta1.PredictionOutput subBuilder = new global::Google.Cloud.Ml.V1Beta1.PredictionOutput();
            if (outputCase_ == OutputOneofCase.PredictionOutput) {
              subBuilder.MergeFrom(PredictionOutput);
            }
            input.ReadMessage(subBuilder);
            PredictionOutput = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Job message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///  Describes the job state.
      /// </summary>
      public enum State {
        /// <summary>
        ///  The job state is unspecified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        ///  The job has been just created and processing has not yet begun.
        /// </summary>
        [pbr::OriginalName("QUEUED")] Queued = 1,
        /// <summary>
        ///  The service is preparing to run the job.
        /// </summary>
        [pbr::OriginalName("PREPARING")] Preparing = 2,
        /// <summary>
        ///  The job is in progress.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 3,
        /// <summary>
        ///  The job completed successfully.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 4,
        /// <summary>
        ///  The job failed.
        ///  `error_message` should contain the details of the failure.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 5,
        /// <summary>
        ///  The job is being cancelled.
        ///  `error_message` should describe the reason for the cancellation.
        /// </summary>
        [pbr::OriginalName("CANCELLING")] Cancelling = 6,
        /// <summary>
        ///  The job has been cancelled.
        ///  `error_message` should describe the reason for the cancellation.
        /// </summary>
        [pbr::OriginalName("CANCELLED")] Cancelled = 7,
      }

    }
    #endregion

  }

  /// <summary>
  ///  Request message for the CreateJob method.
  /// </summary>
  public sealed partial class CreateJobRequest : pb::IMessage<CreateJobRequest> {
    private static readonly pb::MessageParser<CreateJobRequest> _parser = new pb::MessageParser<CreateJobRequest>(() => new CreateJobRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateJobRequest(CreateJobRequest other) : this() {
      parent_ = other.parent_;
      Job = other.job_ != null ? other.Job.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateJobRequest Clone() {
      return new CreateJobRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    ///  Required. The project name.
    ///
    ///  Authorization: requires `Editor` role on the specified project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "job" field.</summary>
    public const int JobFieldNumber = 2;
    private global::Google.Cloud.Ml.V1Beta1.Job job_;
    /// <summary>
    ///  Required. The job to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Ml.V1Beta1.Job Job {
      get { return job_; }
      set {
        job_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(Job, other.Job)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (job_ != null) hash ^= Job.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (job_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Job);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (job_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Job);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.job_ != null) {
        if (job_ == null) {
          job_ = new global::Google.Cloud.Ml.V1Beta1.Job();
        }
        Job.MergeFrom(other.Job);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (job_ == null) {
              job_ = new global::Google.Cloud.Ml.V1Beta1.Job();
            }
            input.ReadMessage(job_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request message for the ListJobs method.
  /// </summary>
  public sealed partial class ListJobsRequest : pb::IMessage<ListJobsRequest> {
    private static readonly pb::MessageParser<ListJobsRequest> _parser = new pb::MessageParser<ListJobsRequest>(() => new ListJobsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListJobsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsRequest(ListJobsRequest other) : this() {
      parent_ = other.parent_;
      filter_ = other.filter_;
      pageToken_ = other.pageToken_;
      pageSize_ = other.pageSize_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsRequest Clone() {
      return new ListJobsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    ///  Required. The name of the project for which to list jobs.
    ///
    ///  Authorization: requires `Viewer` role on the specified project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    /// <summary>
    ///  Optional. Specifies the subset of jobs to retrieve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    ///  Optional. A page token to request the next page of results.
    ///
    ///  You get the token from the `next_page_token` field of the response from
    ///  the previous call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 5;
    private int pageSize_;
    /// <summary>
    ///  Optional. The number of jobs to retrieve per "page" of results. If there
    ///  are more remaining results than this number, the response message will
    ///  contain a valid value in the `next_page_token` field.
    ///
    ///  The default value is 20, and the maximum page size is 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListJobsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListJobsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (Filter != other.Filter) return false;
      if (PageToken != other.PageToken) return false;
      if (PageSize != other.PageSize) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (PageSize != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PageSize);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListJobsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
          case 40: {
            PageSize = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Response message for the ListJobs method.
  /// </summary>
  public sealed partial class ListJobsResponse : pb::IMessage<ListJobsResponse> {
    private static readonly pb::MessageParser<ListJobsResponse> _parser = new pb::MessageParser<ListJobsResponse>(() => new ListJobsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListJobsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsResponse(ListJobsResponse other) : this() {
      jobs_ = other.jobs_.Clone();
      nextPageToken_ = other.nextPageToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobsResponse Clone() {
      return new ListJobsResponse(this);
    }

    /// <summary>Field number for the "jobs" field.</summary>
    public const int JobsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Ml.V1Beta1.Job> _repeated_jobs_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Ml.V1Beta1.Job.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Ml.V1Beta1.Job> jobs_ = new pbc::RepeatedField<global::Google.Cloud.Ml.V1Beta1.Job>();
    /// <summary>
    ///  The list of jobs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Ml.V1Beta1.Job> Jobs {
      get { return jobs_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    ///  Optional. Pass this token as the `page_token` field of the request for a
    ///  subsequent call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListJobsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListJobsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!jobs_.Equals(other.jobs_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= jobs_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      jobs_.WriteTo(output, _repeated_jobs_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += jobs_.CalculateSize(_repeated_jobs_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListJobsResponse other) {
      if (other == null) {
        return;
      }
      jobs_.Add(other.jobs_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            jobs_.AddEntriesFrom(input, _repeated_jobs_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request message for the GetJob method.
  /// </summary>
  public sealed partial class GetJobRequest : pb::IMessage<GetJobRequest> {
    private static readonly pb::MessageParser<GetJobRequest> _parser = new pb::MessageParser<GetJobRequest>(() => new GetJobRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJobRequest(GetJobRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJobRequest Clone() {
      return new GetJobRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  Required. The name of the job to get the description of.
    ///
    ///  Authorization: requires `Viewer` role on the parent project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Request message for the CancelJob method.
  /// </summary>
  public sealed partial class CancelJobRequest : pb::IMessage<CancelJobRequest> {
    private static readonly pb::MessageParser<CancelJobRequest> _parser = new pb::MessageParser<CancelJobRequest>(() => new CancelJobRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Ml.V1Beta1.JobServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelJobRequest(CancelJobRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelJobRequest Clone() {
      return new CancelJobRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  Required. The name of the job to cancel.
    ///
    ///  Authorization: requires `Editor` role on the parent project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
