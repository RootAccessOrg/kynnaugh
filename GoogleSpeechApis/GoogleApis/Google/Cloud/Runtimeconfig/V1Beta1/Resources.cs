// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/runtimeconfig/v1beta1/resources.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Runtimeconfig.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/runtimeconfig/v1beta1/resources.proto</summary>
  public static partial class ResourcesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/runtimeconfig/v1beta1/resources.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResourcesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJnb29nbGUvY2xvdWQvcnVudGltZWNvbmZpZy92MWJldGExL3Jlc291cmNl",
            "cy5wcm90bxIiZ29vZ2xlLmNsb3VkLnJ1bnRpbWVjb25maWcudjFiZXRhMRoc",
            "Z29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxoeZ29vZ2xlL3Byb3RvYnVm",
            "L2R1cmF0aW9uLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnBy",
            "b3RvGhdnb29nbGUvcnBjL3N0YXR1cy5wcm90byIyCg1SdW50aW1lQ29uZmln",
            "EgwKBG5hbWUYASABKAkSEwoLZGVzY3JpcHRpb24YAiABKAkiuAEKCFZhcmlh",
            "YmxlEgwKBG5hbWUYASABKAkSDwoFdmFsdWUYAiABKAxIABIOCgR0ZXh0GAUg",
            "ASgJSAASLwoLdXBkYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wEkAKBXN0YXRlGAQgASgOMjEuZ29vZ2xlLmNsb3VkLnJ1bnRp",
            "bWVjb25maWcudjFiZXRhMS5WYXJpYWJsZVN0YXRlQgoKCGNvbnRlbnRzIp0B",
            "CgxFbmRDb25kaXRpb24SUwoLY2FyZGluYWxpdHkYASABKAsyPC5nb29nbGUu",
            "Y2xvdWQucnVudGltZWNvbmZpZy52MWJldGExLkVuZENvbmRpdGlvbi5DYXJk",
            "aW5hbGl0eUgAGisKC0NhcmRpbmFsaXR5EgwKBHBhdGgYASABKAkSDgoGbnVt",
            "YmVyGAIgASgFQgsKCWNvbmRpdGlvbiKqAgoGV2FpdGVyEgwKBG5hbWUYASAB",
            "KAkSKgoHdGltZW91dBgCIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlv",
            "bhJBCgdmYWlsdXJlGAMgASgLMjAuZ29vZ2xlLmNsb3VkLnJ1bnRpbWVjb25m",
            "aWcudjFiZXRhMS5FbmRDb25kaXRpb24SQQoHc3VjY2VzcxgEIAEoCzIwLmdv",
            "b2dsZS5jbG91ZC5ydW50aW1lY29uZmlnLnYxYmV0YTEuRW5kQ29uZGl0aW9u",
            "Ei8KC2NyZWF0ZV90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIMCgRkb25lGAYgASgIEiEKBWVycm9yGAcgASgLMhIuZ29vZ2xlLnJw",
            "Yy5TdGF0dXMqSQoNVmFyaWFibGVTdGF0ZRIeChpWQVJJQUJMRV9TVEFURV9V",
            "TlNQRUNJRklFRBAAEgsKB1VQREFURUQQARILCgdERUxFVEVEEAJCewomY29t",
            "Lmdvb2dsZS5jbG91ZC5ydW50aW1lY29uZmlnLnYxYmV0YTFQAVpPZ29vZ2xl",
            "LmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9jbG91ZC9ydW50aW1l",
            "Y29uZmlnL3YxYmV0YTE7cnVudGltZWNvbmZpZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Runtimeconfig.V1Beta1.VariableState), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Runtimeconfig.V1Beta1.RuntimeConfig), global::Google.Cloud.Runtimeconfig.V1Beta1.RuntimeConfig.Parser, new[]{ "Name", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Runtimeconfig.V1Beta1.Variable), global::Google.Cloud.Runtimeconfig.V1Beta1.Variable.Parser, new[]{ "Name", "Value", "Text", "UpdateTime", "State" }, new[]{ "Contents" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition), global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition.Parser, new[]{ "Cardinality" }, new[]{ "Condition" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition.Types.Cardinality), global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition.Types.Cardinality.Parser, new[]{ "Path", "Number" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Runtimeconfig.V1Beta1.Waiter), global::Google.Cloud.Runtimeconfig.V1Beta1.Waiter.Parser, new[]{ "Name", "Timeout", "Failure", "Success", "CreateTime", "Done", "Error" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///  The `VariableState` describes the last known state of the variable and is
  ///  used during a `variables().watch` call to distinguish the state of the
  ///  variable.
  /// </summary>
  public enum VariableState {
    /// <summary>
    ///  Default variable state.
    /// </summary>
    [pbr::OriginalName("VARIABLE_STATE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    ///  The variable was updated, while `variables().watch` was executing.
    /// </summary>
    [pbr::OriginalName("UPDATED")] Updated = 1,
    /// <summary>
    ///  The variable was deleted, while `variables().watch` was executing.
    /// </summary>
    [pbr::OriginalName("DELETED")] Deleted = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  ///  A RuntimeConfig resource is the primary resource in the Cloud RuntimeConfig
  ///  service. A RuntimeConfig resource consists of metadata and a hierarchy of
  ///  variables.
  /// </summary>
  public sealed partial class RuntimeConfig : pb::IMessage<RuntimeConfig> {
    private static readonly pb::MessageParser<RuntimeConfig> _parser = new pb::MessageParser<RuntimeConfig>(() => new RuntimeConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RuntimeConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Runtimeconfig.V1Beta1.ResourcesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuntimeConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuntimeConfig(RuntimeConfig other) : this() {
      name_ = other.name_;
      description_ = other.description_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuntimeConfig Clone() {
      return new RuntimeConfig(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  The resource name of a runtime config. The name must have the format:
    ///
    ///      projects/[PROJECT_ID]/configs/[CONFIG_NAME]
    ///
    ///  The `[PROJECT_ID]` must be a valid project ID, and `[CONFIG_NAME]` is an
    ///  arbitrary name that matches RFC 1035 segment specification. The length of
    ///  `[CONFIG_NAME]` must be less than 64 bytes.
    ///
    ///  You pick the RuntimeConfig resource name, but the server will validate that
    ///  the name adheres to this format. After you create the resource, you cannot
    ///  change the resource's name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    ///  An optional description of the RuntimeConfig object.
    ///  The length of the description must be less than 256 bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RuntimeConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RuntimeConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RuntimeConfig other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Describes a single variable within a RuntimeConfig resource.
  ///  The name denotes the hierarchical variable name. For example,
  ///  `ports/serving_port` is a valid variable name. The variable value is an
  ///  opaque string and only leaf variables can have values (that is, variables
  ///  that do not have any child variables).
  /// </summary>
  public sealed partial class Variable : pb::IMessage<Variable> {
    private static readonly pb::MessageParser<Variable> _parser = new pb::MessageParser<Variable>(() => new Variable());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Variable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Runtimeconfig.V1Beta1.ResourcesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Variable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Variable(Variable other) : this() {
      name_ = other.name_;
      UpdateTime = other.updateTime_ != null ? other.UpdateTime.Clone() : null;
      state_ = other.state_;
      switch (other.ContentsCase) {
        case ContentsOneofCase.Value:
          Value = other.Value;
          break;
        case ContentsOneofCase.Text:
          Text = other.Text;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Variable Clone() {
      return new Variable(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  The name of the variable resource, in the format:
    ///
    ///      projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]
    ///
    ///  The `[PROJECT_ID]` must be a valid project ID, `[CONFIG_NAME]` must be a
    ///  valid RuntimeConfig reource and `[VARIABLE_NAME]` follows Unix file system
    ///  file path naming.
    ///
    ///  The `[VARIABLE_NAME]` can contain ASCII letters, numbers, slashes and
    ///  dashes. Slashes are used as path element separators and are not part of the
    ///  `[VARIABLE_NAME]` itself, so `[VARIABLE_NAME]` must contain at least one
    ///  non-slash character. Multiple slashes are coalesced into single slash
    ///  character. Each path segment should follow RFC 1035 segment specification.
    ///  The length of a `[VARIABLE_NAME]` must be less than 256 bytes.
    ///
    ///  Once you create a variable, you cannot change the variable name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    /// <summary>
    ///  The binary value of the variable. The length of the value must be less
    ///  than 4096 bytes. Empty values are also accepted. The value must be
    ///  Base64 encoded.
    ///  NB: Only one of value and string_value can be set at the same time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return contentsCase_ == ContentsOneofCase.Value ? (pb::ByteString) contents_ : pb::ByteString.Empty; }
      set {
        contents_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentsCase_ = ContentsOneofCase.Value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 5;
    /// <summary>
    ///  The textual value of the variable. The length of the value must be less
    ///  than 4096 bytes. Empty values are also accepted.
    ///  NB: Only one of value and string_value can be set at the same time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return contentsCase_ == ContentsOneofCase.Text ? (string) contents_ : ""; }
      set {
        contents_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentsCase_ = ContentsOneofCase.Text;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    ///  [Output Only] The time of the last variable update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private global::Google.Cloud.Runtimeconfig.V1Beta1.VariableState state_ = 0;
    /// <summary>
    ///  [Ouput only] The current state of the variable. The variable state indicates
    ///  the outcome of the `variables().watch` call and is visible through the
    ///  `get` and `list` calls.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Runtimeconfig.V1Beta1.VariableState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    private object contents_;
    /// <summary>Enum of possible cases for the "contents" oneof.</summary>
    public enum ContentsOneofCase {
      None = 0,
      Value = 2,
      Text = 5,
    }
    private ContentsOneofCase contentsCase_ = ContentsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentsOneofCase ContentsCase {
      get { return contentsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContents() {
      contentsCase_ = ContentsOneofCase.None;
      contents_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Variable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Variable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      if (Text != other.Text) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (State != other.State) return false;
      if (ContentsCase != other.ContentsCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Value) hash ^= Value.GetHashCode();
      if (contentsCase_ == ContentsOneofCase.Text) hash ^= Text.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      hash ^= (int) contentsCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (contentsCase_ == ContentsOneofCase.Value) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateTime);
      }
      if (State != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (contentsCase_ == ContentsOneofCase.Text) {
        output.WriteRawTag(42);
        output.WriteString(Text);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (contentsCase_ == ContentsOneofCase.Value) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (contentsCase_ == ContentsOneofCase.Text) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Variable other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          updateTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.State != 0) {
        State = other.State;
      }
      switch (other.ContentsCase) {
        case ContentsOneofCase.Value:
          Value = other.Value;
          break;
        case ContentsOneofCase.Text:
          Text = other.Text;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
          case 26: {
            if (updateTime_ == null) {
              updateTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(updateTime_);
            break;
          }
          case 32: {
            state_ = (global::Google.Cloud.Runtimeconfig.V1Beta1.VariableState) input.ReadEnum();
            break;
          }
          case 42: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  The condition that a Waiter resource is waiting for.
  /// </summary>
  public sealed partial class EndCondition : pb::IMessage<EndCondition> {
    private static readonly pb::MessageParser<EndCondition> _parser = new pb::MessageParser<EndCondition>(() => new EndCondition());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Runtimeconfig.V1Beta1.ResourcesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndCondition(EndCondition other) : this() {
      switch (other.ConditionCase) {
        case ConditionOneofCase.Cardinality:
          Cardinality = other.Cardinality.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndCondition Clone() {
      return new EndCondition(this);
    }

    /// <summary>Field number for the "cardinality" field.</summary>
    public const int CardinalityFieldNumber = 1;
    /// <summary>
    ///  The cardinality of the `EndCondition`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition.Types.Cardinality Cardinality {
      get { return conditionCase_ == ConditionOneofCase.Cardinality ? (global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition.Types.Cardinality) condition_ : null; }
      set {
        condition_ = value;
        conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.Cardinality;
      }
    }

    private object condition_;
    /// <summary>Enum of possible cases for the "condition" oneof.</summary>
    public enum ConditionOneofCase {
      None = 0,
      Cardinality = 1,
    }
    private ConditionOneofCase conditionCase_ = ConditionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConditionOneofCase ConditionCase {
      get { return conditionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCondition() {
      conditionCase_ = ConditionOneofCase.None;
      condition_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Cardinality, other.Cardinality)) return false;
      if (ConditionCase != other.ConditionCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (conditionCase_ == ConditionOneofCase.Cardinality) hash ^= Cardinality.GetHashCode();
      hash ^= (int) conditionCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (conditionCase_ == ConditionOneofCase.Cardinality) {
        output.WriteRawTag(10);
        output.WriteMessage(Cardinality);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (conditionCase_ == ConditionOneofCase.Cardinality) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cardinality);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndCondition other) {
      if (other == null) {
        return;
      }
      switch (other.ConditionCase) {
        case ConditionOneofCase.Cardinality:
          Cardinality = other.Cardinality;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition.Types.Cardinality subBuilder = new global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition.Types.Cardinality();
            if (conditionCase_ == ConditionOneofCase.Cardinality) {
              subBuilder.MergeFrom(Cardinality);
            }
            input.ReadMessage(subBuilder);
            Cardinality = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EndCondition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///  A Cardinality condition for the Waiter resource. A cardinality condition is
      ///  met when the number of variables under a specified path prefix reaches a
      ///  predefined number. For example, if you set a Cardinality condition where
      ///  the `path` is set to `/foo` and the number of paths is set to 2, the
      ///  following variables would meet the condition in a RuntimeConfig resource:
      ///
      ///  + `/foo/variable1 = "value1"`
      ///  + `/foo/variable2 = "value2"`
      ///  + `/bar/variable3 = "value3"`
      ///
      ///  It would not would not satisify the same condition with the `number` set to
      ///  3, however, because there is only 2 paths that start with `/foo`.
      ///  Cardinality conditions are recursive; all subtrees under the specific
      ///  path prefix are counted.
      /// </summary>
      public sealed partial class Cardinality : pb::IMessage<Cardinality> {
        private static readonly pb::MessageParser<Cardinality> _parser = new pb::MessageParser<Cardinality>(() => new Cardinality());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Cardinality> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Cardinality() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Cardinality(Cardinality other) : this() {
          path_ = other.path_;
          number_ = other.number_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Cardinality Clone() {
          return new Cardinality(this);
        }

        /// <summary>Field number for the "path" field.</summary>
        public const int PathFieldNumber = 1;
        private string path_ = "";
        /// <summary>
        ///  The root of the variable subtree to monitor. For example, `/foo`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Path {
          get { return path_; }
          set {
            path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "number" field.</summary>
        public const int NumberFieldNumber = 2;
        private int number_;
        /// <summary>
        ///  The number variables under the `path` that must exist to meet this
        ///  condition. Defaults to 1 if not specified.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Number {
          get { return number_; }
          set {
            number_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Cardinality);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Cardinality other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Path != other.Path) return false;
          if (Number != other.Number) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Path.Length != 0) hash ^= Path.GetHashCode();
          if (Number != 0) hash ^= Number.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Path.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Path);
          }
          if (Number != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Number);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Path.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
          }
          if (Number != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Number);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Cardinality other) {
          if (other == null) {
            return;
          }
          if (other.Path.Length != 0) {
            Path = other.Path;
          }
          if (other.Number != 0) {
            Number = other.Number;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Path = input.ReadString();
                break;
              }
              case 16: {
                Number = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  ///  A Waiter resource waits for some end condition within a RuntimeConfig resource
  ///  to be met before it returns. For example, assume you have a distributed
  ///  system where each node writes to a Variable resource indidicating the node's
  ///  readiness as part of the startup process.
  ///
  ///  You then configure a Waiter resource with the success condition set to wait
  ///  until some number of nodes have checked in. Afterwards, your application
  ///  runs some arbitrary code after the condition has been met and the waiter
  ///  returns successfully.
  ///
  ///  Once created, a Waiter resource is immutable.
  ///
  ///  To learn more about using waiters, read the
  ///  [Creating a Waiter](/deployment-manager/runtime-configurator/creating-a-waiter)
  ///  documentation.
  /// </summary>
  public sealed partial class Waiter : pb::IMessage<Waiter> {
    private static readonly pb::MessageParser<Waiter> _parser = new pb::MessageParser<Waiter>(() => new Waiter());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Waiter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Runtimeconfig.V1Beta1.ResourcesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Waiter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Waiter(Waiter other) : this() {
      name_ = other.name_;
      Timeout = other.timeout_ != null ? other.Timeout.Clone() : null;
      Failure = other.failure_ != null ? other.Failure.Clone() : null;
      Success = other.success_ != null ? other.Success.Clone() : null;
      CreateTime = other.createTime_ != null ? other.CreateTime.Clone() : null;
      done_ = other.done_;
      Error = other.error_ != null ? other.Error.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Waiter Clone() {
      return new Waiter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///  The name of the Waiter resource, in the format:
    ///
    ///      projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]
    ///
    ///  The `[PROJECT_ID]` must be a valid Google Cloud project ID,
    ///  the `[CONFIG_NAME]` must be a valid RuntimeConfig resource, the
    ///  `[WAITER_NAME]` must match RFC 1035 segment specification, and the length
    ///  of `[WAITER_NAME]` must be less than 64 bytes.
    ///
    ///  After you create a Waiter resource, you cannot change the resource name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration timeout_;
    /// <summary>
    ///  [Required] Specifies the timeout of the waiter in seconds, beginning from
    ///  the instant that `waiters().create` method is called. If this time elapses
    ///  before the success or failure conditions are met, the waiter fails and sets
    ///  the `error` code to `DEADLINE_EXCEEDED`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "failure" field.</summary>
    public const int FailureFieldNumber = 3;
    private global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition failure_;
    /// <summary>
    ///  [Optional] The failure condition of this waiter. If this condition is met,
    ///  `done` will be set to `true` and the `error` code will be set to `ABORTED`.
    ///  The failure condition takes precedence over the success condition. If both
    ///  conditions are met, a failure will be indicated. This value is optional; if
    ///  no failure condition is set, the only failure scenario will be a timeout.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition Failure {
      get { return failure_; }
      set {
        failure_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 4;
    private global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition success_;
    /// <summary>
    ///  [Required] The success condition. If this condition is met, `done` will be
    ///  set to `true` and the `error` value will remain unset. The failure condition
    ///  takes precedence over the success condition. If both conditions are met, a
    ///  failure will be indicated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    ///  [Output Only] The instant at which this Waiter resource was created. Adding
    ///  the value of `timeout` to this instant yields the timeout deadline for the
    ///  waiter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "done" field.</summary>
    public const int DoneFieldNumber = 6;
    private bool done_;
    /// <summary>
    ///  [Output Only] If the value is `false`, it means the waiter is still waiting
    ///  for one of its conditions to be met.
    ///
    ///  If true, the waiter has finished. If the waiter finished due to a timeout
    ///  or failure, `error` will be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Done {
      get { return done_; }
      set {
        done_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 7;
    private global::Google.Rpc.Status error_;
    /// <summary>
    ///  [Output Only] If the waiter ended due to a failure or timeout, this value
    ///  will be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Waiter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Waiter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Timeout, other.Timeout)) return false;
      if (!object.Equals(Failure, other.Failure)) return false;
      if (!object.Equals(Success, other.Success)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (Done != other.Done) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (timeout_ != null) hash ^= Timeout.GetHashCode();
      if (failure_ != null) hash ^= Failure.GetHashCode();
      if (success_ != null) hash ^= Success.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (Done != false) hash ^= Done.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (timeout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timeout);
      }
      if (failure_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Failure);
      }
      if (success_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Success);
      }
      if (createTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreateTime);
      }
      if (Done != false) {
        output.WriteRawTag(48);
        output.WriteBool(Done);
      }
      if (error_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Error);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (timeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timeout);
      }
      if (failure_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Failure);
      }
      if (success_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Success);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (Done != false) {
        size += 1 + 1;
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Waiter other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.timeout_ != null) {
        if (timeout_ == null) {
          timeout_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Timeout.MergeFrom(other.Timeout);
      }
      if (other.failure_ != null) {
        if (failure_ == null) {
          failure_ = new global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition();
        }
        Failure.MergeFrom(other.Failure);
      }
      if (other.success_ != null) {
        if (success_ == null) {
          success_ = new global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition();
        }
        Success.MergeFrom(other.Success);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.Done != false) {
        Done = other.Done;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Google.Rpc.Status();
        }
        Error.MergeFrom(other.Error);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (timeout_ == null) {
              timeout_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(timeout_);
            break;
          }
          case 26: {
            if (failure_ == null) {
              failure_ = new global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition();
            }
            input.ReadMessage(failure_);
            break;
          }
          case 34: {
            if (success_ == null) {
              success_ = new global::Google.Cloud.Runtimeconfig.V1Beta1.EndCondition();
            }
            input.ReadMessage(success_);
            break;
          }
          case 42: {
            if (createTime_ == null) {
              createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(createTime_);
            break;
          }
          case 48: {
            Done = input.ReadBool();
            break;
          }
          case 58: {
            if (error_ == null) {
              error_ = new global::Google.Rpc.Status();
            }
            input.ReadMessage(error_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
