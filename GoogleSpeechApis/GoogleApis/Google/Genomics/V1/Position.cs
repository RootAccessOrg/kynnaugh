// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/position.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Genomics.V1 {

  /// <summary>Holder for reflection information generated from google/genomics/v1/position.proto</summary>
  public static partial class PositionReflection {

    #region Descriptor
    /// <summary>File descriptor for google/genomics/v1/position.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PositionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFnb29nbGUvZ2Vub21pY3MvdjEvcG9zaXRpb24ucHJvdG8SEmdvb2dsZS5n",
            "ZW5vbWljcy52MRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90byJMCghQ",
            "b3NpdGlvbhIWCg5yZWZlcmVuY2VfbmFtZRgBIAEoCRIQCghwb3NpdGlvbhgC",
            "IAEoAxIWCg5yZXZlcnNlX3N0cmFuZBgDIAEoCEJoChZjb20uZ29vZ2xlLmdl",
            "bm9taWNzLnYxQg1Qb3NpdGlvblByb3RvUAFaOmdvb2dsZS5nb2xhbmcub3Jn",
            "L2dlbnByb3RvL2dvb2dsZWFwaXMvZ2Vub21pY3MvdjE7Z2Vub21pY3P4AQFi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Genomics.V1.Position), global::Google.Genomics.V1.Position.Parser, new[]{ "ReferenceName", "Position_", "ReverseStrand" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  An abstraction for referring to a genomic position, in relation to some
  ///  already known reference. For now, represents a genomic position as a
  ///  reference name, a base number on that reference (0-based), and a
  ///  determination of forward or reverse strand.
  /// </summary>
  public sealed partial class Position : pb::IMessage<Position> {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Genomics.V1.PositionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position(Position other) : this() {
      referenceName_ = other.referenceName_;
      position_ = other.position_;
      reverseStrand_ = other.reverseStrand_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "reference_name" field.</summary>
    public const int ReferenceNameFieldNumber = 1;
    private string referenceName_ = "";
    /// <summary>
    ///  The name of the reference in whatever reference set is being used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferenceName {
      get { return referenceName_; }
      set {
        referenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int Position_FieldNumber = 2;
    private long position_;
    /// <summary>
    ///  The 0-based offset from the start of the forward strand for that reference.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Position_ {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "reverse_strand" field.</summary>
    public const int ReverseStrandFieldNumber = 3;
    private bool reverseStrand_;
    /// <summary>
    ///  Whether this position is on the reverse strand, as opposed to the forward
    ///  strand.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReverseStrand {
      get { return reverseStrand_; }
      set {
        reverseStrand_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReferenceName != other.ReferenceName) return false;
      if (Position_ != other.Position_) return false;
      if (ReverseStrand != other.ReverseStrand) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReferenceName.Length != 0) hash ^= ReferenceName.GetHashCode();
      if (Position_ != 0L) hash ^= Position_.GetHashCode();
      if (ReverseStrand != false) hash ^= ReverseStrand.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReferenceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReferenceName);
      }
      if (Position_ != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Position_);
      }
      if (ReverseStrand != false) {
        output.WriteRawTag(24);
        output.WriteBool(ReverseStrand);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferenceName);
      }
      if (Position_ != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Position_);
      }
      if (ReverseStrand != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.ReferenceName.Length != 0) {
        ReferenceName = other.ReferenceName;
      }
      if (other.Position_ != 0L) {
        Position_ = other.Position_;
      }
      if (other.ReverseStrand != false) {
        ReverseStrand = other.ReverseStrand;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ReferenceName = input.ReadString();
            break;
          }
          case 16: {
            Position_ = input.ReadInt64();
            break;
          }
          case 24: {
            ReverseStrand = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
